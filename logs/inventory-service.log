2024-03-08 14:34:34,339 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:34:34,384 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:07:32+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:34:34,385 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:34:34,385 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:34:34,437 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:34:34,438 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:34:34,489 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:34:34,489 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:34:13+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:34:34,490 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:34:34,490 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:34:34,503 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:34:34,504 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:34:35,367 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:34:35,368 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:34:35,422 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:34:35,423 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:34:35,428 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:34:35,429 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:34:36,414 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:34:36,414 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:34:36,416 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:34:36,416 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:34:36,716 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:34:36,717 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:34:13+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:34:36,717 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:34:36,717 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:34:36,736 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:34:36,737 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:07:32+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:34:36,739 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:34:36,740 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:34:37,405 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:34:37,405 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:34:38,395 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:34:38,397 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:34:38,867 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:34:38,867 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:34:13+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:34:38,868 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:34:38,868 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:34:39,158 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:34:39,158 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:07:32+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:34:39,159 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:34:39,160 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:34:39,424 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:34:39,424 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:34:40,395 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:34:40,395 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:34:40,397 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:34:40,398 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:34:40,413 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:34:40,414 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:34:40,423 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:34:40,423 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:34:40,426 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:34:40,427 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:34:40,908 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:34:40,909 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:34:13+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:34:40,909 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:34:40,909 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:34:41,347 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:34:41,348 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:07:32+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:34:41,413 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:34:41,413 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:34:42,407 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:34:42,407 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:34:42,850 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:34:42,850 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:53:53+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:34:42,853 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:34:42,972 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:34:42,973 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:34:39+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:34:42,973 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:34:42,974 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:34:43,127 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:34:43,127 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:34:43,128 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:34:43,399 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:34:43,399 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:34:43,651 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:34:43,654 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:07:32+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:34:43,655 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:34:43,655 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:34:44,397 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:34:44,397 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:34:45,101 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:34:45,103 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:34:39+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:34:45,104 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:34:45,104 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:34:45,421 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:34:45,421 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:34:45,454 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:34:45,454 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:34:45,532 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:34:45,532 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:34:46,149 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:34:46,149 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:07:32+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:34:46,411 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:34:46,411 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:34:46,414 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:34:46,415 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:34:48,404 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:34:48,404 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:07:32+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:34:48,405 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:34:48,405 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:34:50,481 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:34:50,481 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:34:50,487 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:34:50,487 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:34:50,515 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:34:50,515 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:34:50,518 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:34:50,518 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:34:50,543 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:34:50,543 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:34:50,547 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:34:50,547 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:34:50,571 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:34:50,572 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:34:50,737 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:34:50,738 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:07:32+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:34:52,539 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:34:52,539 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:53:24+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:34:52,541 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:34:52,579 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:34:52,579 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:34:39+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:34:52,692 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:34:52,693 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:34:52,693 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:34:53,114 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:34:53,115 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:07:32+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:34:53,117 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:34:53,117 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:34:54,699 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:34:54,700 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:34:39+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:34:54,700 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:34:54,700 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:34:55,412 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:34:55,412 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:07:32+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:34:55,601 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:34:55,601 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:34:55,603 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:34:55,603 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:34:56,816 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:34:56,816 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:34:39+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:34:57,851 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:34:57,851 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:07:33+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:34:58,940 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:34:58,940 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:34:39+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:34:58,941 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:34:58,941 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:35:00,122 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:35:00,122 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:07:33+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:00,629 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:35:00,629 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:35:00,633 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:35:00,633 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:35:00,658 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:35:00,658 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:35:01,065 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:35:01,065 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:34:39+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:01,066 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:35:01,066 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:35:01,522 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:35:01,522 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:53:03+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:35:01,524 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:35:01,822 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:35:01,823 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:35:01,823 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:35:03,183 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:35:03,184 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:34:39+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:05,448 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:35:05,449 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:34:39+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:05,449 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:35:05,449 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:35:05,686 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:35:05,686 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:35:05,691 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:35:05,691 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:35:07,565 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:35:07,565 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:34:39+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:07,566 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:35:07,566 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:35:08,757 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:35:08,758 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:52:49+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:35:08,760 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:35:08,914 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:35:08,914 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:35:08,915 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:35:09,609 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:35:09,610 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:04+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:09,610 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:35:09,611 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:35:10,659 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:35:10,660 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:07:33+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:10,660 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:35:10,661 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:35:10,718 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:35:10,718 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:35:10,741 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:35:10,741 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:35:10,743 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:35:10,743 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:35:10,771 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:35:10,772 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:35:11,666 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:35:11,666 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:04+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:11,667 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:35:11,667 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:35:12,826 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:35:12,827 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:07:33+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:12,827 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:35:12,827 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:35:15,191 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:35:15,191 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:07:33+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:15,192 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:35:15,192 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:35:15,799 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:35:15,799 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:35:15,801 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:35:15,801 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:35:15,826 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:35:15,826 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:35:17,548 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:35:17,548 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:07:33+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:18,290 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:35:18,290 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:52:42+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:35:18,292 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:35:18,536 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:35:18,537 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:35:18,537 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:35:20,115 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:35:20,115 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:07:33+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:20,116 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:35:20,116 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:35:20,855 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:35:20,856 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:35:35,625 INFO (AbstractNettyRemotingClient.java:396)- channel [id: 0x38d3aec2, L:/192.168.2.230:1585 - R:/192.168.2.241:8091] read idle.
2024-03-08 14:35:35,625 INFO (NettyPoolableFactory.java:120)- will destroy channel:[id: 0x38d3aec2, L:/192.168.2.230:1585 - R:/192.168.2.241:8091]
2024-03-08 14:35:35,626 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x38d3aec2, L:/192.168.2.230:1585 - R:/192.168.2.241:8091]) will closed
2024-03-08 14:35:35,632 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:35:35,633 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:04+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:35,634 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:35:35,634 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:35:35,634 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:07:55+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.6\n}"}
2024-03-08 14:35:35,634 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:08:25+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:35:35,635 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x38d3aec2, L:/192.168.2.230:1585 ! R:/192.168.2.241:8091]) will closed
2024-03-08 14:35:35,635 INFO (NettyClientChannelManager.java:124)- return to pool, rm channel:[id: 0x38d3aec2, L:/192.168.2.230:1585 ! R:/192.168.2.241:8091]
2024-03-08 14:35:35,635 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:35:35,638 INFO (NettyPoolableFactory.java:133)- channel valid false,channel:[id: 0x38d3aec2, L:/192.168.2.230:1585 ! R:/192.168.2.241:8091]
2024-03-08 14:35:35,638 INFO (NettyPoolableFactory.java:120)- will destroy channel:[id: 0x38d3aec2, L:/192.168.2.230:1585 ! R:/192.168.2.241:8091]
2024-03-08 14:35:35,638 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:35:35,657 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:35:35,657 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x38d3aec2, L:/192.168.2.230:1585 ! R:/192.168.2.241:8091]) will closed
2024-03-08 14:35:35,657 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:35:35,657 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x38d3aec2, L:/192.168.2.230:1585 ! R:/192.168.2.241:8091]) will closed
2024-03-08 14:35:35,638 INFO (AbstractNettyRemotingClient.java:396)- channel [id: 0x26091d41, L:/192.168.2.230:1389 - R:/192.168.2.241:8091] read idle.
2024-03-08 14:35:35,657 INFO (AbstractNettyRemotingClient.java:384)- channel inactive: [id: 0x38d3aec2, L:/192.168.2.230:1585 ! R:/192.168.2.241:8091]
2024-03-08 14:35:35,657 INFO (NettyPoolableFactory.java:120)- will destroy channel:[id: 0x26091d41, L:/192.168.2.230:1389 - R:/192.168.2.241:8091]
2024-03-08 14:35:35,657 INFO (NettyPoolableFactory.java:133)- channel valid false,channel:[id: 0x38d3aec2, L:/192.168.2.230:1585 ! R:/192.168.2.241:8091]
2024-03-08 14:35:35,657 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x26091d41, L:/192.168.2.230:1389 - R:/192.168.2.241:8091]) will closed
2024-03-08 14:35:35,657 INFO (NettyPoolableFactory.java:120)- will destroy channel:[id: 0x38d3aec2, L:/192.168.2.230:1585 ! R:/192.168.2.241:8091]
2024-03-08 14:35:35,654 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:35:35,657 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x38d3aec2, L:/192.168.2.230:1585 ! R:/192.168.2.241:8091]) will closed
2024-03-08 14:35:35,658 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x26091d41, L:/192.168.2.230:1389 ! R:/192.168.2.241:8091]) will closed
2024-03-08 14:35:35,658 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x38d3aec2, L:/192.168.2.230:1585 ! R:/192.168.2.241:8091]) will closed
2024-03-08 14:35:35,658 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:08:05+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:35:35,654 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:35:35,660 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:07:33+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:35,660 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:35:35,661 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:35:35,658 INFO (NettyClientChannelManager.java:124)- return to pool, rm channel:[id: 0x26091d41, L:/192.168.2.230:1389 ! R:/192.168.2.241:8091]
2024-03-08 14:35:35,661 INFO (NettyPoolableFactory.java:133)- channel valid false,channel:[id: 0x26091d41, L:/192.168.2.230:1389 ! R:/192.168.2.241:8091]
2024-03-08 14:35:35,659 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:35:35,661 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:35:35,661 INFO (NettyPoolableFactory.java:120)- will destroy channel:[id: 0x26091d41, L:/192.168.2.230:1389 ! R:/192.168.2.241:8091]
2024-03-08 14:35:35,655 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:35:35,661 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x26091d41, L:/192.168.2.230:1389 ! R:/192.168.2.241:8091]) will closed
2024-03-08 14:35:35,661 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:04+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:35,661 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x26091d41, L:/192.168.2.230:1389 ! R:/192.168.2.241:8091]) will closed
2024-03-08 14:35:35,659 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:35:35,659 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:35:35,655 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:35:35,661 INFO (AbstractNettyRemotingClient.java:384)- channel inactive: [id: 0x26091d41, L:/192.168.2.230:1389 ! R:/192.168.2.241:8091]
2024-03-08 14:35:38,167 INFO (NettyPoolableFactory.java:133)- channel valid false,channel:[id: 0x26091d41, L:/192.168.2.230:1389 ! R:/192.168.2.241:8091]
2024-03-08 14:35:38,167 INFO (NettyPoolableFactory.java:120)- will destroy channel:[id: 0x26091d41, L:/192.168.2.230:1389 ! R:/192.168.2.241:8091]
2024-03-08 14:35:38,167 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x26091d41, L:/192.168.2.230:1389 ! R:/192.168.2.241:8091]) will closed
2024-03-08 14:35:35,655 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:35:38,167 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:04+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:39,176 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:35:39,176 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:35:35,655 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:35:39,176 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:04+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:39,177 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:35:39,912 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:35:39,913 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:35:39,914 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:35:39,914 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:29+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:39,915 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x26091d41, L:/192.168.2.230:1389 ! R:/192.168.2.241:8091]) will closed
2024-03-08 14:35:39,918 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:35:39,919 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:08:45+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.5\n}"}
2024-03-08 14:35:35,656 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:35:35,655 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:35:39,920 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:35:39,920 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:07:45+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:35,659 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:35:40,534 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:04+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:35,660 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:35:35,661 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:35:38,165 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:04+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:40,555 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:08:15+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.8\n}"}
2024-03-08 14:35:38,166 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:04+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:39,911 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:35:41,209 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:29+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:39,914 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:08:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.6\n}"}
2024-03-08 14:35:41,217 INFO (NettyClientChannelManager.java:99)- will connect to 192.168.2.241:8091
2024-03-08 14:35:41,217 INFO (RmNettyRemotingClient.java:244)- RM will register :jdbc:mysql://192.168.2.241:6033/vapp_inventory
2024-03-08 14:35:41,217 INFO (NettyPoolableFactory.java:56)- NettyPool create channel to transactionRole:RMROLE,address:192.168.2.241:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.2.241:6033/vapp_inventory', applicationId='inventory-service', transactionServiceGroup='my_test_tx_group'} >
2024-03-08 14:35:41,220 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:35:41,220 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:35:41,221 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:29+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:41,221 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:35:44,885 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:35:44,886 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:08:55+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:35:44,902 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:35:44,904 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:29+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:44,905 INFO (RmNettyRemotingClient.java:151)- register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x87dcdf7c, L:/192.168.2.230:27112 - R:/192.168.2.241:8091]
2024-03-08 14:35:44,906 INFO (NettyPoolableFactory.java:81)- register success, cost 22 ms, version:1.3.0,role:RMROLE,channel:[id: 0x87dcdf7c, L:/192.168.2.230:27112 - R:/192.168.2.241:8091]
2024-03-08 14:35:44,902 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:35:44,906 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:09:05+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.6\n}"}
2024-03-08 14:35:45,124 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:35:45,124 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:29+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:45,571 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:35:45,572 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:52:41+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:35:45,573 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:35:45,991 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:35:46,031 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:35:46,031 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:09:15+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:35:46,131 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:35:46,131 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:35:48,412 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:35:48,413 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:09:25+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.6\n}"}
2024-03-08 14:35:48,414 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:35:48,414 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:35:48,415 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:35:48,416 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:29+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:48,417 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:35:48,417 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:35:49,372 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:35:49,372 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:29+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:50,645 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:35:50,645 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:09:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:35:51,157 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:35:51,158 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:35:52,290 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:35:52,291 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:29+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:53,027 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:35:53,027 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:09:45+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:35:53,028 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:35:53,028 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:35:53,302 WARN (NettyClientChannelManager.java:244)- channel null is not active after long wait, close it.
2024-03-08 14:35:53,303 INFO (NettyClientChannelManager.java:99)- will connect to 192.168.2.241:8091
2024-03-08 14:35:53,303 INFO (NettyPoolableFactory.java:56)- NettyPool create channel to transactionRole:TMROLE,address:192.168.2.241:8091,msg:< RegisterTMRequest{applicationId='inventory-service', transactionServiceGroup='my_test_tx_group'} >
2024-03-08 14:35:53,311 INFO (TmNettyRemotingClient.java:138)- register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xd9e45772, L:/192.168.2.230:27123 - R:/192.168.2.241:8091]
2024-03-08 14:35:53,311 INFO (NettyPoolableFactory.java:81)- register success, cost 6 ms, version:1.3.0,role:TMROLE,channel:[id: 0xd9e45772, L:/192.168.2.230:27123 - R:/192.168.2.241:8091]
2024-03-08 14:35:53,611 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:35:53,611 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:29+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:54,456 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:35:54,456 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:51:58+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:35:54,458 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:35:54,706 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:35:55,470 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:35:55,470 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:09:55+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.6\n}"}
2024-03-08 14:35:55,723 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:35:55,723 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:29+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:35:56,185 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:35:56,185 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:36:00,010 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:36:00,010 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:53+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:36:00,011 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:36:00,012 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:36:00,014 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:36:00,015 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:53+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:36:00,016 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:36:00,017 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:10:05+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.6\n}"}
2024-03-08 14:36:00,017 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:36:00,018 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:36:00,101 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:36:00,101 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:10:15+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:36:01,214 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:36:01,214 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:36:02,068 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:36:02,068 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:36:05,079 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:36:05,080 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:10:25+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:36:05,082 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:36:05,083 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:10:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:36:06,091 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:36:06,092 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:51:30+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:36:06,096 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:36:06,276 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:36:06,276 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:36:08,097 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:36:08,100 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:36:08,100 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:36:08,102 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:36:08,103 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:53+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:36:08,896 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:36:08,896 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:10:45+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:36:09,542 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:36:09,542 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:10:55+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:36:11,341 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:36:11,342 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:36:14,770 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:36:14,771 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:36:14,773 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:36:14,773 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:36:14,770 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:36:14,774 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:11:05+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:36:15,742 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:36:15,743 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:11:15+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:36:15,752 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:36:15,752 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:36:15,754 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:36:15,754 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:36:16,438 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:36:16,438 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:36:17,241 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:36:17,242 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:11:25+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:36:17,246 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:36:17,246 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:50:10+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:36:17,248 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:36:17,420 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:36:17,420 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:53+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:36:17,458 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:36:18,984 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:36:18,984 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:11:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:36:18,985 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:36:18,985 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:36:19,550 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:36:19,551 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:53+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:36:19,551 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:36:19,551 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:36:21,467 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:36:21,468 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:36:24,981 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:36:24,981 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:53+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:36:24,982 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:36:24,982 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:53+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:36:24,981 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:36:24,983 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:36:32,475 INFO (AbstractNettyRemotingClient.java:396)- channel [id: 0xd9e45772, L:/192.168.2.230:27123 - R:/192.168.2.241:8091] read idle.
2024-03-08 14:36:32,475 INFO (NettyPoolableFactory.java:120)- will destroy channel:[id: 0xd9e45772, L:/192.168.2.230:27123 - R:/192.168.2.241:8091]
2024-03-08 14:36:32,475 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xd9e45772, L:/192.168.2.230:27123 - R:/192.168.2.241:8091]) will closed
2024-03-08 14:36:32,475 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xd9e45772, L:/192.168.2.230:27123 ! R:/192.168.2.241:8091]) will closed
2024-03-08 14:36:32,475 INFO (NettyClientChannelManager.java:124)- return to pool, rm channel:[id: 0xd9e45772, L:/192.168.2.230:27123 ! R:/192.168.2.241:8091]
2024-03-08 14:36:32,475 INFO (NettyPoolableFactory.java:133)- channel valid false,channel:[id: 0xd9e45772, L:/192.168.2.230:27123 ! R:/192.168.2.241:8091]
2024-03-08 14:36:32,475 INFO (NettyPoolableFactory.java:120)- will destroy channel:[id: 0xd9e45772, L:/192.168.2.230:27123 ! R:/192.168.2.241:8091]
2024-03-08 14:36:32,475 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xd9e45772, L:/192.168.2.230:27123 ! R:/192.168.2.241:8091]) will closed
2024-03-08 14:36:32,476 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xd9e45772, L:/192.168.2.230:27123 ! R:/192.168.2.241:8091]) will closed
2024-03-08 14:36:32,476 INFO (AbstractNettyRemotingClient.java:384)- channel inactive: [id: 0xd9e45772, L:/192.168.2.230:27123 ! R:/192.168.2.241:8091]
2024-03-08 14:36:32,476 INFO (NettyPoolableFactory.java:133)- channel valid false,channel:[id: 0xd9e45772, L:/192.168.2.230:27123 ! R:/192.168.2.241:8091]
2024-03-08 14:36:32,476 INFO (NettyPoolableFactory.java:120)- will destroy channel:[id: 0xd9e45772, L:/192.168.2.230:27123 ! R:/192.168.2.241:8091]
2024-03-08 14:36:32,476 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xd9e45772, L:/192.168.2.230:27123 ! R:/192.168.2.241:8091]) will closed
2024-03-08 14:36:32,476 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xd9e45772, L:/192.168.2.230:27123 ! R:/192.168.2.241:8091]) will closed
2024-03-08 14:36:32,478 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:36:32,491 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:36:43+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:36:32,491 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:36:32,491 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:36:32,490 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:36:32,492 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:36:43+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:36:32,492 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:36:32,492 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:54+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:36:32,492 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:36:32,492 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:36:32,493 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:36:32,493 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:36:32,493 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:36:32,493 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:12:05+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:36:32,493 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:36:32,493 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:11:55+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.9\n}"}
2024-03-08 14:36:33,738 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:36:33,738 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:54+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:36:33,739 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:36:33,739 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:38:47+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:36:32,482 INFO (AbstractNettyRemotingClient.java:396)- channel [id: 0x87dcdf7c, L:/192.168.2.230:27112 - R:/192.168.2.241:8091] read idle.
2024-03-08 14:36:33,742 INFO (NettyPoolableFactory.java:120)- will destroy channel:[id: 0x87dcdf7c, L:/192.168.2.230:27112 - R:/192.168.2.241:8091]
2024-03-08 14:36:33,742 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:36:32,482 INFO (NettyClientChannelManager.java:99)- will connect to 192.168.2.241:8091
2024-03-08 14:36:33,743 INFO (NettyPoolableFactory.java:56)- NettyPool create channel to transactionRole:TMROLE,address:192.168.2.241:8091,msg:< RegisterTMRequest{applicationId='inventory-service', transactionServiceGroup='my_test_tx_group'} >
2024-03-08 14:36:33,742 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x87dcdf7c, L:/192.168.2.230:27112 - R:/192.168.2.241:8091]) will closed
2024-03-08 14:36:33,750 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x87dcdf7c, L:/192.168.2.230:27112 ! R:/192.168.2.241:8091]) will closed
2024-03-08 14:36:33,751 INFO (NettyClientChannelManager.java:124)- return to pool, rm channel:[id: 0x87dcdf7c, L:/192.168.2.230:27112 ! R:/192.168.2.241:8091]
2024-03-08 14:36:33,751 INFO (NettyPoolableFactory.java:133)- channel valid false,channel:[id: 0x87dcdf7c, L:/192.168.2.230:27112 ! R:/192.168.2.241:8091]
2024-03-08 14:36:33,751 INFO (NettyPoolableFactory.java:120)- will destroy channel:[id: 0x87dcdf7c, L:/192.168.2.230:27112 ! R:/192.168.2.241:8091]
2024-03-08 14:36:33,751 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x87dcdf7c, L:/192.168.2.230:27112 ! R:/192.168.2.241:8091]) will closed
2024-03-08 14:36:33,751 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x87dcdf7c, L:/192.168.2.230:27112 ! R:/192.168.2.241:8091]) will closed
2024-03-08 14:36:33,751 INFO (AbstractNettyRemotingClient.java:384)- channel inactive: [id: 0x87dcdf7c, L:/192.168.2.230:27112 ! R:/192.168.2.241:8091]
2024-03-08 14:36:33,751 INFO (NettyPoolableFactory.java:133)- channel valid false,channel:[id: 0x87dcdf7c, L:/192.168.2.230:27112 ! R:/192.168.2.241:8091]
2024-03-08 14:36:33,751 INFO (NettyPoolableFactory.java:120)- will destroy channel:[id: 0x87dcdf7c, L:/192.168.2.230:27112 ! R:/192.168.2.241:8091]
2024-03-08 14:36:33,752 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x87dcdf7c, L:/192.168.2.230:27112 ! R:/192.168.2.241:8091]) will closed
2024-03-08 14:36:33,752 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x87dcdf7c, L:/192.168.2.230:27112 ! R:/192.168.2.241:8091]) will closed
2024-03-08 14:36:33,757 INFO (TmNettyRemotingClient.java:138)- register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x6864db0d, L:/192.168.2.230:27159 - R:/192.168.2.241:8091]
2024-03-08 14:36:33,757 INFO (NettyPoolableFactory.java:81)- register success, cost 5 ms, version:1.3.0,role:TMROLE,channel:[id: 0x6864db0d, L:/192.168.2.230:27159 - R:/192.168.2.241:8091]
2024-03-08 14:36:33,980 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:36:33,980 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:12:15+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:36:33,980 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:36:33,980 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:36:34,022 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:36:34,382 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:36:34,382 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:36:43+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:36:36,473 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:36:36,474 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:12:25+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:36:36,517 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:36:36,517 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:36:43+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:36:36,579 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:36:36,579 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:36:40,386 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:36:40,386 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:36:40,754 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:36:40,754 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:36:40,756 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:36:40,756 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:36:40,757 INFO (NettyClientChannelManager.java:99)- will connect to 192.168.2.241:8091
2024-03-08 14:36:40,757 INFO (RmNettyRemotingClient.java:244)- RM will register :jdbc:mysql://192.168.2.241:6033/vapp_inventory
2024-03-08 14:36:40,757 INFO (NettyPoolableFactory.java:56)- NettyPool create channel to transactionRole:RMROLE,address:192.168.2.241:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.2.241:6033/vapp_inventory', applicationId='inventory-service', transactionServiceGroup='my_test_tx_group'} >
2024-03-08 14:36:40,759 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:36:40,759 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:36:43+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:36:40,760 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:36:40,761 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:12:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:36:40,762 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:36:40,762 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:36:40,961 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:36:40,963 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:38:47+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:36:41,393 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:36:41,394 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:36:43+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:36:41,395 INFO (RmNettyRemotingClient.java:151)- register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xcf0216ac, L:/192.168.2.230:27166 - R:/192.168.2.241:8091]
2024-03-08 14:36:41,395 INFO (NettyPoolableFactory.java:81)- register success, cost 633 ms, version:1.3.0,role:RMROLE,channel:[id: 0xcf0216ac, L:/192.168.2.230:27166 - R:/192.168.2.241:8091]
2024-03-08 14:36:41,395 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:36:41,395 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:12:45+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:36:41,396 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:36:41,396 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:36:41,396 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:36:41,585 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:36:41,691 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:36:41,691 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:36:42,895 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:36:42,896 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:36:44+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:36:43,469 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:36:43,469 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:12:55+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.9\n}"}
2024-03-08 14:36:45,013 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:36:45,013 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:36:44+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:36:45,781 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:36:45,781 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:13:05+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:36:46,712 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:36:46,712 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:38:47+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:36:46,714 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:36:46,719 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:36:46,719 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:36:47,011 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:36:47,139 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:36:47,139 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:36:44+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:36:47,139 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:36:47,140 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:36:48,163 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:36:48,164 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:13:15+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:36:48,164 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:36:48,164 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:36:48,427 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:256,threadName:http-nio-852-exec-23,Seata_XID:192.168.2.241:8091:509375684653621248,Seata_branchType:AT
2024-03-08 14:36:48,429 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:36:48,430 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:36:48,431 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:36:48,431 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:36:48,435 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:36:48,436 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:36:48,437 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 476(Integer)
2024-03-08 14:36:48,443 INFO (SQLLogger.java:73)- Logic SQL: SELECT * FROM vaccine_release LIMIT 1
2024-03-08 14:36:48,443 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:36:48,459 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:36:48,459 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:36:48,462 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:36:48,463 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:36:48,466 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:36:48,466 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:36:48,890 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 14:36:48,890 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:36:49,242 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 14:36:49,258 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:36:49,258 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:36:44+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:36:49,259 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:36:49,260 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:36:50,470 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:36:50,471 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:13:25+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:36:51,340 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509375684653621248,branchId=509375685899329537,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 14:36:51,340 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509375684653621248 509375685899329537 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 14:36:51,340 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 14:36:51,385 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:36:51,385 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:36:44+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:36:51,627 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 14:36:51,627 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:36:51,748 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:36:51,749 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:36:51,787 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:36:51,788 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:36:52,883 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:36:52,883 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:38:44+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:36:52,885 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:36:52,886 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:13:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:36:52,909 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:36:53,186 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:36:53,186 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:36:53,186 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:36:53,503 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:36:53,504 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:36:44+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:36:55,139 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:36:55,140 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:13:45+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:36:55,622 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:36:55,623 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:36:44+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:36:56,830 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:36:56,831 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:36:56,841 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:36:56,841 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:36:56,845 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:36:56,845 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:36:57,543 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:36:57,543 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:13:56+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.9\n}"}
2024-03-08 14:36:57,880 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:36:57,880 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:36:44+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:36:57,881 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:36:57,881 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:36:59,464 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:36:59,464 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:18:27+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:36:59,467 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:36:59,748 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:36:59,988 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:36:59,988 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:36:44+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:00,049 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:37:00,049 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:14:06+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:37:00,050 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:37:00,050 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:37:01,880 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:37:01,881 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:37:01,983 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:01,983 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:36:44+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:02,164 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:37:02,164 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:14:16+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:37:04,107 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:04,108 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:36:44+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:04,108 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:37:04,108 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:37:04,745 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:37:04,746 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:14:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:37:05,150 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:37:05,150 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:36:28+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.374</X>\r\n<Y>0.157</Y>\r\n<width>0.114</width>\r\n<height>0.230</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:37:05,153 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:37:05,333 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:37:06,243 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:06,244 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:36:44+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:06,906 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:37:06,906 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:37:06,929 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:37:06,929 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:14:36+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:37:08,197 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:37:08,199 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:14:26+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:37:08,201 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:37:08,362 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:08,363 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:36:44+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:08,480 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:37:09,217 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:37:09,218 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:14:46+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:37:10,579 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:10,579 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:36:44+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:10,999 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:37:10,999 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:35:59+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.304</X>\r\n<Y>0.144</Y>\r\n<width>0.146</width>\r\n<height>0.209</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:37:11,002 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:37:11,458 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:37:11,648 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:37:11,664 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:14:56+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:37:11,955 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:37:11,955 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:37:11,967 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:37:11,974 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:37:12,609 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:12,610 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:37:09+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:12,611 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:37:12,611 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:37:14,085 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:37:14,086 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:15:06+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:37:14,087 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:37:14,087 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:37:14,764 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:14,764 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:37:09+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:16,998 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:16,998 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:37:10+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:16,998 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:37:16,999 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:37:17,028 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:37:17,029 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:37:17,055 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:37:17,056 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:37:17,277 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:37:17,278 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:35:49+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.499</X>\r\n<Y>0.154</Y>\r\n<width>0.047</width>\r\n<height>0.215</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:37:17,279 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:37:17,303 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:37:17,304 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:13:04+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:37:17,313 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:37:17,624 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:37:17,633 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:37:17,634 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:37:17,635 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:37:19,017 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:19,018 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:37:10+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:21,131 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:21,131 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:37:10+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:22,083 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:37:22,084 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:37:23,249 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:23,249 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:37:10+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:23,525 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:37:23,526 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:35:49+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.393</X>\r\n<Y>0.177</Y>\r\n<width>0.097</width>\r\n<height>0.196</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:37:23,531 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:37:23,861 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:37:24,339 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:37:24,339 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:15:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.5\n}"}
2024-03-08 14:37:25,365 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:25,365 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:37:10+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:25,366 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:37:25,366 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:37:26,566 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:37:26,566 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:11:19+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:37:26,570 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:37:26,659 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:37:26,659 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:15:36+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:37:26,710 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:37:27,113 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:37:27,113 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:37:27,488 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:27,489 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:37:10+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:29,018 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:37:29,018 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:15:46+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:37:29,019 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:37:29,019 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:37:29,708 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:29,709 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:37:10+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:29,710 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:37:29,710 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:37:30,320 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:37:30,320 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:35:39+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.507</X>\r\n<Y>0.089</Y>\r\n<width>0.184</width>\r\n<height>0.231</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:37:30,324 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:37:30,605 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:37:31,623 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:37:31,623 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:15:56+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:37:31,899 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:31,899 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:37:10+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:32,139 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:37:32,140 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:37:33,721 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:37:33,722 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:06:50+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:37:33,725 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:37:33,783 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:37:33,783 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:16:06+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.8\n}"}
2024-03-08 14:37:33,993 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:37:34,003 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:34,004 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:37:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:36,041 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:36,041 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:37:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:36,042 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:37:36,042 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:37:36,420 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:37:36,420 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:16:16+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.9\n}"}
2024-03-08 14:37:36,681 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:37:36,681 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:35:22+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.400</X>\r\n<Y>0.212</Y>\r\n<width>0.058</width>\r\n<height>0.244</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:37:36,684 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:37:36,945 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:37:37,172 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:37:37,172 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:37:38,199 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:38,199 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:37:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:38,768 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:37:38,768 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:16:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.9\n}"}
2024-03-08 14:37:40,286 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:40,287 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:37:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:40,698 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:37:40,698 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:06:37+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:37:40,701 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:37:40,966 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:37:41,062 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:37:41,062 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:16:36+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:37:41,898 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:37:41,898 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:35:12+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.381</X>\r\n<Y>0.206</Y>\r\n<width>0.066</width>\r\n<height>0.215</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:37:41,900 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:37:42,197 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:37:42,197 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:37:42,216 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:37:42,217 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:37:42,218 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:37:42,386 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:42,387 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:37:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:43,383 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:37:43,384 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:16:46+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:37:44,547 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:44,547 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:37:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:45,780 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:37:45,781 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:16:56+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:37:45,782 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:37:45,782 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:37:46,907 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:46,908 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:37:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:47,226 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:37:47,226 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:37:47,237 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:37:47,238 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:06:32+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:37:47,240 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:37:47,271 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:37:47,276 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:37:47,281 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:37:47,281 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:37:47,319 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:37:47,320 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:37:47,332 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:37:47,333 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:37:47,802 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:37:48,121 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:37:48,122 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:17:06+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:37:48,306 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:37:48,306 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:35:08+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.420</X>\r\n<Y>0.142</Y>\r\n<width>0.051</width>\r\n<height>0.202</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:37:48,309 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:37:48,514 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:37:48,796 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:48,797 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:37:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:48,797 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:37:48,798 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:37:50,440 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:37:50,441 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:17:16+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:37:50,842 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:50,843 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:37:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:52,517 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:37:52,517 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:37:52,944 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:37:52,945 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:17:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:37:52,946 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:37:52,947 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:37:53,033 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:53,034 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:37:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:53,476 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:37:53,476 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:06:09+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:37:53,478 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:37:53,520 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:37:53,520 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:37:53,522 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:37:53,522 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:37:53,663 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:37:54,519 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:37:54,520 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:37:54,663 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:37:54,664 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:35:02+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.385</X>\r\n<Y>0.243</Y>\r\n<width>0.071</width>\r\n<height>0.261</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:37:54,666 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:37:55,009 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:37:55,110 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:55,110 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:00+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:55,151 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:37:55,151 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:17:36+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.5\n}"}
2024-03-08 14:37:57,222 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:57,223 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:01+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:57,501 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:37:57,501 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:17:46+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:37:57,502 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:37:57,502 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:37:59,338 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:37:59,339 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:01+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:37:59,632 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:37:59,632 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:04:43+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:37:59,634 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:37:59,932 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:37:59,970 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:37:59,971 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:17:56+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:38:00,612 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:38:00,613 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:00,684 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:38:00,685 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:38:01,469 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:01,469 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:01+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:01,702 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:01,702 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:34:57+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.346</X>\r\n<Y>0.178</Y>\r\n<width>0.104</width>\r\n<height>0.209</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:38:01,705 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:38:01,857 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:38:02,334 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:38:02,334 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:18:06+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.8\n}"}
2024-03-08 14:38:03,577 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:03,577 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:01+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:04,871 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:38:04,872 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:18:16+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:38:05,546 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:38:05,547 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:05,594 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:05,595 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:04:30+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:38:05,597 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:38:05,713 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:05,713 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:01+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:06,063 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:38:07,091 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:38:07,092 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:18:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.9\n}"}
2024-03-08 14:38:07,842 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:07,842 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:01+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:08,939 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:08,940 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:34:27+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.401</X>\r\n<Y>0.170</Y>\r\n<width>0.062</width>\r\n<height>0.229</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:38:08,942 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:38:09,088 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:38:09,542 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:38:09,543 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:18:36+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:38:10,098 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:10,099 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:01+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:10,578 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:38:10,579 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:11,758 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:38:11,759 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:18:46+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:38:12,115 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:12,116 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:01+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:14,161 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:38:14,161 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:18:56+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:38:14,208 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:14,208 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:01+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:14,509 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:14,510 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:34:12+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.536</X>\r\n<Y>0.135</Y>\r\n<width>0.042</width>\r\n<height>0.189</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:38:14,512 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:38:14,516 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:14,518 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:03:55+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:38:14,521 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:38:14,875 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:38:14,883 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:38:15,658 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:38:15,658 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:38:15,658 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:15,658 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:16,192 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:38:16,192 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:38:16,379 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:16,379 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:16,450 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:38:16,451 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:19:06+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:38:18,647 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:18,647 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:18,779 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:38:18,780 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:19:16+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:38:19,781 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:19,781 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:33:27+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.388</X>\r\n<Y>0.128</Y>\r\n<width>0.078</width>\r\n<height>0.253</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:38:19,788 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:38:20,057 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:38:20,655 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:20,655 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:20,657 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:38:20,657 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:21,322 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:38:21,322 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:19:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:38:21,456 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:38:21,456 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:38:22,836 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:22,836 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:22,837 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:38:22,837 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:38:23,561 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:38:23,562 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:19:36+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.9\n}"}
2024-03-08 14:38:23,955 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:23,956 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:03:53+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:38:23,958 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:38:24,269 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:38:24,933 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:24,935 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:25,480 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:25,480 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:32:50+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.520</X>\r\n<Y>0.146</Y>\r\n<width>0.046</width>\r\n<height>0.202</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:38:25,482 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:38:25,701 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:38:25,765 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:38:25,766 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:25,817 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:38:25,818 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:19:46+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:38:27,163 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:27,169 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:27,170 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:38:27,171 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:38:28,263 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:38:28,263 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:19:56+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:38:29,183 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:29,184 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:30,638 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:38:30,642 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:20:06+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.9\n}"}
2024-03-08 14:38:30,723 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:38:30,723 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:30,752 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:38:30,752 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:30,781 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:38:30,781 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:30,807 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:38:30,807 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:30,827 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:38:30,830 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:38:30,847 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:38:30,848 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:31,315 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:31,315 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:31,316 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:38:31,316 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:38:31,316 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:31,316 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:32:41+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.476</X>\r\n<Y>0.107</Y>\r\n<width>0.198</width>\r\n<height>0.281</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:38:31,318 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:31,318 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:03:39+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:38:31,485 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:38:31,318 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:38:31,723 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:38:31,756 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:38:33,075 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:38:33,075 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:20:16+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:38:33,405 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:33,405 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:35,422 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:38:35,422 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:20:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.8\n}"}
2024-03-08 14:38:35,425 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:38:35,426 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:38:35,610 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:35,610 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:35,864 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:38:35,864 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:35,867 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:38:35,868 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:38:37,500 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:37,500 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:37,527 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:37,527 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:32:34+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.403</X>\r\n<Y>0.187</Y>\r\n<width>0.083</width>\r\n<height>0.295</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:38:37,539 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:38:37,585 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:37,585 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:37,690 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:37,693 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:52+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:37,694 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:38:37,694 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:38:37,867 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:38:37,867 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:20:36+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:38:37,871 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:37,872 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:37,877 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:38:38,205 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:38,205 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:38,675 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:38,675 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:38,678 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:38,679 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:02:25+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:38:38,680 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:38:38,681 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:38:38,681 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:38:38,843 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:38:39,240 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:39,241 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:39,890 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:39,890 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:52+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:40,100 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:38:40,100 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:20:46+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.9\n}"}
2024-03-08 14:38:40,891 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:38:40,891 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:41,885 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:41,885 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:52+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:42,566 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:38:42,572 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:20:56+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:38:44,001 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:44,002 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:52+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:44,003 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:38:44,003 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:38:44,597 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:44,598 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:32:16+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.338</X>\r\n<Y>0.265</Y>\r\n<width>0.107</width>\r\n<height>0.253</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:38:44,600 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:38:44,810 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:38:44,840 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:38:44,840 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:21:06+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.9\n}"}
2024-03-08 14:38:45,915 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:38:45,915 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:45,947 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:38:45,947 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:45,953 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:38:45,953 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:38:46,082 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:46,083 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:02:24+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:38:46,086 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:38:46,219 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:46,220 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:52+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:46,420 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:38:47,267 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:38:47,268 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:21:16+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:38:48,322 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:48,322 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:52+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:49,409 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:38:49,410 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:21:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:38:50,202 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:50,202 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:32:13+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.481</X>\r\n<Y>0.210</Y>\r\n<width>0.036</width>\r\n<height>0.161</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:38:50,204 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:38:50,204 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:50,204 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:50,293 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:50,294 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:50,373 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:50,373 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:52+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:50,636 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:50,637 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:50,653 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:38:50,894 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:50,894 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:50,971 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:38:50,972 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:51,136 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:51,136 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:51,688 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:51,689 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:51,945 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:38:51,946 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:21:36+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:38:51,950 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:38:51,950 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:38:52,489 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:52,490 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:52+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:52,707 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:52,707 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:53,692 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:53,692 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:54,262 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:38:54,263 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:21:46+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:38:54,280 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:54,281 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:02:21+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:38:54,283 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:38:54,584 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:38:54,612 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:38:54,612 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:54,615 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:54,616 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:52+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:55,997 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:117.174.94.37,方法类型:POST
2024-03-08 14:38:55,998 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:38:56,541 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:38:56,542 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:21:56+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:38:56,728 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:56,728 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:52+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:58,854 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:38:58,854 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:52+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:38:58,889 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:38:58,889 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:22:06+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.9\n}"}
2024-03-08 14:39:00,180 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:00,180 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:32:13+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.505</X>\r\n<Y>0.158</Y>\r\n<width>0.047</width>\r\n<height>0.208</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:39:00,184 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:39:00,358 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:39:01,477 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:39:01,477 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:22:16+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:39:01,606 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:39:01,607 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:39:03,610 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:39:03,610 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:22:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:39:04,365 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:04,366 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T11:02:18+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:39:04,368 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:39:04,718 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:39:04,719 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:39:04,720 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:39:06,180 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:39:06,181 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:22:36+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:39:06,337 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:39:06,341 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:52+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:39:07,100 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:07,101 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:32:07+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.558</X>\r\n<Y>0.150</Y>\r\n<width>0.030</width>\r\n<height>0.148</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:39:07,102 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:39:07,617 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:39:08,421 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:39:08,422 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:22:46+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:39:08,444 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:39:08,445 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:53+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:39:10,652 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:39:10,652 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:53+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:39:10,832 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:39:10,832 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:22:56+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:39:11,378 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:11,379 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:34:33+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:39:11,381 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:39:11,686 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:39:12,692 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:39:12,693 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:53+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:39:13,075 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:39:13,076 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:23:06+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:39:13,442 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:13,442 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:29:41+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.435</X>\r\n<Y>0.138</Y>\r\n<width>0.078</width>\r\n<height>0.238</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:39:13,444 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:39:13,860 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:39:14,825 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:39:14,825 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:53+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:39:15,623 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:39:15,623 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:23:16+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.9\n}"}
2024-03-08 14:39:16,942 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:39:16,942 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:53+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:39:17,793 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:17,794 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:33:47+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:39:17,795 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:39:17,882 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:39:17,882 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:23:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:39:17,883 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:39:17,883 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:39:17,968 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:39:17,969 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:39:17,969 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:39:19,208 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:19,209 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:29:38+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.356</X>\r\n<Y>0.242</Y>\r\n<width>0.142</width>\r\n<height>0.294</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:39:19,211 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:39:19,357 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:39:19,744 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:19,744 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:39:20,223 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:39:20,224 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:23:36+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:39:20,851 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:20,852 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:39:21,732 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:21,732 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:39:22,700 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:39:22,700 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:23:46+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.6\n}"}
2024-03-08 14:39:22,828 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:22,828 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:39:22,834 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:39:22,835 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:39:23,758 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:23,758 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:39:23,889 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:23,890 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:32:32+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:39:23,892 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:39:24,128 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:39:24,773 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:24,773 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:39:25,222 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:39:25,223 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:23:56+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:39:25,844 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:25,845 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:39:26,723 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:26,723 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:39:27,223 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:39:27,223 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:53+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:39:27,614 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:39:27,614 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:24:06+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.5\n}"}
2024-03-08 14:39:27,754 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:27,754 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:39:27,756 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:39:27,756 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:39:28,864 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:28,865 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:39:29,324 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:39:29,325 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:53+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:39:29,724 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:29,724 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:39:29,893 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:29,893 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:32:09+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:39:29,895 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:39:29,942 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:39:29,943 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:24:16+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:39:30,062 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:39:30,746 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:30,746 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:39:31,329 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:39:31,329 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:39:43+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:39:31,732 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:31,733 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:39:32,346 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:39:32,346 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:24:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.5\n}"}
2024-03-08 14:39:32,347 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:39:32,347 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:39:32,748 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:32,749 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:39:33,503 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:39:33,503 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:39:43+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:39:33,862 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:33,863 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:39:34,661 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:39:34,662 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:24:36+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:39:34,838 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:34,838 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:39:34,840 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:39:34,840 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:39:35,581 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:39:35,582 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:39:43+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:39:35,741 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:35,741 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:39:35,787 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:35,788 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:31:35+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:39:35,789 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:39:36,191 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:39:36,833 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:36,833 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:39:36,834 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:39:36,835 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:39:37,063 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:39:37,064 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:24:46+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:39:37,064 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:39:37,065 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:39:37,695 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:39:37,695 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:39:43+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:39:39,399 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:39:39,399 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:24:56+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.9\n}"}
2024-03-08 14:39:39,910 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:39:39,911 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:39:43+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:39:41,982 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:39:41,982 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:39:43+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:39:41,983 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:39:41,983 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:39:42,021 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:39:42,022 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:25:06+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:39:42,063 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:42,064 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:31:17+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:39:42,066 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:39:42,337 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:39:42,764 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:42,765 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:27:47+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.559</X>\r\n<Y>0.118</Y>\r\n<width>0.064</width>\r\n<height>0.228</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:39:42,767 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:39:42,986 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:39:43,724 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:117.174.86.173,方法类型:POST
2024-03-08 14:39:43,724 INFO (HttpController.java:76)- step2 ---> 请求内容:{"TMPA":"<EventNotificationAlert>\r\n<ipAddress>20.20.18.221</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>4c:f5:dc:2f:9c:79</macAddress>\r\n<dynChannelID>2</dynChannelID>\r\n<channelID>2</channelID>\r\n<dateTime>2024-03-08T14:37:10+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>TMPA</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>Temperature Measurement Precautionary Alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>0</positionX>\r\n<positionY>0</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>0</positionX>\r\n<positionY>1000</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>1000</positionX>\r\n<positionY>1000</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>1000</positionX>\r\n<positionY>0</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<TMPA>\r\n<thermometryUnit>celsius</thermometryUnit>\r\n<ruleTemperature>5.0</ruleTemperature>\r\n<currTemperature>5.8</currTemperature>\r\n<currTemperature>5.8</currTemperature>\r\n<ruleCalibType>region</ruleCalibType>\r\n<ruleType>highest temp is lower than</ruleType>\r\n<MaximumTemperaturePoint>\r\n<RegionCoordinates>\r\n<positionX>0</positionX>\r\n<positionY>42</positionY>\r\n</RegionCoordinates>\r\n</MaximumTemperaturePoint>\r\n<AbsoluteHigh>\r\n<elevation>0.000</elevation>\r\n<azimuth>0.000</azimuth>\r\n<absoluteZoom>0.10</absoluteZoom>\r\n</AbsoluteHigh>\r\n<presetNo>0</presetNo>\r\n<alarmRuleTemperature>140.1</alarmRuleTemperature>\r\n</TMPA>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-怡城北居-车棚</channelName>\r\n<detectionPicturesNumber>2</detectionPicturesNumber>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:39:44,130 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:39:44,131 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:39:43+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:39:44,287 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:39:44,287 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:25:16+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:39:44,591 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:117.174.86.173,方法类型:POST
2024-03-08 14:39:44,591 INFO (HttpController.java:76)- step2 ---> 请求内容:{"TMPA":"<EventNotificationAlert>\r\n<ipAddress>20.20.18.221</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>4c:f5:dc:2f:9c:79</macAddress>\r\n<dynChannelID>2</dynChannelID>\r\n<channelID>2</channelID>\r\n<dateTime>2024-03-08T14:37:11+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>TMPA</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>Temperature Measurement Precautionary Alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>0</positionX>\r\n<positionY>0</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>0</positionX>\r\n<positionY>1000</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>1000</positionX>\r\n<positionY>1000</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>1000</positionX>\r\n<positionY>0</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<TMPA>\r\n<thermometryUnit>celsius</thermometryUnit>\r\n<ruleTemperature>5.0</ruleTemperature>\r\n<currTemperature>8.0</currTemperature>\r\n<currTemperature>8.0</currTemperature>\r\n<ruleCalibType>region</ruleCalibType>\r\n<ruleType>highest temp is lower than</ruleType>\r\n<MaximumTemperaturePoint>\r\n<RegionCoordinates>\r\n<positionX>113</positionX>\r\n<positionY>17</positionY>\r\n</RegionCoordinates>\r\n</MaximumTemperaturePoint>\r\n<AbsoluteHigh>\r\n<elevation>0.000</elevation>\r\n<azimuth>0.000</azimuth>\r\n<absoluteZoom>0.10</absoluteZoom>\r\n</AbsoluteHigh>\r\n<presetNo>0</presetNo>\r\n<alarmRuleTemperature>140.1</alarmRuleTemperature>\r\n</TMPA>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-怡城北居-车棚</channelName>\r\n<detectionPicturesNumber>2</detectionPicturesNumber>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:39:44,593 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:39:44,601 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:39:46,347 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:39:46,348 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:39:43+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:39:46,661 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:39:46,662 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:25:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:39:46,662 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:39:46,663 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:39:48,336 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:39:48,337 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:39:43+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:39:48,566 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:48,566 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:29:47+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:39:48,568 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:39:48,753 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:48,754 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:27:45+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.346</X>\r\n<Y>0.146</Y>\r\n<width>0.101</width>\r\n<height>0.203</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:39:49,262 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:39:48,964 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:39:48,991 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:39:49,282 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:25:36+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.9\n}"}
2024-03-08 14:39:49,449 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:39:49,450 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:39:49,450 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:39:50,582 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:39:50,583 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:39:43+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:39:51,274 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:39:51,275 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:25:46+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.9\n}"}
2024-03-08 14:39:52,683 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:39:52,684 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:39:53,420 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:117.174.86.173,方法类型:POST
2024-03-08 14:39:53,420 INFO (HttpController.java:76)- step2 ---> 请求内容:{"TMPA":"<EventNotificationAlert>\r\n<ipAddress>20.20.18.221</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>4c:f5:dc:2f:9c:79</macAddress>\r\n<dynChannelID>2</dynChannelID>\r\n<channelID>2</channelID>\r\n<dateTime>2024-03-08T14:37:20+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>TMPA</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>Temperature Measurement Precautionary Alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>0</positionX>\r\n<positionY>0</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>0</positionX>\r\n<positionY>1000</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>1000</positionX>\r\n<positionY>1000</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>1000</positionX>\r\n<positionY>0</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<TMPA>\r\n<thermometryUnit>celsius</thermometryUnit>\r\n<ruleTemperature>5.0</ruleTemperature>\r\n<currTemperature>8.0</currTemperature>\r\n<currTemperature>8.0</currTemperature>\r\n<ruleCalibType>region</ruleCalibType>\r\n<ruleType>highest temp is lower than</ruleType>\r\n<MaximumTemperaturePoint>\r\n<RegionCoordinates>\r\n<positionX>13</positionX>\r\n<positionY>882</positionY>\r\n</RegionCoordinates>\r\n</MaximumTemperaturePoint>\r\n<AbsoluteHigh>\r\n<elevation>0.000</elevation>\r\n<azimuth>0.000</azimuth>\r\n<absoluteZoom>0.10</absoluteZoom>\r\n</AbsoluteHigh>\r\n<presetNo>0</presetNo>\r\n<alarmRuleTemperature>140.1</alarmRuleTemperature>\r\n</TMPA>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-怡城北居-车棚</channelName>\r\n<detectionPicturesNumber>2</detectionPicturesNumber>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:39:53,560 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:39:53,561 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:25:56+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:39:54,567 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:117.174.86.173,方法类型:POST
2024-03-08 14:39:54,567 INFO (HttpController.java:76)- step2 ---> 请求内容:{"TMPA":"<EventNotificationAlert>\r\n<ipAddress>20.20.18.221</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>4c:f5:dc:2f:9c:79</macAddress>\r\n<dynChannelID>2</dynChannelID>\r\n<channelID>2</channelID>\r\n<dateTime>2024-03-08T14:37:21+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>TMPA</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>Temperature Measurement Precautionary Alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>0</positionX>\r\n<positionY>0</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>0</positionX>\r\n<positionY>1000</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>1000</positionX>\r\n<positionY>1000</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>1000</positionX>\r\n<positionY>0</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<TMPA>\r\n<thermometryUnit>celsius</thermometryUnit>\r\n<ruleTemperature>5.0</ruleTemperature>\r\n<currTemperature>8.0</currTemperature>\r\n<currTemperature>8.0</currTemperature>\r\n<ruleCalibType>region</ruleCalibType>\r\n<ruleType>highest temp is lower than</ruleType>\r\n<MaximumTemperaturePoint>\r\n<RegionCoordinates>\r\n<positionX>19</positionX>\r\n<positionY>840</positionY>\r\n</RegionCoordinates>\r\n</MaximumTemperaturePoint>\r\n<AbsoluteHigh>\r\n<elevation>0.000</elevation>\r\n<azimuth>0.000</azimuth>\r\n<absoluteZoom>0.10</absoluteZoom>\r\n</AbsoluteHigh>\r\n<presetNo>0</presetNo>\r\n<alarmRuleTemperature>140.1</alarmRuleTemperature>\r\n</TMPA>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-怡城北居-车棚</channelName>\r\n<detectionPicturesNumber>2</detectionPicturesNumber>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:39:54,663 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:39:54,664 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:39:55,539 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:55,539 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:27:37+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.331</X>\r\n<Y>0.298</Y>\r\n<width>0.117</width>\r\n<height>0.305</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:39:55,541 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:39:55,668 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:39:55,668 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:39:55,669 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:39:55,737 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:117.174.86.173,方法类型:POST
2024-03-08 14:39:55,737 INFO (HttpController.java:76)- step2 ---> 请求内容:{"TMPA":"<EventNotificationAlert>\r\n<ipAddress>20.20.18.221</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>4c:f5:dc:2f:9c:79</macAddress>\r\n<dynChannelID>2</dynChannelID>\r\n<channelID>2</channelID>\r\n<dateTime>2024-03-08T14:37:22+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>TMPA</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>Temperature Measurement Precautionary Alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>0</positionX>\r\n<positionY>0</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>0</positionX>\r\n<positionY>1000</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>1000</positionX>\r\n<positionY>1000</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>1000</positionX>\r\n<positionY>0</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<TMPA>\r\n<thermometryUnit>celsius</thermometryUnit>\r\n<ruleTemperature>5.0</ruleTemperature>\r\n<currTemperature>8.0</currTemperature>\r\n<currTemperature>8.0</currTemperature>\r\n<ruleCalibType>region</ruleCalibType>\r\n<ruleType>highest temp is lower than</ruleType>\r\n<MaximumTemperaturePoint>\r\n<RegionCoordinates>\r\n<positionX>19</positionX>\r\n<positionY>857</positionY>\r\n</RegionCoordinates>\r\n</MaximumTemperaturePoint>\r\n<AbsoluteHigh>\r\n<elevation>0.000</elevation>\r\n<azimuth>0.000</azimuth>\r\n<absoluteZoom>0.10</absoluteZoom>\r\n</AbsoluteHigh>\r\n<presetNo>0</presetNo>\r\n<alarmRuleTemperature>140.1</alarmRuleTemperature>\r\n</TMPA>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-怡城北居-车棚</channelName>\r\n<detectionPicturesNumber>2</detectionPicturesNumber>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:39:55,972 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:39:55,972 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:26:06+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:39:55,973 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:39:55,973 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:39:56,660 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:39:56,661 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:26:12+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:39:56,664 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:39:56,927 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:39:56,927 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:39:56,928 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:39:56,928 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:39:57,191 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:39:57,931 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:39:57,931 INFO (HttpController.java:76)- step2 ---> 请求内容:{"PTZFXYFinish":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"ipv6Address\":\t\"::\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:15+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"PTZFXYFinish\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"PTZFXY Finish\",\n\t\"PTZFXYFinish\":\t{\n\t\t\"PTZAbsoluteEx\":\t{\n\t\t\t\"azimuth\":\t332.110,\n\t\t\t\"elevation\":\t16.090,\n\t\t\t\"visibleAbsoluteZoom\":\t1,\n\t\t\t\"visibleFocus\":\t25140,\n\t\t\t\"thermalAbsoluteZoom\":\t1,\n\t\t\t\"thermalFocus\":\t0\n\t\t}\n\t}\n}"}
2024-03-08 14:39:58,345 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:39:58,345 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:26:16+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:39:58,496 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:117.174.86.173,方法类型:POST
2024-03-08 14:39:58,497 INFO (HttpController.java:76)- step2 ---> 请求内容:{"TMPA":"<EventNotificationAlert>\r\n<ipAddress>20.20.18.221</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>4c:f5:dc:2f:9c:79</macAddress>\r\n<dynChannelID>2</dynChannelID>\r\n<channelID>2</channelID>\r\n<dateTime>2024-03-08T14:37:25+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>TMPA</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>Temperature Measurement Precautionary Alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>0</positionX>\r\n<positionY>0</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>0</positionX>\r\n<positionY>1000</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>1000</positionX>\r\n<positionY>1000</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>1000</positionX>\r\n<positionY>0</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<TMPA>\r\n<thermometryUnit>celsius</thermometryUnit>\r\n<ruleTemperature>5.0</ruleTemperature>\r\n<currTemperature>8.0</currTemperature>\r\n<currTemperature>8.0</currTemperature>\r\n<ruleCalibType>region</ruleCalibType>\r\n<ruleType>highest temp is lower than</ruleType>\r\n<MaximumTemperaturePoint>\r\n<RegionCoordinates>\r\n<positionX>19</positionX>\r\n<positionY>857</positionY>\r\n</RegionCoordinates>\r\n</MaximumTemperaturePoint>\r\n<AbsoluteHigh>\r\n<elevation>0.000</elevation>\r\n<azimuth>0.000</azimuth>\r\n<absoluteZoom>0.10</absoluteZoom>\r\n</AbsoluteHigh>\r\n<presetNo>0</presetNo>\r\n<alarmRuleTemperature>140.1</alarmRuleTemperature>\r\n</TMPA>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-怡城北居-车棚</channelName>\r\n<detectionPicturesNumber>2</detectionPicturesNumber>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:39:58,939 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:39:58,940 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:39:59,663 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:117.174.86.173,方法类型:POST
2024-03-08 14:39:59,664 INFO (HttpController.java:76)- step2 ---> 请求内容:{"TMPA":"<EventNotificationAlert>\r\n<ipAddress>20.20.18.221</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>4c:f5:dc:2f:9c:79</macAddress>\r\n<dynChannelID>2</dynChannelID>\r\n<channelID>2</channelID>\r\n<dateTime>2024-03-08T14:37:26+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>TMPA</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>Temperature Measurement Precautionary Alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>0</positionX>\r\n<positionY>0</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>0</positionX>\r\n<positionY>1000</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>1000</positionX>\r\n<positionY>1000</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>1000</positionX>\r\n<positionY>0</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<TMPA>\r\n<thermometryUnit>celsius</thermometryUnit>\r\n<ruleTemperature>5.0</ruleTemperature>\r\n<currTemperature>8.0</currTemperature>\r\n<currTemperature>8.0</currTemperature>\r\n<ruleCalibType>region</ruleCalibType>\r\n<ruleType>highest temp is lower than</ruleType>\r\n<MaximumTemperaturePoint>\r\n<RegionCoordinates>\r\n<positionX>19</positionX>\r\n<positionY>739</positionY>\r\n</RegionCoordinates>\r\n</MaximumTemperaturePoint>\r\n<AbsoluteHigh>\r\n<elevation>0.000</elevation>\r\n<azimuth>0.000</azimuth>\r\n<absoluteZoom>0.10</absoluteZoom>\r\n</AbsoluteHigh>\r\n<presetNo>0</presetNo>\r\n<alarmRuleTemperature>140.1</alarmRuleTemperature>\r\n</TMPA>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-怡城北居-车棚</channelName>\r\n<detectionPicturesNumber>2</detectionPicturesNumber>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:40:00,702 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:40:00,702 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:26:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:40:01,070 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:40:01,070 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:40:01,697 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:01,698 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:26:40+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.421</X>\r\n<Y>0.135</Y>\r\n<width>0.076</width>\r\n<height>0.224</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:40:01,700 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:40:01,913 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:40:03,198 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:40:03,199 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:40:03,258 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:40:03,259 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:26:36+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:40:03,259 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:40:03,260 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:40:04,254 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:04,254 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:24:59+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:40:04,256 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:40:05,316 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:40:05,316 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:40:05,316 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:40:05,317 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:40:05,323 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:40:05,502 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:40:05,502 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:26:46+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:40:07,483 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:40:07,483 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:40:07,855 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:40:07,856 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:26:56+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:40:08,196 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:08,196 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:26:10+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.385</X>\r\n<Y>0.161</Y>\r\n<width>0.089</width>\r\n<height>0.231</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:40:08,198 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:40:08,428 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:40:09,599 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:40:09,600 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:40:10,191 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:40:10,192 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:27:06+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:40:11,720 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:40:11,720 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:40:12,745 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:40:12,746 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:27:16+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.9\n}"}
2024-03-08 14:40:13,015 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:13,015 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:24:09+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:40:13,018 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:40:13,386 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:40:13,845 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:40:13,846 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:40:13,847 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:40:13,847 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:40:14,948 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:14,949 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:25:30+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.393</X>\r\n<Y>0.206</Y>\r\n<width>0.107</width>\r\n<height>0.253</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:40:14,951 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:40:15,149 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:40:15,149 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:27:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:40:15,150 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:40:15,150 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:40:15,328 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:40:15,974 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:40:15,975 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:40:17,376 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:40:17,376 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:27:36+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:40:18,157 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:40:18,158 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:40:19,833 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:40:19,833 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:27:46+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:40:20,203 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:40:20,204 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:40:21,097 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:21,097 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:24:42+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.381</X>\r\n<Y>0.197</Y>\r\n<width>0.060</width>\r\n<height>0.236</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:40:21,099 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:40:21,465 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:40:22,182 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:40:22,182 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:27:56+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.9\n}"}
2024-03-08 14:40:22,324 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:40:22,324 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:40:23,306 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:23,306 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:23:48+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:40:23,308 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:40:23,879 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:40:23,879 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:40:23,880 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:40:24,386 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:40:24,388 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:28:06+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:40:24,466 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:40:24,466 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:40:25,552 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:25,552 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:24:12+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.405</X>\r\n<Y>0.143</Y>\r\n<width>0.081</width>\r\n<height>0.286</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:40:25,554 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:40:25,786 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:40:25,921 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:40:25,922 INFO (HttpController.java:76)- step2 ---> 请求内容:{"PTZFXYFinish":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"ipv6Address\":\t\"::\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:43+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"PTZFXYFinish\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"PTZFXY Finish\",\n\t\"PTZFXYFinish\":\t{\n\t\t\"PTZAbsoluteEx\":\t{\n\t\t\t\"azimuth\":\t315.050,\n\t\t\t\"elevation\":\t16.090,\n\t\t\t\"visibleAbsoluteZoom\":\t1,\n\t\t\t\"visibleFocus\":\t25140,\n\t\t\t\"thermalAbsoluteZoom\":\t1,\n\t\t\t\"thermalFocus\":\t0\n\t\t}\n\t}\n}"}
2024-03-08 14:40:26,733 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:40:26,734 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:28:16+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:40:26,735 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:40:26,735 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:40:26,944 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:40:26,945 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:40:26,945 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:40:26,946 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:40:29,115 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:40:29,115 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:40:29,116 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:40:29,117 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:40:29,121 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:40:29,121 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:28:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:40:29,652 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:29,653 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:23:05+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:40:29,654 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:40:29,767 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:29,767 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:24:06+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.403</X>\r\n<Y>0.210</Y>\r\n<width>0.065</width>\r\n<height>0.278</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:40:29,772 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:40:29,927 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:40:30,165 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:40:31,184 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:40:31,185 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:40:31,466 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:40:31,466 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:28:36+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:40:33,316 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:40:33,316 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:40:33,916 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:40:33,916 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:28:46+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:40:33,917 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:40:33,917 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:40:34,225 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:34,226 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:23:22+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.374</X>\r\n<Y>0.239</Y>\r\n<width>0.069</width>\r\n<height>0.261</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:40:34,228 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:40:34,491 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:40:35,464 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:40:35,467 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:40:35,757 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:35,757 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:23:02+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:40:35,763 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:40:36,119 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:40:36,119 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:28:56+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.8\n}"}
2024-03-08 14:40:36,285 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:40:37,568 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:40:37,569 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:40:37,570 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:40:37,570 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:40:38,490 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:40:38,491 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:29:06+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:40:39,059 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:39,059 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:22:50+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.563</X>\r\n<Y>0.121</Y>\r\n<width>0.039</width>\r\n<height>0.179</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:40:39,061 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:40:39,410 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:40:39,700 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:40:39,700 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:40:40,815 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:40:40,815 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:29:16+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:40:41,889 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:40:41,890 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:40:42,141 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:42,142 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:21:38+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:40:42,150 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:40:42,710 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:40:43,214 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:40:43,215 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:29:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:40:44,166 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:44,166 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:22:31+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.381</X>\r\n<Y>0.206</Y>\r\n<width>0.083</width>\r\n<height>0.315</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:40:44,170 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:40:44,174 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:44,175 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:40:44,177 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:40:44,177 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:40:44,466 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:40:44,518 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:44,518 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:40:44,532 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:40:44,532 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:40:44,763 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:44,763 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:40:45,698 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:45,699 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:40:45,719 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:40:45,723 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:29:36+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:40:45,742 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:40:45,742 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:40:46,711 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:46,711 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:40:47,599 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:47,600 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:40:47,949 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:40:47,950 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:29:46+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:40:48,601 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:48,602 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:40:48,730 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:48,731 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:21:37+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:40:48,733 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:40:48,899 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:40:49,609 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:49,610 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:40:50,347 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:40:50,347 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:29:56+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.5\n}"}
2024-03-08 14:40:50,702 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:50,707 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:40:51,607 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:51,607 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:40:51,987 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:40:51,987 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:40:52,660 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:52,661 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:40:52,747 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:40:52,748 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:30:06+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:40:54,459 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:40:54,459 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:40:55,035 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:40:55,036 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:30:16+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:40:55,386 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:55,386 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:21:13+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:40:55,388 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:40:55,998 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:40:57,461 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:40:57,461 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:30:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:40:57,589 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:40:57,589 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:22:28+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.396</X>\r\n<Y>0.210</Y>\r\n<width>0.071</width>\r\n<height>0.278</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:40:57,591 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:40:57,960 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:40:57,960 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:40:57,961 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:40:59,779 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:40:59,779 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:30:36+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:41:02,259 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:41:02,261 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:30:46+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:41:02,376 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:02,377 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:21:38+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.331</X>\r\n<Y>0.191</Y>\r\n<width>0.107</width>\r\n<height>0.222</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:41:02,379 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:41:02,634 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:41:03,027 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:03,028 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:21:05+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:41:03,198 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:41:03,248 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:03,250 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:03,584 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:41:03,986 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:03,986 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:04,407 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:41:04,408 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:30:56+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:41:04,966 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:04,966 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:05,867 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:05,868 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:06,700 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:41:06,701 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:31:06+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:41:06,953 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:06,954 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:07,877 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:07,878 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:08,969 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:08,969 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:09,078 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:41:09,079 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:31:16+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:41:09,538 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:41:09,538 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:41:09,539 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:41:09,539 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:41:09,866 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:09,866 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:09,868 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:41:09,868 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:41:11,465 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:41:11,465 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:31:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:41:11,466 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:41:11,466 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:41:11,666 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:41:11,666 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:41:12,553 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:12,554 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:20:40+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:41:12,556 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:41:13,204 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:41:13,864 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:41:13,865 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:41:24+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:41:13,864 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:41:13,866 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:31:36+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:41:14,598 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:14,598 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:21:31+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.371</X>\r\n<Y>0.245</Y>\r\n<width>0.078</width>\r\n<height>0.325</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:41:14,603 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:41:14,993 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:41:15,960 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:41:15,961 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:41:24+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:41:16,172 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:41:16,172 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:31:46+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:41:18,171 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:41:18,172 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:41:24+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:41:18,515 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:41:18,515 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:31:56+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:41:19,504 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:19,504 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:21:27+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.488</X>\r\n<Y>0.164</Y>\r\n<width>0.047</width>\r\n<height>0.222</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:41:19,506 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:41:19,892 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:41:20,184 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:41:20,184 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:41:24+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:41:20,185 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:41:20,185 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:41:20,371 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:20,372 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:20,911 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:41:20,911 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:32:06+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.6\n}"}
2024-03-08 14:41:20,912 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:41:20,912 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:41:21,233 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:21,234 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:21,244 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:21,244 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:20:11+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>91</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>920</positionX>\r\n<positionY>906</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>919</positionX>\r\n<positionY>999</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>999</positionX>\r\n<positionY>999</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>999</positionX>\r\n<positionY>912</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:41:21,246 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:41:21,434 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:41:22,247 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:22,247 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:22,350 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:41:22,350 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:41:24+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:41:23,241 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:41:23,241 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:32:16+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:41:23,245 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:23,246 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:24,331 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:24,331 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:24,472 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:41:24,473 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:41:24+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:41:25,270 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:25,270 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:25,702 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:41:25,702 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:32:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.9\n}"}
2024-03-08 14:41:25,703 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:41:25,703 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:41:26,323 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:26,324 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:26,573 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:41:26,573 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:41:24+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:41:27,266 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:27,267 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:27,271 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:41:27,271 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:41:28,102 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:41:28,102 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:32:36+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:41:28,359 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:28,359 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:28,726 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:28,727 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:20:07+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:41:28,729 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:41:28,758 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:41:28,759 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:41:24+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:41:28,760 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:41:28,760 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:41:28,887 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:41:29,267 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:29,267 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:30,339 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:30,339 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:30,505 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:41:30,506 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:32:46+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:41:30,506 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:41:30,507 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:41:30,779 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:41:30,780 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:41:24+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:41:31,264 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:31,267 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:32,349 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:32,349 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:32,701 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:41:32,702 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:32:56+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:41:33,007 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:41:33,007 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:41:24+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:41:35,192 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:41:35,193 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:33:06+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.8\n}"}
2024-03-08 14:41:35,195 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:41:35,195 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:41:47+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:41:37,260 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:41:37,261 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:41:47+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:41:37,398 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:41:37,398 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:33:16+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:41:37,399 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:41:37,399 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:41:37,523 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:37,523 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:20:07+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:41:37,525 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:41:37,869 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:41:38,081 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:38,081 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:21:02+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.380</X>\r\n<Y>0.195</Y>\r\n<width>0.067</width>\r\n<height>0.252</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:41:38,083 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:41:38,347 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:41:38,348 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:41:38,348 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:41:39,349 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:41:39,349 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:41:47+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:41:39,350 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:41:39,350 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:41:40,031 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:41:40,031 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:33:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.9\n}"}
2024-03-08 14:41:41,374 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:41:41,377 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:41:47+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:41:42,250 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:41:42,250 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:33:36+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.9\n}"}
2024-03-08 14:41:43,681 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:41:43,683 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:41:47+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:41:44,356 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:44,357 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:44,438 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:44,438 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:20:43+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.385</X>\r\n<Y>0.234</Y>\r\n<width>0.060</width>\r\n<height>0.287</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:41:44,441 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:41:44,450 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:44,451 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:44,691 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:41:44,691 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:33:46+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:41:44,780 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:41:45,432 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:45,432 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:45,438 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:41:45,439 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:41:45,740 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:41:45,740 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:41:47+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:41:45,967 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:45,967 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:19:47+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:41:45,999 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:41:46,447 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:46,447 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:46,729 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:41:47,158 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:41:47,160 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:33:55+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:41:47,160 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:41:47,161 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:41:47,357 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:47,357 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:47,871 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:41:47,871 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:41:47+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:41:48,743 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:48,743 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:49,382 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:41:49,382 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:34:05+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:41:49,731 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:49,732 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:49,988 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:41:49,990 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:41:47+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:41:50,813 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:50,814 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:51,734 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:51,734 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:51,781 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:41:51,782 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:34:15+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:41:52,177 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:41:52,178 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:41:47+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:41:52,709 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:52,710 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:52,802 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:52,803 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:19:45+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:41:52,805 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:41:52,962 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:41:53,785 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:53,785 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:53,999 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:41:54,000 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:34:25+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:41:54,146 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:41:54,146 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:41:48+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:41:54,147 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:41:54,147 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:41:54,798 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:54,799 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:55,706 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:55,706 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:56,388 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:41:56,389 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:11+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:41:56,410 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:41:56,410 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:34:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:41:56,721 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:56,722 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:56,831 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:41:56,831 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:41:57,727 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:57,727 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:57,729 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:41:57,729 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:41:58,372 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:41:58,373 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:11+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:41:58,814 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:58,815 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:41:58,833 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:41:58,833 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:34:45+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:41:59,447 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:59,448 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:19:45+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:41:59,450 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:41:59,676 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:41:59,859 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:41:59,859 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:00,478 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:00,478 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:11+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:00,729 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:00,730 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:01,203 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:42:01,203 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:34:55+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.5\n}"}
2024-03-08 14:42:01,699 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:01,700 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:02,641 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:02,642 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:11+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:02,848 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:02,849 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:02,850 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:42:02,850 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:42:03,469 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:42:03,470 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:05+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:42:03,471 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:42:03,471 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:42:03,756 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:03,756 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:04,723 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:04,723 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:04,735 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:04,735 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:11+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:05,721 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:05,721 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:05,864 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:42:05,864 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:15+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:42:05,865 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:42:05,866 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:42:06,360 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:06,360 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:19:42+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:42:06,364 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:42:06,731 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:42:06,814 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:06,817 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:06,935 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:06,935 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:11+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:07,706 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:07,707 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:08,233 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:42:08,234 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:25+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:42:08,712 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:08,712 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:09,009 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:09,009 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:11+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:09,737 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:09,737 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:10,544 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:42:10,545 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:42:10,794 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:10,795 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:11,086 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:11,087 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:11+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:11,717 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:11,717 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:12,714 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:12,714 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:12,901 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:42:12,902 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:45+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:42:12,936 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:12,937 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:19:36+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:42:12,938 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:42:13,205 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:13,205 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:11+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:13,205 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:42:13,714 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:13,714 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:14,795 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:14,795 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:14,797 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:42:14,799 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:42:15,173 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:42:15,173 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:35:55+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.9\n}"}
2024-03-08 14:42:15,342 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:15,343 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:11+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:15,797 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:15,798 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:16,694 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:16,694 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:17,452 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:17,453 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:11+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:17,537 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:42:17,537 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:36:05+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:42:17,717 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:17,718 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:18,807 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:18,807 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:19,577 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:19,577 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:11+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:19,726 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:19,727 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:19,946 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:42:19,946 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:36:15+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:42:19,947 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:42:19,947 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:42:20,735 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:20,735 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:20,762 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:42:20,763 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:42:21,697 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:21,698 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:11+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:21,759 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:21,760 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:22,341 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:42:22,342 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:36:25+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:42:22,585 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:22,585 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:19:35+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:42:22,588 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:42:22,738 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:42:22,814 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:22,815 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:23,682 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:23,683 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:23,813 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:23,814 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:11+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:24,689 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:24,689 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:24,801 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:42:24,801 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:36:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:42:25,690 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:25,691 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:25,929 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:25,930 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:11+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:26,858 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:26,858 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:27,112 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:42:27,113 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:36:45+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:42:27,714 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:27,715 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:28,069 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:28,069 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:11+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:28,070 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:42:28,070 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:42:28,717 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:28,717 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:29,397 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:42:29,398 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:36:55+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:42:29,399 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:42:29,399 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:42:29,698 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:29,699 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:30,200 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:30,200 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:11+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:30,788 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:30,788 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:30,790 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:42:30,791 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:42:31,236 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:31,236 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:19:34+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:42:31,238 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:42:31,485 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:42:31,724 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:31,724 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:31,734 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:42:31,734 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:42:31,799 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:42:31,800 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:37:05+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:42:32,316 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:32,316 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:11+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:32,317 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:42:32,318 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:42:32,788 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:32,788 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:33,677 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:33,678 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:34,073 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:42:34,074 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:37:15+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:42:34,449 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:34,449 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:11+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:34,786 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:34,787 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:35,696 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:35,696 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:36,432 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:42:36,433 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:37:25+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:42:36,560 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:36,561 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:11+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:36,774 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:36,775 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:36,776 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:42:36,777 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:42:37,703 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:37,703 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:37,705 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:42:37,705 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:42:38,682 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:38,682 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:34+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:38,778 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:42:38,778 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:37:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:42:38,810 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:38,810 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:39,697 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:39,697 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:40,060 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:40,060 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:19:17+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:42:40,062 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:42:40,666 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:42:40,702 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:40,702 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:40,707 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:42:40,708 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:42:40,795 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:40,795 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:34+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:41,082 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:42:41,082 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:37:45+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:42:41,757 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:41,757 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:42,783 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:42,784 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:42,929 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:42,930 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:34+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:43,420 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:42:43,421 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:37:55+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:42:43,709 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:43,710 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:44,815 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:44,816 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:45,051 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:45,051 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:45,051 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:42:45,052 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:42:45,777 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:45,777 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:46,026 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:42:46,026 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:05+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:42:46,026 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:42:46,027 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:42:46,190 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:46,191 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:19:11+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:42:46,193 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:42:46,824 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:46,824 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:46,839 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:42:47,174 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:47,174 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:47,697 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:47,697 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:48,447 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:42:48,448 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:15+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:42:48,786 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:48,786 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:49,290 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:49,290 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:49,291 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:42:49,291 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:42:49,683 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:49,683 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:50,683 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:42:50,683 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:25+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:42:50,808 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:50,808 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:51,407 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:51,407 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:51,709 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:51,709 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:52,701 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:52,701 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:52,905 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:52,905 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:19:09+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:42:52,909 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:42:52,946 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:42:52,947 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:42:53,104 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:42:53,540 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:53,540 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:53,686 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:53,687 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:53,689 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:42:53,689 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:42:54,811 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:54,811 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:54,815 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:42:54,816 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:42:55,297 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:42:55,297 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:45+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:42:55,698 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:55,699 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:55,744 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:55,745 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:56,770 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:56,772 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:57,759 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:57,759 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:42:57,760 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:57,760 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:38:55+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:42:57,761 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:42:57,765 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:42:57,789 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:42:57,790 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:42:57,791 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:42:57,791 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:42:58,773 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:58,774 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:59,397 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:59,397 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:18:57+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:42:59,404 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:42:59,638 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:42:59,694 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:42:59,694 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:42:59,940 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:42:59,940 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:39:05+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.5\n}"}
2024-03-08 14:43:00,064 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:43:00,065 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:58+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:43:00,706 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:00,706 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:43:01,752 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:01,753 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:43:02,114 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:43:02,114 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:58+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:43:02,332 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:43:02,332 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:39:15+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:43:02,333 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:43:02,333 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:43:02,794 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:02,795 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:43:03,854 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:03,854 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:43:04,247 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:43:04,247 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:58+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:43:04,790 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:04,790 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:43:05,799 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:05,800 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:43:05,811 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:05,812 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:18:38+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:43:05,814 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:43:06,201 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:43:06,317 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:43:06,317 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:58+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:43:06,866 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:06,867 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:43:06,868 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:43:06,868 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:43:07,704 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:07,705 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:43:08,488 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:43:08,488 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:58+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:43:08,719 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:08,720 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:43:10,662 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:43:10,663 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:58+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:43:12,185 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:12,187 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:18:33+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:43:12,189 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:43:12,591 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:43:12,633 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:43:12,633 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:58+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:43:12,773 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:43:12,773 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:39:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:43:14,104 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:14,105 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:20:12+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.403</X>\r\n<Y>0.164</Y>\r\n<width>0.058</width>\r\n<height>0.215</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:43:14,108 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:43:14,267 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:43:15,135 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:43:15,135 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:39:45+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:43:18,895 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:18,896 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:20:09+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.376</X>\r\n<Y>0.167</Y>\r\n<width>0.089</width>\r\n<height>0.237</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:43:18,897 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:43:19,082 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:43:21,515 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:21,515 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:18:27+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:43:21,517 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:43:21,815 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:43:21,816 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:43:21,816 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:43:22,776 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:43:22,778 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:58+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:43:22,779 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:43:22,779 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:43:23,654 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:23,655 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:19:44+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.341</X>\r\n<Y>0.193</Y>\r\n<width>0.107</width>\r\n<height>0.244</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:43:23,657 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:43:24,189 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:43:24,891 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:43:24,891 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:58+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:43:25,501 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:43:25,503 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:05+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:43:27,016 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:43:27,017 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:43:21+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:43:27,927 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:43:27,927 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:15+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:43:28,248 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:28,248 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:19:21+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.382</X>\r\n<Y>0.218</Y>\r\n<width>0.061</width>\r\n<height>0.294</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:43:28,252 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:43:28,555 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:43:29,137 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:43:29,138 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:43:21+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:43:30,152 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:43:30,152 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:25+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:43:30,330 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:30,331 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:18:26+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:43:30,334 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:43:30,573 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:43:31,250 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:43:31,251 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:43:21+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:43:32,570 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:32,571 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:19:19+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.532</X>\r\n<Y>0.134</Y>\r\n<width>0.048</width>\r\n<height>0.196</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:43:32,572 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:43:32,753 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:43:32,754 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:43:32,871 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:43:33,373 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:43:33,373 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:43:21+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:43:34,963 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:43:34,964 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:45+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:43:35,491 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:43:35,492 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:43:21+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:43:37,252 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:43:37,253 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:40:55+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.9\n}"}
2024-03-08 14:43:37,537 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:37,537 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:18:22+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:43:37,539 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:43:37,617 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:43:37,617 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:43:21+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:43:37,737 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:37,737 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:19:16+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.389</X>\r\n<Y>0.239</Y>\r\n<width>0.052</width>\r\n<height>0.221</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:43:37,739 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:43:37,822 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:43:37,822 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:43:37,823 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:43:37,895 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:43:39,607 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:43:39,607 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:41:05+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:43:39,732 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:43:39,732 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:43:21+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:43:41,855 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:43:41,856 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:43:21+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:43:42,098 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:43:42,100 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:41:15+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:43:42,673 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:42,673 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:18:45+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.563</X>\r\n<Y>0.112</Y>\r\n<width>0.046</width>\r\n<height>0.196</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:43:42,675 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:42,675 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:43:42,675 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:43:42,862 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:43:43,223 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:43,224 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:43:43,996 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:43:43,996 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:43:21+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:43:44,295 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:44,295 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:43:44,299 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:43:44,300 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:43:44,403 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:43:44,403 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:41:25+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.3\n}"}
2024-03-08 14:43:44,404 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:43:44,405 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:43:45,260 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:45,261 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:43:46,109 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:43:46,109 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:43:21+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:43:46,227 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:46,227 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:43:46,793 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:46,796 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:17:46+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:43:46,799 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:43:46,944 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:43:46,945 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:43:46,946 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:43:46,978 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:43:46,979 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:41:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:43:47,266 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:47,266 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:43:47,268 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:43:47,268 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:43:48,224 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:43:48,225 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:43:44+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:43:49,220 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:43:49,221 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:41:45+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:43:50,342 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:43:50,342 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:43:44+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:43:51,593 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:51,594 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:43:51,594 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:51,594 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T14:44:04+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.388</X>\r\n<Y>0.177</Y>\r\n<width>0.052</width>\r\n<height>0.252</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>false</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:43:51,596 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:43:51,785 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:43:51,786 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:41:55+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:43:51,876 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:51,877 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:43:51,995 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:43:52,125 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:52,126 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:43:52,369 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:52,369 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:43:52,373 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:43:52,373 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:43:52,465 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:43:52,465 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:43:45+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:43:52,638 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:52,639 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:43:52,689 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:43:52,689 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:43:53,240 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:53,241 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:43:54,033 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:43:54,033 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:05+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.8\n}"}
2024-03-08 14:43:54,235 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:54,235 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:43:54,591 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:43:54,591 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:43:45+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:43:54,592 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:43:54,592 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:43:55,150 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:55,151 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:17:39+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:43:55,152 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:43:55,233 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:55,233 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:43:55,469 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:43:56,224 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:56,225 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:43:56,600 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:43:56,600 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:15+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:43:56,716 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:43:56,716 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:43:45+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:43:57,233 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:57,233 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:43:58,235 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:58,236 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:43:58,772 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:43:58,773 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:25+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:43:58,819 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:183.222.237.7,方法类型:POST
2024-03-08 14:43:58,819 INFO (HttpController.java:76)- step2 ---> 请求内容:{"qq":"12"}
2024-03-08 14:43:58,834 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:43:58,834 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:43:45+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:43:59,995 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:43:59,996 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:00,958 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:00,958 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:43:45+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:01,354 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:44:01,357 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:44:01,358 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:44:01,358 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:44:03,074 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:03,075 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:43:45+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:03,121 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:03,121 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:18:17+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.527</X>\r\n<Y>0.125</Y>\r\n<width>0.050</width>\r\n<height>0.215</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:44:03,123 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:44:03,140 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:03,155 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:03,447 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:03,447 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:03,450 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:44:03,593 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:44:03,594 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:44:03,705 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:44:03,705 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:45+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:44:03,706 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:44:03,706 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:44:03,802 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:03,802 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:04,040 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:04,040 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:04,145 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:04,146 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:16:36+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:44:04,147 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:44:04,491 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:44:05,353 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:05,353 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:43:45+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:06,065 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:44:06,065 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:42:55+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.5\n}"}
2024-03-08 14:44:06,066 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:44:06,066 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:44:07,403 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:07,404 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:43:45+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:08,494 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:44:08,495 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:43:05+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:44:08,668 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:08,668 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:17:53+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.348</X>\r\n<Y>0.181</Y>\r\n<width>0.094</width>\r\n<height>0.245</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:44:08,672 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:44:08,840 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:44:09,594 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:09,594 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:10,854 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:44:10,854 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:43:15+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.8\n}"}
2024-03-08 14:44:11,588 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:11,588 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:12,326 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:183.222.237.7,方法类型:POST
2024-03-08 14:44:12,326 INFO (HttpController.java:76)- step2 ---> 请求内容:{"qq":"12"}
2024-03-08 14:44:13,063 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:13,065 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:16:09+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:44:13,081 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:44:13,244 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:44:13,245 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:43:25+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:44:13,247 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:44:13,247 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:44:13,471 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:44:13,678 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:13,678 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:13,865 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:13,866 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:17:40+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.345</X>\r\n<Y>0.194</Y>\r\n<width>0.094</width>\r\n<height>0.253</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:44:14,046 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:44:14,246 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:44:15,604 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:44:15,605 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:43:35+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.9\n}"}
2024-03-08 14:44:15,804 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:15,805 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:17,918 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:17,919 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:18,057 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:44:18,058 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:43:45+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:44:18,298 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:18,299 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:16:52+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.559</X>\r\n<Y>0.118</Y>\r\n<width>0.044</width>\r\n<height>0.195</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:44:18,302 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:44:18,637 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:44:18,638 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:44:18,638 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:44:20,033 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:20,034 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:20,420 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:44:20,420 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:43:56+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:44:20,423 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:44:20,424 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:44:20,846 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:20,846 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:15:47+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:44:20,848 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:44:21,180 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:44:22,156 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:22,157 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:22,740 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:22,740 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:15:22+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.387</X>\r\n<Y>0.231</Y>\r\n<width>0.054</width>\r\n<height>0.259</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:44:22,745 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:44:22,825 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:22,826 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:22,867 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:44:22,868 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:06+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.6\n}"}
2024-03-08 14:44:22,871 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:44:23,044 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:23,044 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:24,150 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:24,150 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:24,287 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:24,288 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:24,288 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:44:24,289 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:44:24,950 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:24,950 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:25,221 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:44:25,223 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:16+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.8\n}"}
2024-03-08 14:44:25,959 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:25,959 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:26,416 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:26,417 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:27,054 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:27,055 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:27,774 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:44:27,775 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.4\n}"}
2024-03-08 14:44:28,055 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:28,055 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:28,226 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:28,227 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:15:43+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:44:28,229 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:44:28,539 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:28,539 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:08+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:28,540 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:44:28,540 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:44:28,595 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:44:28,596 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:44:28,596 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:44:30,025 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:44:30,026 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:36+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.2\n}"}
2024-03-08 14:44:30,650 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:30,651 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:31+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:31,991 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:31,991 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:14:01+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.378</X>\r\n<Y>0.201</Y>\r\n<width>0.065</width>\r\n<height>0.286</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:44:31,995 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:44:32,030 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:32,031 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:32,134 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:44:32,367 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:32,367 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:32,582 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:44:32,583 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:46+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.5\n}"}
2024-03-08 14:44:32,610 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:32,613 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:32,770 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:32,771 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:31+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:32,772 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:44:32,772 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:44:33,117 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:33,117 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:34,024 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:34,024 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:34,892 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:34,892 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:31+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:35,055 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:35,055 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:35,123 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:35,123 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:14:14+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:44:35,125 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:44:35,275 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:44:36,114 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:36,115 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:37,013 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:37,014 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:31+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:37,061 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:37,061 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:37,882 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:44:37,882 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:56+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:44:37,883 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:44:37,884 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:44:39,134 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:39,135 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:31+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:41,173 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:41,173 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:13:36+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.375</X>\r\n<Y>0.213</Y>\r\n<width>0.062</width>\r\n<height>0.294</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:44:41,175 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:44:41,359 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:44:41,418 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:41,418 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:31+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:41,419 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:44:41,419 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:44:43,085 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:43,085 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:13:52+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:44:43,087 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:44:43,282 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:44:43,458 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:43,458 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:31+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:45,511 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:45,511 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:13:31+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.493</X>\r\n<Y>0.157</Y>\r\n<width>0.051</width>\r\n<height>0.229</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:44:45,513 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:44:45,565 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:45,566 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:31+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:45,935 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:44:47,659 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:47,659 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:32+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:48,157 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:44:48,158 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:45:06+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:44:48,158 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:44:48,158 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:44:49,740 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:49,741 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:32+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:49,741 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:44:49,741 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:44:49,783 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:49,784 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:10:58+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:44:49,785 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:44:49,967 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:44:50,057 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:50,057 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:13:12+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.381</X>\r\n<Y>0.201</Y>\r\n<width>0.065</width>\r\n<height>0.278</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:44:50,059 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:44:50,183 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:44:51,424 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:51,425 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:51,870 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:51,871 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:55+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:52,387 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:52,387 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:53,448 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:53,448 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:53,451 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:44:53,452 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:44:53,986 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:53,987 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:55+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:54,368 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:54,369 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:55,356 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:55,357 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:55,361 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:44:55,361 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:44:56,111 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:44:56,112 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:55+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:44:56,326 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:56,326 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:57,298 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:57,298 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:10:20+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:44:57,301 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:44:57,341 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:57,341 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:57,465 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:44:58,348 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:58,348 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:44:58,463 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:44:58,463 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:45:16+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:44:59,328 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:44:59,328 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:00,333 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:00,333 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:01,348 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:01,348 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:02,363 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:02,364 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:03,578 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:03,578 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:55+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:45:04,476 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:04,476 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:09:50+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:45:04,478 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:45:04,779 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:45:05,697 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:05,697 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:55+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:45:06,664 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:06,664 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:13:11+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.392</X>\r\n<Y>0.197</Y>\r\n<width>0.058</width>\r\n<height>0.244</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:45:06,666 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:45:06,872 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:45:07,822 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:07,824 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:55+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:45:07,825 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:45:07,825 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:45:07,830 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:45:07,831 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:45:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.5\n}"}
2024-03-08 14:45:09,940 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:09,940 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:55+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:45:11,435 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:11,435 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:12:46+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.348</X>\r\n<Y>0.147</Y>\r\n<width>0.104</width>\r\n<height>0.328</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:45:11,437 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:45:11,654 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:45:11,787 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:11,788 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:08:02+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:45:11,790 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:45:11,920 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:45:12,061 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:12,062 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:55+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:45:12,063 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:45:12,063 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:45:12,546 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:12,546 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:13,558 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:13,563 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:14,181 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:14,182 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:55+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:45:14,182 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:45:14,183 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:45:14,706 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:14,707 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:15,675 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:15,675 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:16,302 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:16,303 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:44:55+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:45:16,304 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:45:16,304 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:45:18,306 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:18,307 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:07:33+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:45:18,311 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:45:18,346 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:45:18,347 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:45:36+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.1\n}"}
2024-03-08 14:45:18,440 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:18,441 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:45:18+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:45:18,603 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:45:19,904 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:19,904 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T14:45:33+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.386</X>\r\n<Y>0.250</Y>\r\n<width>0.053</width>\r\n<height>0.221</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>false</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:45:19,906 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:45:19,993 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:19,994 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:20,169 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:45:20,210 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:20,210 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:20,552 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:20,553 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:45:18+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:45:22,853 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:22,854 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T14:45:35+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.360</X>\r\n<Y>0.142</Y>\r\n<width>0.083</width>\r\n<height>0.216</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>false</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:45:22,855 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:45:22,919 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:22,919 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:23,118 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:45:23,169 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:23,170 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:23,172 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:45:23,173 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:45:23,409 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:23,410 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:23,686 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:23,686 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:23,688 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:45:23,689 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:45:23,692 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:23,692 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:45:18+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:45:23,938 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:23,938 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:24,264 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:24,265 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:24,662 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:24,662 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:25,545 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:25,546 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:25,803 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:25,804 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:45:18+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:45:26,674 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:26,675 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:27,665 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:27,665 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:27,937 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:27,937 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:45:18+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:45:28,574 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:28,574 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:28,743 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:45:28,743 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:45:46+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.8\n}"}
2024-03-08 14:45:29,577 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:29,577 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:30,048 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:30,049 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:45:19+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:45:30,580 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:30,580 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:32,179 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:32,180 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:45:19+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:45:34,288 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:34,289 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:45:19+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:45:34,597 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:34,597 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:12:21+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.385</X>\r\n<Y>0.181</Y>\r\n<width>0.058</width>\r\n<height>0.208</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:45:34,600 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:45:34,808 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:45:34,808 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:45:34,809 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:45:36,416 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:36,417 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:45:19+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:45:38,193 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:45:38,193 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:45:56+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.8\n}"}
2024-03-08 14:45:38,314 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:38,314 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:00:36+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:45:38,316 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:45:38,481 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:45:38,545 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:38,546 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:45:19+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:45:38,860 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:38,861 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:12:12+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.428</X>\r\n<Y>0.161</Y>\r\n<width>0.058</width>\r\n<height>0.215</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:45:38,863 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:45:39,241 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:45:40,668 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:40,668 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:45:42+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:45:42,800 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:42,801 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:45:42+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:45:42,950 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:42,952 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:11:59+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.380</X>\r\n<Y>0.232</Y>\r\n<width>0.062</width>\r\n<height>0.236</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:45:42,954 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:45:43,102 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:43,103 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:43,172 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:45:43,337 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:43,337 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:43,586 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:43,586 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:44,234 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:44,234 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:44,923 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:44,924 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:45:42+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:45:45,247 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:45,248 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:46,287 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:46,287 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:47,048 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:47,049 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:45:42+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:45:47,050 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371901924089856
2024-03-08 14:45:47,050 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371901924089856] back to RootContext
2024-03-08 14:45:47,220 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:47,220 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:48,206 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:48,207 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:48,422 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:45:48,423 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:46:06+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t26.8\n}"}
2024-03-08 14:45:48,423 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373581684121600
2024-03-08 14:45:48,424 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373581684121600] back to RootContext
2024-03-08 14:45:49,158 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:49,160 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:45:42+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:45:50,988 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:50,989 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T18:00:31+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:45:50,991 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:45:51,214 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:45:51,289 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:51,290 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:45:42+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:45:51,290 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:45:51,291 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:45:52,838 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:52,839 INFO (HttpController.java:76)- step2 ---> 请求内容:{"linedetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>192.168.2.64</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>bc:5e:33:00:14:65</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-08T14:46:06+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>linedetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>linedetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>1</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>442</positionX>\r\n<positionY>342</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>566</positionX>\r\n<positionY>233</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n<detectionTarget>human</detectionTarget>\r\n<TargetRect>\r\n<X>0.430</X>\r\n<Y>0.159</Y>\r\n<width>0.068</width>\r\n<height>0.306</height>\r\n</TargetRect>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五桂村-特殊人员枪机</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>false</isDataRetransmission>\r\n<faceBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</faceBackgroundImageResolution>\r\n<lineBackgroundImageResolution>\r\n<height>1080</height>\r\n<width>1920</width>\r\n</lineBackgroundImageResolution>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:45:52,842 INFO (HttpController.java:117)- step3 ---> eventType:linedetection,macAddress:bc-5e-33-00-14-65,channelName:青白江区-五桂村-特殊人员枪机
2024-03-08 14:45:52,844 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:52,845 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:53,136 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:53,137 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:53,255 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:45:53,364 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:53,364 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:53,398 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:53,399 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:45:42+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:45:53,626 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:53,626 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:53,856 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:53,857 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:54,318 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:54,318 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:55,197 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:55,199 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:55,201 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:45:55,201 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:45:55,522 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:55,522 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:45:42+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:45:55,522 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:45:55,523 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:45:56,276 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:56,277 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:57,301 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:57,301 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:57,304 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:45:57,305 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:45:57,656 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:57,657 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:45:42+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:45:57,898 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:45:57,898 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:46:16+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:45:58,208 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:58,209 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:59,185 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:45:59,186 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:45:59,781 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:45:59,782 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:45:42+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:46:00,188 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:46:00,189 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:46:00,190 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371310380425216
2024-03-08 14:46:00,191 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371310380425216] back to RootContext
2024-03-08 14:46:01,007 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:46:01,008 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:52:58+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:46:01,010 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:46:01,210 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:46:01,211 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:46:01,260 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:46:02,206 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:46:02,206 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:46:03,273 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:46:03,274 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:46:04,288 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:46:04,289 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:46:05,216 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:46:05,217 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:46:06,188 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:46:06,188 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:46:07,286 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:46:07,286 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:46:07,287 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509371271398563840
2024-03-08 14:46:07,288 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509371271398563840] back to RootContext
2024-03-08 14:46:08,125 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:223.108.211.86,方法类型:POST
2024-03-08 14:46:08,126 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"10.168.1.123\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:2f\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:46:26+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.0\n}"}
2024-03-08 14:46:08,126 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509373667587661824
2024-03-08 14:46:08,126 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509373667587661824] back to RootContext
2024-03-08 14:46:08,188 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:46:08,189 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:46:08,958 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:46:08,959 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:50:58+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:46:08,961 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:46:09,186 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:46:09,186 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:46:09,188 WARN (XidResource.java:41)- xid in change during RPC from null to 192.168.2.241:8091:509370387587407872
2024-03-08 14:46:09,188 WARN (XidResource.java:44)- bind [192.168.2.241:8091:509370387587407872] back to RootContext
2024-03-08 14:46:09,342 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:46:09,911 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:46:09,911 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:46:06+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:46:10,190 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:46:10,190 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:46:11,269 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:46:11,269 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:46:12,023 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:46:12,024 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:46:06+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:46:12,281 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:46:12,281 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:46:13,175 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:46:13,175 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:46:14,147 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn/inventory/http/receiveEventData,设备IP:171.217.67.188,方法类型:POST
2024-03-08 14:46:14,147 INFO (HttpController.java:76)- step2 ---> 请求内容:{"voltageinstable":"{\n\t\"ipAddress\":\t\"192.168.0.200\",\n\t\"portNo\":\t852,\n\t\"protocol\":\t\"HTTP\",\n\t\"macAddress\":\t\"a4:4c:62:08:d3:21\",\n\t\"channelID\":\t1,\n\t\"dateTime\":\t\"2024-03-08T14:46:06+08:00\",\n\t\"activePostCount\":\t1,\n\t\"eventType\":\t\"voltageinstable\",\n\t\"eventState\":\t\"active\",\n\t\"eventDescription\":\t\"undervoltage\",\n\t\"voltageValue\":\t27.9\n}"}
2024-03-08 14:46:14,206 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:46:14,207 INFO (HttpController.java:76)- step2 ---> 请求内容:{}
2024-03-08 14:46:16,029 INFO (HttpController.java:75)- step1 ---> 请求路径:http://scjskj.tpddns.cn:852/inventory/http/receiveEventData,设备IP:223.108.211.83,方法类型:POST
2024-03-08 14:46:16,030 INFO (HttpController.java:76)- step2 ---> 请求内容:{"fielddetection":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<EventNotificationAlert version=\"2.0\" xmlns=\"http://www.hikvision.com/ver20/XMLSchema\">\r\n<ipAddress>10.168.1.175</ipAddress>\r\n<portNo>852</portNo>\r\n<protocol>HTTP</protocol>\r\n<macAddress>80:be:af:b9:89:d5</macAddress>\r\n<channelID>1</channelID>\r\n<dateTime>2024-03-07T17:50:13+08:00</dateTime>\r\n<activePostCount>1</activePostCount>\r\n<eventType>fielddetection</eventType>\r\n<eventState>active</eventState>\r\n<eventDescription>fielddetection alarm</eventDescription>\r\n<DetectionRegionList>\r\n<DetectionRegionEntry>\r\n<regionID>2</regionID>\r\n<sensitivityLevel>50</sensitivityLevel>\r\n<RegionCoordinatesList>\r\n<RegionCoordinates>\r\n<positionX>261</positionX>\r\n<positionY>261</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>243</positionX>\r\n<positionY>657</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>540</positionX>\r\n<positionY>669</positionY>\r\n</RegionCoordinates>\r\n<RegionCoordinates>\r\n<positionX>575</positionX>\r\n<positionY>257</positionY>\r\n</RegionCoordinates>\r\n</RegionCoordinatesList>\r\n</DetectionRegionEntry>\r\n</DetectionRegionList>\r\n<channelName>青白江区-五里坝社区-特殊人员1</channelName>\r\n<detectionPictureTransType>binary</detectionPictureTransType>\r\n<detectionPicturesNumber>1</detectionPicturesNumber>\r\n<isDataRetransmission>true</isDataRetransmission>\r\n</EventNotificationAlert>\r\n"}
2024-03-08 14:46:16,032 INFO (HttpController.java:117)- step3 ---> eventType:fielddetection,macAddress:80-be-af-b9-89-d5,channelName:青白江区-五里坝社区-特殊人员1
2024-03-08 14:46:16,325 INFO (HttpController.java:155)- step5 ---> 发送越界告警
2024-03-08 14:47:16,323 WARN (NotifyCenter.java:145)- [NotifyCenter] Start destroying Publisher
2024-03-08 14:47:16,323 WARN (NotifyCenter.java:162)- [NotifyCenter] Destruction of the end
2024-03-08 14:47:16,323 WARN (HttpClientBeanHolder.java:108)- [HttpClientBeanHolder] Start destroying common HttpClient
2024-03-08 14:47:16,324 WARN (HttpClientBeanHolder.java:114)- [HttpClientBeanHolder] Destruction of the end
2024-03-08 14:47:16,327 INFO (QuartzScheduler.java:585)- Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2024-03-08 14:47:16,618 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'Nacos-Watch-Task-Scheduler'
2024-03-08 14:47:16,631 ERROR (AbstractCanalClient.java:85)- canal client 异常
com.alibaba.otter.canal.protocol.exception.CanalClientException: java.nio.channels.ClosedByInterruptException
	at com.alibaba.otter.canal.client.impl.SimpleCanalConnector.getWithoutAck(SimpleCanalConnector.java:316)
	at top.javatool.canal.client.client.AbstractCanalClient.process(AbstractCanalClient.java:76)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedByInterruptException: null
	at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199)
	at java.base/sun.nio.ch.SocketChannelImpl.endRead(SocketChannelImpl.java:334)
	at java.base/sun.nio.ch.SocketChannelImpl.pollRead(SocketChannelImpl.java:970)
	at java.base/sun.nio.ch.SocketAdaptor$SocketInputStream.read(SocketAdaptor.java:209)
	at java.base/sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:101)
	at java.base/java.nio.channels.Channels$ReadableByteChannelImpl.read(Channels.java:388)
	at com.alibaba.otter.canal.client.impl.SimpleCanalConnector.read(SimpleCanalConnector.java:402)
	at com.alibaba.otter.canal.client.impl.SimpleCanalConnector.readNextPacket(SimpleCanalConnector.java:392)
	at com.alibaba.otter.canal.client.impl.SimpleCanalConnector.readNextPacket(SimpleCanalConnector.java:376)
	at com.alibaba.otter.canal.client.impl.SimpleCanalConnector.receiveMessages(SimpleCanalConnector.java:321)
	at com.alibaba.otter.canal.client.impl.SimpleCanalConnector.getWithoutAck(SimpleCanalConnector.java:314)
	... 2 common frames omitted
2024-03-08 14:47:16,636 INFO (NacosServiceRegistry.java:94)- De-registering from Nacos Server now...
2024-03-08 14:47:16,636 INFO (BeatReactor.java:101)- [BEAT] removing beat: DEFAULT_GROUP@@inventory-service:192.168.1.124:852 from beat map.
2024-03-08 14:47:16,636 INFO (NamingProxy.java:260)- [DEREGISTER-SERVICE] a4e3d3db-c95f-49ed-82fa-92d05a9d6673 deregistering service DEFAULT_GROUP@@inventory-service with instance: Instance{instanceId='null', ip='192.168.1.124', port=852, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={}}
2024-03-08 14:47:16,639 INFO (NacosServiceRegistry.java:114)- De-registration finished.
2024-03-08 14:47:16,640 INFO (BeatReactor.java:147)- com.alibaba.nacos.client.naming.beat.BeatReactor do shutdown begin
2024-03-08 14:47:17,253 INFO (BeatReactor.java:149)- com.alibaba.nacos.client.naming.beat.BeatReactor do shutdown stop
2024-03-08 14:47:17,253 INFO (HostReactor.java:413)- com.alibaba.nacos.client.naming.core.HostReactor do shutdown begin
2024-03-08 14:47:17,638 INFO (PushReceiver.java:97)- received push data: {"type":"dom","data":"{\"dom\":\"DEFAULT_GROUP@@inventory-service\",\"name\":\"DEFAULT_GROUP@@inventory-service\",\"cacheMillis\":10000,\"lastRefTime\":1709880456359,\"checksum\":\"c1d97f833d1ec428feb5de55e1b010d9\",\"useSpecifiedURL\":false,\"clusters\":\"DEFAULT\",\"env\":\"\",\"hosts\":[],\"metadata\":{}}","lastRefTime":964532191441382} from /192.168.2.241
2024-03-08 14:47:17,639 INFO (HostReactor.java:238)- removed ips(1) service: DEFAULT_GROUP@@inventory-service@@DEFAULT -> [{"instanceId":"192.168.1.124#852#DEFAULT#DEFAULT_GROUP@@inventory-service","ip":"192.168.1.124","port":852,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@inventory-service","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}]
2024-03-08 14:47:17,640 INFO (HostReactor.java:271)- current ips:(0) service: DEFAULT_GROUP@@inventory-service@@DEFAULT -> []
2024-03-08 14:47:20,279 INFO (PushReceiver.java:132)- com.alibaba.nacos.client.naming.core.PushReceiver do shutdown begin
2024-03-08 14:47:23,302 INFO (PushReceiver.java:136)- com.alibaba.nacos.client.naming.core.PushReceiver do shutdown stop
2024-03-08 14:47:23,303 INFO (FailoverReactor.java:132)- com.alibaba.nacos.client.naming.backups.FailoverReactor do shutdown begin
2024-03-08 14:47:23,304 INFO (FailoverReactor.java:134)- com.alibaba.nacos.client.naming.backups.FailoverReactor do shutdown stop
2024-03-08 14:47:23,304 INFO (HostReactor.java:418)- com.alibaba.nacos.client.naming.core.HostReactor do shutdown stop
2024-03-08 14:47:23,305 INFO (NamingProxy.java:719)- com.alibaba.nacos.client.naming.net.NamingProxy do shutdown begin
2024-03-08 14:47:23,305 WARN (NamingHttpClientManager.java:72)- [NamingHttpClientManager] Start destroying NacosRestTemplate
2024-03-08 14:47:23,306 WARN (NamingHttpClientManager.java:79)- [NamingHttpClientManager] Destruction of the end
2024-03-08 14:47:23,306 INFO (CredentialWatcher.java:105)- [null] CredentialWatcher is stopped
2024-03-08 14:47:23,306 INFO (CredentialService.java:98)- [null] CredentialService is freed
2024-03-08 14:47:23,307 INFO (NamingProxy.java:723)- com.alibaba.nacos.client.naming.net.NamingProxy do shutdown stop
2024-03-08 14:47:23,309 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'asyncExecutor'
2024-03-08 14:47:23,312 INFO (EmbedServer.java:91)- >>>>>>>>>>> xxl-job remoting server stop.
2024-03-08 14:47:23,315 INFO (ExecutorRegistryThread.java:87)- >>>>>>>>>>> xxl-job registry-remove success, registryParam:RegistryParam{registryGroup='EXECUTOR', registryKey='inventory-service', registryValue='http://192.168.2.230:9998/'}, registryResult:ReturnT [code=200, msg=null, content=null]
2024-03-08 14:47:23,315 INFO (ExecutorRegistryThread.java:105)- >>>>>>>>>>> xxl-job, executor registry thread destroy.
2024-03-08 14:47:23,315 INFO (EmbedServer.java:117)- >>>>>>>>>>> xxl-job remoting server destroy success.
2024-03-08 14:47:23,316 INFO (JobLogFileCleanThread.java:99)- >>>>>>>>>>> xxl-job, executor JobLogFileCleanThread thread destroy.
2024-03-08 14:47:23,316 INFO (TriggerCallbackThread.java:98)- >>>>>>>>>>> xxl-job, executor callback thread destroy.
2024-03-08 14:47:23,316 INFO (TriggerCallbackThread.java:128)- >>>>>>>>>>> xxl-job, executor retry callback thread destroy.
2024-03-08 14:47:23,317 WARN (DisposableBeanAdapter.java:349)- Destroy method 'close' on bean with name 'nacosServiceRegistry' threw an exception: java.lang.NullPointerException
2024-03-08 14:47:23,322 INFO (QuartzScheduler.java:666)- Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2024-03-08 14:47:23,323 INFO (QuartzScheduler.java:585)- Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2024-03-08 14:47:23,324 INFO (QuartzScheduler.java:740)- Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2024-03-08 14:47:23,325 INFO (SchedulerFactoryBean.java:845)- Shutting down Quartz Scheduler
2024-03-08 14:47:23,325 INFO (ShutdownManager.java:29)- ====关闭后台任务任务线程池====
2024-03-08 14:47:23,327 WARN (InitDestroyAnnotationBeanPostProcessor.java:185)- Destroy method on bean with name 'shutdownManager' threw an exception: java.lang.ExceptionInInitializerError
2024-03-08 14:47:23,331 INFO (SLF4JLogger.java:71)- Closed connection [connectionId{localValue:2, serverValue:1470}] to 192.168.2.241:27017 because the pool has been closed.
2024-03-08 14:47:23,374 INFO (AbstractEntityManagerFactoryBean.java:598)- Closing JPA EntityManagerFactory for persistence unit 'default'
2024-03-08 14:47:23,376 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'threadPoolTaskExecutor'
2024-03-08 14:47:23,377 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'executor'
2024-03-08 14:47:23,378 INFO (HikariDataSource.java:350)- vapp-inventory-pool - Shutdown initiated...
2024-03-08 14:47:23,380 INFO (HikariDataSource.java:352)- vapp-inventory-pool - Shutdown completed.
2024-03-08 14:47:23,381 INFO (AbstractNettyRemotingClient.java:384)- channel inactive: [id: 0x6864db0d, L:/192.168.2.230:27159 ! R:/192.168.2.241:8091]
2024-03-08 14:47:23,381 INFO (NettyClientChannelManager.java:124)- return to pool, rm channel:[id: 0x6864db0d, L:/192.168.2.230:27159 ! R:/192.168.2.241:8091]
2024-03-08 14:47:23,381 INFO (NettyPoolableFactory.java:133)- channel valid false,channel:[id: 0x6864db0d, L:/192.168.2.230:27159 ! R:/192.168.2.241:8091]
2024-03-08 14:47:23,381 INFO (NettyPoolableFactory.java:120)- will destroy channel:[id: 0x6864db0d, L:/192.168.2.230:27159 ! R:/192.168.2.241:8091]
2024-03-08 14:47:23,381 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x6864db0d, L:/192.168.2.230:27159 ! R:/192.168.2.241:8091]) will closed
2024-03-08 14:47:23,381 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x6864db0d, L:/192.168.2.230:27159 ! R:/192.168.2.241:8091]) will closed
2024-03-08 14:47:33,725 WARN (NacosPropertySourceBuilder.java:87)- Ignore the empty nacos configuration and get it based on dataId[inventory-service] & group[inventory-service]
2024-03-08 14:47:33,735 WARN (NacosPropertySourceBuilder.java:87)- Ignore the empty nacos configuration and get it based on dataId[inventory-service-common.yml] & group[inventory-service]
2024-03-08 14:47:33,746 WARN (NacosPropertySourceBuilder.java:87)- Ignore the empty nacos configuration and get it based on dataId[inventory-service-dev.yml] & group[inventory-service]
2024-03-08 14:47:33,748 INFO (PropertySourceBootstrapConfiguration.java:112)- Located property source: [BootstrapPropertySource {name='bootstrapProperties-inventory-service-dev.yml,inventory-service'}, BootstrapPropertySource {name='bootstrapProperties-inventory-service-common.yml,inventory-service'}, BootstrapPropertySource {name='bootstrapProperties-inventory-service.yml,inventory-service'}, BootstrapPropertySource {name='bootstrapProperties-inventory-service,inventory-service'}, BootstrapPropertySource {name='bootstrapProperties-canal.yml,common'}, BootstrapPropertySource {name='bootstrapProperties-seata.yml,common'}, BootstrapPropertySource {name='bootstrapProperties-minio.yml,common'}, BootstrapPropertySource {name='bootstrapProperties-jwt.yml,common'}, BootstrapPropertySource {name='bootstrapProperties-mongo.yml,common'}, BootstrapPropertySource {name='bootstrapProperties-redis.yml,common'}]
2024-03-08 14:47:38,619 INFO (SpringApplication.java:655)- The following profiles are active: common,dev
2024-03-08 14:47:41,088 INFO (RepositoryConfigurationDelegate.java:249)- Multiple Spring Data modules found, entering strict repository configuration mode!
2024-03-08 14:47:41,089 INFO (RepositoryConfigurationDelegate.java:127)- Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2024-03-08 14:47:41,150 INFO (RepositoryConfigurationDelegate.java:187)- Finished Spring Data repository scanning in 50ms. Found 0 JPA repository interfaces.
2024-03-08 14:47:41,160 INFO (RepositoryConfigurationDelegate.java:249)- Multiple Spring Data modules found, entering strict repository configuration mode!
2024-03-08 14:47:41,160 INFO (RepositoryConfigurationDelegate.java:127)- Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-03-08 14:47:41,190 INFO (RepositoryConfigurationDelegate.java:187)- Finished Spring Data repository scanning in 29ms. Found 0 MongoDB repository interfaces.
2024-03-08 14:47:41,205 INFO (RepositoryConfigurationDelegate.java:249)- Multiple Spring Data modules found, entering strict repository configuration mode!
2024-03-08 14:47:41,206 INFO (RepositoryConfigurationDelegate.java:127)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-03-08 14:47:41,245 INFO (RepositoryConfigurationDelegate.java:187)- Finished Spring Data repository scanning in 26ms. Found 0 Redis repository interfaces.
2024-03-08 14:47:41,427 WARN (EndpointId.java:155)- Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2024-03-08 14:47:41,726 INFO (GenericScope.java:295)- BeanFactory id=e5934a13-875f-376b-b71b-32b701d64d39
2024-03-08 14:47:41,786 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$e04b1263] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:41,798 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:41,841 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:41,852 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:41,855 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:41,857 INFO (SeataAutoConfiguration.java:65)- Automatically configure Seata
2024-03-08 14:47:41,913 INFO (ConfigurationFactory.java:65)- load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2024-03-08 14:47:41,921 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:41,938 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:42,276 INFO (GlobalTransactionScanner.java:164)- Initializing Global Transaction Clients ... 
2024-03-08 14:47:42,423 INFO (NettyClientBootstrap.java:147)- NettyClientBootstrap has started
2024-03-08 14:47:42,423 INFO (GlobalTransactionScanner.java:172)- Transaction Manager Client is initialized. applicationId[inventory-service] txServiceGroup[my_test_tx_group]
2024-03-08 14:47:42,439 INFO (AsyncWorker.java:125)- Async Commit Buffer Limit: 10000
2024-03-08 14:47:42,440 INFO (ResourceManagerXA.java:40)- ResourceManagerXA init ...
2024-03-08 14:47:42,448 INFO (NettyClientBootstrap.java:147)- NettyClientBootstrap has started
2024-03-08 14:47:42,449 INFO (GlobalTransactionScanner.java:177)- Resource Manager is initialized. applicationId[inventory-service] txServiceGroup[my_test_tx_group]
2024-03-08 14:47:42,449 INFO (GlobalTransactionScanner.java:181)- Global Transaction Clients are initialized. 
2024-03-08 14:47:42,840 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'shiroConfig' of type [com.jsxa.vapp.common.shiro.ShiroConfig$$EnhancerBySpringCGLIB$$b6babf33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:42,929 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'jwtTokenUtil' of type [com.jsxa.vapp.common.utils.JwtTokenUtil] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:43,021 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:43,041 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$49656537] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:43,049 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:43,058 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:43,089 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:43,114 INFO (SeataAutoDataSourceProxyCreator.java:45)- Auto proxy of [dataSource]
2024-03-08 14:47:43,138 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:43,153 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:43,163 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:43,203 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:43,206 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'userMapper' of type [com.sun.proxy.$Proxy141] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:43,223 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:43,226 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy142] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:43,239 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:43,240 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'roleMapper' of type [com.sun.proxy.$Proxy143] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:43,254 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'permissionMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:43,256 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'permissionMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:43,267 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'rolePermissionMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:43,268 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'rolePermissionMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:43,274 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'shiroRealm' of type [com.jsxa.vapp.common.shiro.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:43,290 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:43,322 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 14:47:43,432 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'executor'
2024-03-08 14:47:44,025 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 852 (http)
2024-03-08 14:47:44,076 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["http-nio-852"]
2024-03-08 14:47:44,077 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2024-03-08 14:47:44,078 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.37]
2024-03-08 14:47:44,475 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2024-03-08 14:47:44,476 INFO (ServletWebServerApplicationContext.java:285)- Root WebApplicationContext: initialization completed in 5829 ms
2024-03-08 14:47:45,096 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'threadPoolTaskExecutor'
2024-03-08 14:47:45,142 INFO (HikariDataSource.java:110)- vapp-inventory-pool - Starting...
2024-03-08 14:47:45,612 INFO (HikariDataSource.java:110)- HikariPool-1 - Starting...
2024-03-08 14:47:45,776 INFO (HikariDataSource.java:123)- HikariPool-1 - Start completed.
2024-03-08 14:47:45,971 INFO (HikariDataSource.java:110)- HikariPool-2 - Starting...
2024-03-08 14:47:46,080 INFO (HikariDataSource.java:123)- HikariPool-2 - Start completed.
2024-03-08 14:47:46,999 INFO (PoolBase.java:535)- vapp-inventory-pool - Driver does not support get/set network timeout for connections. (getNetworkTimeout)
2024-03-08 14:47:47,002 INFO (HikariDataSource.java:123)- vapp-inventory-pool - Start completed.
2024-03-08 14:47:47,077 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-391f1070-7fb6-4c1b-bcac-b495d455a2a2] [subscribe] service.vgroupMapping.my_test_tx_group+SEATA_GROUP+391f1070-7fb6-4c1b-bcac-b495d455a2a2
2024-03-08 14:47:47,079 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-391f1070-7fb6-4c1b-bcac-b495d455a2a2] [add-listener] ok, tenant=391f1070-7fb6-4c1b-bcac-b495d455a2a2, dataId=service.vgroupMapping.my_test_tx_group, group=SEATA_GROUP, cnt=1
2024-03-08 14:47:47,103 INFO (InitUtils.java:65)- initializer namespace from System Property :null
2024-03-08 14:47:47,103 INFO (InitUtils.java:74)- initializer namespace from System Environment :null
2024-03-08 14:47:47,104 INFO (InitUtils.java:84)- initializer namespace from System Property :null
2024-03-08 14:47:47,416 INFO (HostReactor.java:232)- new ips(1) service: SEATA_GROUP@@seata-server@@default -> [{"instanceId":"192.168.2.241#8091#default#SEATA_GROUP@@seata-server","ip":"192.168.2.241","port":8091,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"default","serviceName":"SEATA_GROUP@@seata-server","metadata":{},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceIdGenerator":"simple"}]
2024-03-08 14:47:47,421 INFO (HostReactor.java:271)- current ips:(1) service: SEATA_GROUP@@seata-server@@default -> [{"instanceId":"192.168.2.241#8091#default#SEATA_GROUP@@seata-server","ip":"192.168.2.241","port":8091,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"default","serviceName":"SEATA_GROUP@@seata-server","metadata":{},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceIdGenerator":"simple"}]
2024-03-08 14:47:47,428 INFO (NettyClientChannelManager.java:99)- will connect to 192.168.2.241:8091
2024-03-08 14:47:47,430 INFO (RmNettyRemotingClient.java:244)- RM will register :jdbc:mysql://192.168.2.241:6033/vapp_inventory
2024-03-08 14:47:47,436 INFO (NettyPoolableFactory.java:56)- NettyPool create channel to transactionRole:RMROLE,address:192.168.2.241:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.2.241:6033/vapp_inventory', applicationId='inventory-service', transactionServiceGroup='my_test_tx_group'} >
2024-03-08 14:47:48,137 INFO (RmNettyRemotingClient.java:151)- register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xa8b6f80c, L:/192.168.2.230:12604 - R:/192.168.2.241:8091]
2024-03-08 14:47:48,143 INFO (NettyPoolableFactory.java:81)- register success, cost 88 ms, version:1.3.0,role:RMROLE,channel:[id: 0xa8b6f80c, L:/192.168.2.230:12604 - R:/192.168.2.241:8091]
2024-03-08 14:47:48,243 INFO (LogHelper.java:31)- HHH000204: Processing PersistenceUnitInfo [name: default]
2024-03-08 14:47:48,389 INFO (Version.java:44)- HHH000412: Hibernate ORM core version 5.4.18.Final
2024-03-08 14:47:48,648 INFO (JavaReflectionManager.java:49)- HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2024-03-08 14:47:48,770 INFO (Version.java:41)- Redisson 3.12.5
2024-03-08 14:47:48,887 INFO (Dialect.java:172)- HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2024-03-08 14:47:49,245 INFO (JtaPlatformInitiator.java:52)- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-03-08 14:47:49,264 INFO (AbstractEntityManagerFactoryBean.java:416)- Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-03-08 14:47:49,294 INFO (ConnectionPool.java:167)- 1 connections initialized for /192.168.2.241:6379
2024-03-08 14:47:49,298 INFO (ConnectionPool.java:167)- 24 connections initialized for /192.168.2.241:6379
2024-03-08 14:47:50,303 INFO (SLF4JLogger.java:71)- Cluster created with settings {hosts=[192.168.2.241:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2024-03-08 14:47:50,376 INFO (SLF4JLogger.java:71)- Opened connection [connectionId{localValue:1, serverValue:1474}] to 192.168.2.241:27017
2024-03-08 14:47:50,384 INFO (SLF4JLogger.java:71)- Monitor thread successfully connected to server with description ServerDescription{address=192.168.2.241:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=5669100}
2024-03-08 14:47:51,248 INFO (StdSchedulerFactory.java:1220)- Using default implementation for ThreadExecutor
2024-03-08 14:47:51,265 INFO (SchedulerSignalerImpl.java:61)- Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2024-03-08 14:47:51,266 INFO (QuartzScheduler.java:229)- Quartz Scheduler v.2.3.2 created.
2024-03-08 14:47:51,267 INFO (RAMJobStore.java:155)- RAMJobStore initialized.
2024-03-08 14:47:51,268 INFO (QuartzScheduler.java:294)- Scheduler meta-data: Quartz Scheduler (v2.3.2) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2024-03-08 14:47:51,268 INFO (StdSchedulerFactory.java:1374)- Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2024-03-08 14:47:51,268 INFO (StdSchedulerFactory.java:1378)- Quartz scheduler version: 2.3.2
2024-03-08 14:47:51,269 INFO (QuartzScheduler.java:2293)- JobFactory set to: com.jsxa.vapp.common.quartz.MyJobFactory@387f581e
2024-03-08 14:47:51,623 WARN (JpaBaseConfiguration.java:220)- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-03-08 14:47:52,396 INFO (InitUtils.java:65)- initializer namespace from System Property :null
2024-03-08 14:47:52,396 INFO (InitUtils.java:74)- initializer namespace from System Environment :null
2024-03-08 14:47:52,396 INFO (InitUtils.java:84)- initializer namespace from System Property :null
2024-03-08 14:47:52,703 INFO (EndpointLinksResolver.java:58)- Exposing 2 endpoint(s) beneath base path '/actuator'
2024-03-08 14:47:52,897 INFO (XxlJobConfig.java:46)- >>>>>>>>>>> xxl-job config init.
2024-03-08 14:47:52,928 INFO (PropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2024-03-08 14:47:53,071 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService
2024-03-08 14:47:53,071 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'asyncExecutor'
2024-03-08 14:47:53,091 WARN (URLConfigurationSource.java:121)- No URLs will be polled as dynamic configuration sources.
2024-03-08 14:47:53,091 INFO (URLConfigurationSource.java:122)- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2024-03-08 14:47:53,096 WARN (URLConfigurationSource.java:121)- No URLs will be polled as dynamic configuration sources.
2024-03-08 14:47:53,099 INFO (URLConfigurationSource.java:122)- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2024-03-08 14:47:53,705 WARN (ThymeleafAutoConfiguration.java:106)- Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2024-03-08 14:47:53,768 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'Nacos-Watch-Task-Scheduler'
2024-03-08 14:47:54,957 WARN (FreeMarkerAutoConfiguration.java:67)- Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2024-03-08 14:47:56,014 WARN (RedisStarterDeprecationWarningAutoConfiguration.java:43)- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
2024-03-08 14:47:56,764 INFO (XxlJobExecutor.java:183)- >>>>>>>>>>> xxl-job register jobhandler success, name:updateVaccineReleaseStatusByRtJobHandler, jobHandler:com.xxl.job.core.handler.impl.MethodJobHandler@705a2022[class com.jsxa.vapp.inventory.xxxJob.jobhandler.VaccinaReleaseStatusXxlJob#updateProjectAuctionStatusBmzJobHandler]
2024-03-08 14:47:56,959 INFO (EmbedServer.java:82)- >>>>>>>>>>> xxl-job remoting server start success, nettype = class com.xxl.job.core.server.EmbedServer, port = 9998
2024-03-08 14:47:57,094 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["http-nio-852"]
2024-03-08 14:47:57,122 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 852 (http) with context path ''
2024-03-08 14:47:57,126 INFO (BeatReactor.java:81)- [BEAT] adding beat: BeatInfo{port=852, ip='192.168.1.124', weight=1.0, serviceName='DEFAULT_GROUP@@inventory-service', cluster='DEFAULT', metadata={preserved.register.source=SPRING_CLOUD}, scheduled=false, period=5000, stopped=false} to beat map.
2024-03-08 14:47:57,128 INFO (NamingProxy.java:230)- [REGISTER-SERVICE] a4e3d3db-c95f-49ed-82fa-92d05a9d6673 registering service DEFAULT_GROUP@@inventory-service with instance: Instance{instanceId='null', ip='192.168.1.124', port=852, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={preserved.register.source=SPRING_CLOUD}}
2024-03-08 14:47:57,131 INFO (NacosServiceRegistry.java:75)- nacos registry, DEFAULT_GROUP inventory-service 192.168.1.124:852 register finished
2024-03-08 14:47:57,526 INFO (DocumentationPluginsBootstrapper.java:160)- Context refreshed
2024-03-08 14:47:57,539 INFO (DocumentationPluginsBootstrapper.java:163)- Found 1 custom documentation plugin(s)
2024-03-08 14:47:57,579 INFO (ApiListingReferenceScanner.java:41)- Scanning for api listing references
2024-03-08 14:47:57,745 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: downloadTemplateExcelUsingGET_1
2024-03-08 14:47:57,759 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: exportToExcelUsingGET_1
2024-03-08 14:47:57,767 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: importByExcelUsingPOST_1
2024-03-08 14:47:57,803 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: downloadTemplateExcelUsingGET_2
2024-03-08 14:47:57,821 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: exportToExcelUsingGET_2
2024-03-08 14:47:57,828 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: importByExcelUsingPOST_2
2024-03-08 14:47:57,843 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: downloadTemplateExcelUsingGET_3
2024-03-08 14:47:57,852 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: exportToExcelUsingGET_3
2024-03-08 14:47:57,857 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: importByExcelUsingPOST_3
2024-03-08 14:47:57,870 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: downloadTemplateExcelUsingGET_4
2024-03-08 14:47:57,882 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: exportToExcelUsingGET_4
2024-03-08 14:47:57,885 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: importByExcelUsingPOST_4
2024-03-08 14:47:57,901 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: downloadTemplateExcelUsingGET_5
2024-03-08 14:47:57,911 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: exportToExcelUsingGET_5
2024-03-08 14:47:57,915 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: importByExcelUsingPOST_5
2024-03-08 14:47:57,930 INFO (SchedulerFactoryBean.java:732)- Will start Quartz Scheduler [schedulerFactoryBean] in 1 seconds
2024-03-08 14:47:57,933 INFO (DeferredRepositoryInitializationListener.java:49)- Triggering deferred initialization of Spring Data repositories…
2024-03-08 14:47:57,934 INFO (DeferredRepositoryInitializationListener.java:53)- Spring Data repositories initialized!
2024-03-08 14:47:58,012 INFO (SysInit.java:52)- step1 ---> 开始同步接种人员信息到Redis
2024-03-08 14:47:58,083 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, sex, age, mobile, id_number, open_id, address, work_unit, person_type, dose_status, firstDose_id, firstDose_name, firstDose_unit, firstDose_time, latestDose_id, latestDose_name, latestDose_unit, latestDose_time, create_time, update_time from vaccination_person 
2024-03-08 14:47:58,094 INFO (HostReactor.java:232)- new ips(1) service: DEFAULT_GROUP@@inventory-service@@DEFAULT -> [{"instanceId":"192.168.1.124#852#DEFAULT#DEFAULT_GROUP@@inventory-service","ip":"192.168.1.124","port":852,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@inventory-service","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}]
2024-03-08 14:47:58,096 INFO (HostReactor.java:271)- current ips:(1) service: DEFAULT_GROUP@@inventory-service@@DEFAULT -> [{"instanceId":"192.168.1.124#852#DEFAULT#DEFAULT_GROUP@@inventory-service","ip":"192.168.1.124","port":852,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@inventory-service","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}]
2024-03-08 14:47:58,132 INFO (PushReceiver.java:97)- received push data: {"type":"dom","data":"{\"hosts\":[{\"ip\":\"192.168.1.124\",\"port\":852,\"valid\":true,\"healthy\":true,\"marked\":false,\"instanceId\":\"192.168.1.124#852#DEFAULT#DEFAULT_GROUP@@inventory-service\",\"metadata\":{\"preserved.register.source\":\"SPRING_CLOUD\"},\"enabled\":true,\"weight\":1.0,\"clusterName\":\"DEFAULT\",\"serviceName\":\"DEFAULT_GROUP@@inventory-service\",\"ephemeral\":true}],\"dom\":\"DEFAULT_GROUP@@inventory-service\",\"name\":\"DEFAULT_GROUP@@inventory-service\",\"cacheMillis\":10000,\"lastRefTime\":1709880496852,\"checksum\":\"81797888ad548c056e415bbb09517308\",\"useSpecifiedURL\":false,\"clusters\":\"DEFAULT\",\"env\":\"\",\"metadata\":{}}","lastRefTime":964572684251174} from /192.168.2.241
2024-03-08 14:47:58,942 INFO (SchedulerFactoryBean.java:748)- Starting Quartz Scheduler now, after delay of 1 seconds
2024-03-08 14:47:58,942 INFO (QuartzScheduler.java:547)- Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2024-03-08 14:47:59,234 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2024-03-08 14:47:59,313 INFO (SQLLogger.java:73)- Logic SQL: select id, name, sex, age, mobile, id_number, open_id, address, work_unit, person_type, dose_status, firstDose_id, firstDose_name, firstDose_unit, firstDose_time, latestDose_id, latestDose_name, latestDose_unit, latestDose_time, create_time, update_time from vaccination_person
2024-03-08 14:47:59,314 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:47:59,397 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 25
2024-03-08 14:47:59,665 INFO (SysInit.java:60)- step2 ---> 开始同步接种地点信息到Redis
2024-03-08 14:47:59,667 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, address_code, org_id, org_name, contact_name, contact_mobile, status, order_num, create_time from vaccination_site 
2024-03-08 14:47:59,676 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2024-03-08 14:47:59,677 INFO (SQLLogger.java:73)- Logic SQL: select id, name, address_code, org_id, org_name, contact_name, contact_mobile, status, order_num, create_time from vaccination_site
2024-03-08 14:47:59,677 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:47:59,681 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:47:59,686 INFO (SysInit.java:69)- step3 ---> 开始同步疫苗信息到Redis
2024-03-08 14:47:59,688 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, org_id, org_name, name, manufacturer, batch_number, total_dose, dose_interval, stock, oos_url, order_num, status, create_time from vaccine 
2024-03-08 14:47:59,690 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2024-03-08 14:47:59,691 INFO (SQLLogger.java:73)- Logic SQL: select id, org_id, org_name, name, manufacturer, batch_number, total_dose, dose_interval, stock, oos_url, order_num, status, create_time from vaccine
2024-03-08 14:47:59,691 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:47:59,694 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:47:59,718 INFO (StartupInfoLogger.java:61)- Started InventoryApplication in 28.843 seconds (JVM running for 31.815)
2024-03-08 14:47:59,726 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] seata.yml+common+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 14:47:59,726 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=seata.yml, group=common, cnt=1
2024-03-08 14:47:59,727 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] canal.yml+common+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 14:47:59,727 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=canal.yml, group=common, cnt=1
2024-03-08 14:47:59,727 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] mongo.yml+common+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 14:47:59,727 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=mongo.yml, group=common, cnt=1
2024-03-08 14:47:59,728 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] inventory-service.yml+inventory-service+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 14:47:59,728 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=inventory-service.yml, group=inventory-service, cnt=1
2024-03-08 14:47:59,728 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] inventory-service+inventory-service+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 14:47:59,728 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=inventory-service, group=inventory-service, cnt=1
2024-03-08 14:47:59,729 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] inventory-service-common.yml+inventory-service+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 14:47:59,729 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=inventory-service-common.yml, group=inventory-service, cnt=1
2024-03-08 14:47:59,730 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] redis.yml+common+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 14:47:59,730 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=redis.yml, group=common, cnt=1
2024-03-08 14:47:59,731 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] jwt.yml+common+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 14:47:59,731 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=jwt.yml, group=common, cnt=1
2024-03-08 14:47:59,733 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] minio.yml+common+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 14:47:59,734 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=minio.yml, group=common, cnt=1
2024-03-08 14:47:59,734 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] inventory-service-dev.yml+inventory-service+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 14:47:59,734 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=inventory-service-dev.yml, group=inventory-service, cnt=1
2024-03-08 14:48:00,585 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-03-08 14:48:00,585 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2024-03-08 14:48:00,610 INFO (FrameworkServlet.java:547)- Completed initialization in 25 ms
2024-03-08 14:48:00,689 INFO (SLF4JLogger.java:71)- Opened connection [connectionId{localValue:2, serverValue:1475}] to 192.168.2.241:27017
2024-03-08 14:48:42,425 INFO (NettyClientChannelManager.java:99)- will connect to 192.168.2.241:8091
2024-03-08 14:48:42,427 INFO (NettyPoolableFactory.java:56)- NettyPool create channel to transactionRole:TMROLE,address:192.168.2.241:8091,msg:< RegisterTMRequest{applicationId='inventory-service', transactionServiceGroup='my_test_tx_group'} >
2024-03-08 14:48:42,434 INFO (TmNettyRemotingClient.java:138)- register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x17bf8d06, L:/192.168.2.230:12802 - R:/192.168.2.241:8091]
2024-03-08 14:48:42,435 INFO (NettyPoolableFactory.java:81)- register success, cost 6 ms, version:1.3.0,role:TMROLE,channel:[id: 0x17bf8d06, L:/192.168.2.230:12802 - R:/192.168.2.241:8091]
2024-03-08 14:51:12,411 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:191,threadName:http-nio-852-exec-2,Seata_XID:192.168.2.241:8091:509379307605336064,Seata_branchType:AT
2024-03-08 14:51:12,432 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:51:12,464 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:51:12,520 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:51:12,520 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:51:12,525 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:51:12,527 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:51:12,556 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 477(Integer)
2024-03-08 14:51:12,633 INFO (SQLLogger.java:73)- Logic SQL: SELECT * FROM vaccine_release LIMIT 1
2024-03-08 14:51:12,633 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:51:12,675 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:51:12,676 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:51:12,688 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:51:12,688 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:51:12,713 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:51:12,713 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:51:13,298 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 14:51:13,298 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:51:13,431 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 14:51:15,355 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509379307605336064,branchId=509379310558126081,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 14:51:15,358 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509379307605336064 509379310558126081 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 14:51:15,359 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 14:51:15,482 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 14:51:15,482 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:51:25,320 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:190,threadName:http-nio-852-exec-1,Seata_XID:192.168.2.241:8091:509379362865291264,Seata_branchType:AT
2024-03-08 14:51:25,322 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:51:25,327 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:51:25,328 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:51:25,328 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:51:25,332 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:51:25,333 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:51:25,334 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 478(Integer)
2024-03-08 14:51:25,336 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:51:25,337 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:51:25,340 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:51:25,340 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:51:25,343 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:51:25,344 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:51:25,872 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 14:51:25,872 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:51:26,094 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 14:51:28,347 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509379362865291264,branchId=509379363486048257,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 14:51:28,348 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509379362865291264 509379363486048257 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 14:51:28,348 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 14:51:28,467 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 14:51:28,468 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:51:31,690 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:192,threadName:http-nio-852-exec-3,Seata_XID:192.168.2.241:8091:509379389423624192,Seata_branchType:AT
2024-03-08 14:51:31,692 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:51:31,693 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:51:31,693 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:51:31,694 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:51:31,697 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:51:31,698 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:51:31,698 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 479(Integer)
2024-03-08 14:51:31,700 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:51:31,701 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:51:31,704 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:51:31,704 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:51:31,707 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:51:31,708 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:51:33,327 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 14:51:33,327 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:51:33,510 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 14:51:36,347 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509379389423624192,branchId=509379390182793217,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 14:51:36,348 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509379389423624192 509379390182793217 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 14:51:36,348 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 14:51:36,459 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 14:51:36,459 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:51:43,177 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:193,threadName:http-nio-852-exec-4,Seata_XID:192.168.2.241:8091:509379437150609408,Seata_branchType:AT
2024-03-08 14:51:43,179 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:51:43,180 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:51:43,181 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:51:43,182 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:51:43,184 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:51:43,186 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:51:43,187 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 480(Integer)
2024-03-08 14:51:43,189 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:51:43,189 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:51:43,193 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:51:43,194 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:51:43,196 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:51:43,197 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:51:44,019 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 14:51:44,019 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:51:44,291 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 14:51:46,348 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509379437150609408,branchId=509379438421483521,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 14:51:46,349 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509379437150609408 509379438421483521 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 14:51:46,349 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 14:51:46,451 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 14:51:46,452 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:14,487 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:195,threadName:http-nio-852-exec-6,Seata_XID:192.168.2.241:8091:509379568973389824,Seata_branchType:AT
2024-03-08 14:52:14,489 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:52:14,490 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:52:14,490 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:52:14,491 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:14,494 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:52:14,495 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:52:14,496 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 481(Integer)
2024-03-08 14:52:14,498 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:52:14,499 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:14,501 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:52:14,501 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:14,504 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:52:14,504 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:14,748 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379568973389824, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379568973389824, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379568973389824, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 121 common frames omitted
2024-03-08 14:52:14,836 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379568973389824, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379568973389824, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379568973389824, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379568973389824, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379568973389824, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379568973389824, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379568973389824, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379568973389824, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379568973389824, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 79 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379568973389824, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 121 common frames omitted
2024-03-08 14:52:17,376 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:196,threadName:http-nio-852-exec-7,Seata_XID:192.168.2.241:8091:509379580490948608,Seata_branchType:AT
2024-03-08 14:52:17,377 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:52:17,378 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:52:17,378 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:52:17,379 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:17,381 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:52:17,383 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:52:17,384 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 481(Integer)
2024-03-08 14:52:17,386 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:52:17,386 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:17,388 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:52:17,388 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:17,391 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:52:17,391 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:18,171 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 14:52:18,174 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:18,396 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 14:52:20,346 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509379580490948608,branchId=509379581786988545,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 14:52:20,347 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509379580490948608 509379581786988545 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 14:52:20,347 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 14:52:20,451 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 14:52:20,451 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:25,808 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:197,threadName:http-nio-852-exec-8,Seata_XID:192.168.2.241:8091:509379616243195904,Seata_branchType:AT
2024-03-08 14:52:25,811 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:52:25,812 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:52:25,814 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:52:25,814 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:25,817 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:52:25,819 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:52:25,819 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 482(Integer)
2024-03-08 14:52:25,821 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:52:25,821 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:25,824 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:52:25,824 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:25,827 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:52:25,827 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:25,917 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379616243195904, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379616243195904, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379616243195904, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 120 common frames omitted
2024-03-08 14:52:25,922 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379616243195904, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379616243195904, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379616243195904, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379616243195904, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379616243195904, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379616243195904, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379616243195904, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379616243195904, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379616243195904, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 79 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379616243195904, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 120 common frames omitted
2024-03-08 14:52:38,658 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:194,threadName:http-nio-852-exec-5,Seata_XID:192.168.2.241:8091:509379669716377600,Seata_branchType:AT
2024-03-08 14:52:38,660 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:52:38,661 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:52:38,662 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:52:38,662 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:38,664 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:52:38,665 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:52:38,666 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 482(Integer)
2024-03-08 14:52:38,668 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:52:38,668 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:38,670 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:52:38,670 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:38,673 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:52:38,673 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:38,814 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379669716377600, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379669716377600, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379669716377600, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 120 common frames omitted
2024-03-08 14:52:38,818 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379669716377600, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379669716377600, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379669716377600, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379669716377600, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379669716377600, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379669716377600, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379669716377600, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379669716377600, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379669716377600, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 79 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379669716377600, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 120 common frames omitted
2024-03-08 14:52:42,326 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:198,threadName:http-nio-852-exec-9,Seata_XID:192.168.2.241:8091:509379684115423232,Seata_branchType:AT
2024-03-08 14:52:42,328 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:52:42,328 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:52:42,330 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:52:42,330 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:42,333 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:52:42,333 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:52:42,334 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 482(Integer)
2024-03-08 14:52:42,336 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:52:42,336 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:42,338 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:52:42,339 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:42,341 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:52:42,342 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:42,823 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 14:52:42,832 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:43,210 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 14:52:45,348 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509379684115423232,branchId=509379686439067649,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 14:52:45,349 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509379684115423232 509379686439067649 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 14:52:45,349 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 14:52:45,463 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 14:52:45,464 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:49,752 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:199,threadName:http-nio-852-exec-10,Seata_XID:192.168.2.241:8091:509379716407369728,Seata_branchType:AT
2024-03-08 14:52:49,754 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:52:49,755 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:52:49,756 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:52:49,756 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:49,759 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:52:49,760 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:52:49,761 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 483(Integer)
2024-03-08 14:52:49,764 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:52:49,764 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:49,767 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:52:49,768 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:49,770 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:52:49,770 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:49,973 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379716407369728, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379716407369728, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379716407369728, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 118 common frames omitted
2024-03-08 14:52:49,977 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379716407369728, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379716407369728, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379716407369728, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379716407369728, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379716407369728, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379716407369728, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379716407369728, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379716407369728, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379716407369728, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 79 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379716407369728, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 118 common frames omitted
2024-03-08 14:52:57,053 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:191,threadName:http-nio-852-exec-2,Seata_XID:192.168.2.241:8091:509379747239698432,Seata_branchType:AT
2024-03-08 14:52:57,054 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:52:57,057 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:52:57,057 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:52:57,057 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:57,061 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:52:57,063 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:52:57,064 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 483(Integer)
2024-03-08 14:52:57,066 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:52:57,067 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:57,071 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:52:57,071 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:57,074 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:52:57,074 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:57,490 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 14:52:57,490 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:52:57,722 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 14:52:59,348 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509379747239698432,branchId=509379748242137088,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 14:52:59,348 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509379747239698432 509379748242137088 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 14:52:59,348 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 14:52:59,457 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 14:52:59,457 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:21,180 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:190,threadName:http-nio-852-exec-1,Seata_XID:192.168.2.241:8091:509379848410505216,Seata_branchType:AT
2024-03-08 14:53:21,182 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:53:21,182 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:53:21,183 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:53:21,183 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:21,186 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:53:21,187 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:53:21,187 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 484(Integer)
2024-03-08 14:53:21,189 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:53:21,190 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:21,193 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:53:21,193 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:21,197 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:53:21,197 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:21,278 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379848410505216, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379848410505216, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379848410505216, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 118 common frames omitted
2024-03-08 14:53:21,283 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379848410505216, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379848410505216, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379848410505216, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379848410505216, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379848410505216, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379848410505216, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379848410505216, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379848410505216, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379848410505216, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 79 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379848410505216, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 118 common frames omitted
2024-03-08 14:53:33,084 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:192,threadName:http-nio-852-exec-3,Seata_XID:192.168.2.241:8091:509379898595352576,Seata_branchType:AT
2024-03-08 14:53:33,086 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:53:33,087 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:53:33,087 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:53:33,088 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:33,091 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:53:33,092 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:53:33,093 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 484(Integer)
2024-03-08 14:53:33,094 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:53:33,095 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:33,096 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:53:33,097 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:33,099 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:53:33,099 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:33,217 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379898595352576, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379898595352576, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379898595352576, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 118 common frames omitted
2024-03-08 14:53:33,222 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379898595352576, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379898595352576, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379898595352576, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379898595352576, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379898595352576, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379898595352576, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379898595352576, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379898595352576, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379898595352576, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 79 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379898595352576, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 118 common frames omitted
2024-03-08 14:53:34,236 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:193,threadName:http-nio-852-exec-4,Seata_XID:192.168.2.241:8091:509379903540436992,Seata_branchType:AT
2024-03-08 14:53:34,239 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:53:34,239 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:53:34,240 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:53:34,240 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:34,243 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:53:34,243 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:53:34,244 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 484(Integer)
2024-03-08 14:53:34,245 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:53:34,246 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:34,248 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:53:34,248 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:34,251 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:53:34,251 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:34,375 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379903540436992, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379903540436992, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379903540436992, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 118 common frames omitted
2024-03-08 14:53:34,441 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379903540436992, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379903540436992, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379903540436992, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379903540436992, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379903540436992, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379903540436992, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379903540436992, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379903540436992, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379903540436992, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 79 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509379903540436992, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 118 common frames omitted
2024-03-08 14:53:44,110 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:195,threadName:http-nio-852-exec-6,Seata_XID:192.168.2.241:8091:509379943818338304,Seata_branchType:AT
2024-03-08 14:53:44,117 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:53:44,118 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:53:44,118 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:53:44,119 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:44,122 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:53:44,123 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:53:44,124 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 484(Integer)
2024-03-08 14:53:44,125 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:53:44,126 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:44,128 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:53:44,128 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:44,131 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:53:44,132 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:44,544 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 14:53:44,545 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:44,834 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 14:53:45,401 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:196,threadName:http-nio-852-exec-7,Seata_XID:192.168.2.241:8091:509379949019275264,Seata_branchType:AT
2024-03-08 14:53:45,403 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:53:45,404 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:53:45,405 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:53:45,405 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:45,411 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:53:45,412 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:53:45,413 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 485(Integer)
2024-03-08 14:53:45,415 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:53:45,415 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:45,417 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:53:45,418 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:45,420 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:53:45,420 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:45,784 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:53:45,787 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:45,791 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:53:45,791 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:45,793 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:53:45,794 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:45,931 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:53:45,932 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:45,936 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:53:45,937 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:45,939 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:53:45,940 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:46,104 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:53:46,104 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:46,110 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:53:46,110 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:46,114 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:53:46,114 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:46,210 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:53:46,211 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:46,214 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:53:46,214 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:46,216 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:53:46,216 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:46,586 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 14:53:46,588 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:46,957 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 14:53:47,348 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509379943818338304,branchId=509379945659637761,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 14:53:47,349 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509379943818338304 509379945659637761 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 14:53:47,349 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 14:53:47,463 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 14:53:47,463 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:48,842 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509379949019275264,branchId=509379954354429953,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 14:53:48,843 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509379949019275264 509379954354429953 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 14:53:48,843 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 14:53:49,460 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 14:53:49,460 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:59,726 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:197,threadName:http-nio-852-exec-8,Seata_XID:192.168.2.241:8091:509380010109313024,Seata_branchType:AT
2024-03-08 14:53:59,727 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:53:59,728 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:53:59,729 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:53:59,729 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:59,732 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:53:59,732 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:53:59,733 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 486(Integer)
2024-03-08 14:53:59,734 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:53:59,735 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:59,737 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:53:59,738 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:53:59,740 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:53:59,740 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:00,032 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 14:54:00,033 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:00,480 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 14:54:02,349 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509380010109313024,branchId=509380011069808641,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 14:54:02,349 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509380010109313024 509380011069808641 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 14:54:02,350 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 14:54:02,458 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 14:54:02,459 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:06,125 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:194,threadName:http-nio-852-exec-5,Seata_XID:192.168.2.241:8091:509380036797669376,Seata_branchType:AT
2024-03-08 14:54:06,126 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:54:06,127 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:54:06,127 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:54:06,127 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:06,130 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:54:06,131 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:54:06,132 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 487(Integer)
2024-03-08 14:54:06,133 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:54:06,133 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:06,135 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:54:06,136 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:06,138 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:54:06,138 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:07,049 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 14:54:07,049 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:07,695 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 14:54:10,347 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509380036797669376,branchId=509380037900771329,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 14:54:10,347 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509380036797669376 509380037900771329 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 14:54:10,348 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 14:54:10,466 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 14:54:10,467 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:12,838 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:198,threadName:http-nio-852-exec-9,Seata_XID:192.168.2.241:8091:509380065444765696,Seata_branchType:AT
2024-03-08 14:54:12,840 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:54:12,840 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:54:12,841 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:54:12,841 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:12,844 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:54:12,845 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:54:12,845 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 488(Integer)
2024-03-08 14:54:12,847 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:54:12,847 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:12,850 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:54:12,850 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:12,852 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:54:12,852 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:13,257 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 14:54:13,257 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:13,405 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 14:54:15,348 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509380065444765696,branchId=509380066065522689,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 14:54:15,349 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509380065444765696 509380066065522689 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 14:54:15,349 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 14:54:15,460 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 14:54:15,460 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:20,161 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:199,threadName:http-nio-852-exec-10,Seata_XID:192.168.2.241:8091:509380095480176640,Seata_branchType:AT
2024-03-08 14:54:20,164 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:54:20,164 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:54:20,165 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:54:20,165 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:20,167 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:54:20,168 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:54:20,168 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 489(Integer)
2024-03-08 14:54:20,170 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:54:20,170 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:20,172 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:54:20,173 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:20,175 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:54:20,175 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:20,614 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 14:54:20,614 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:20,880 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 14:54:22,547 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:191,threadName:http-nio-852-exec-2,Seata_XID:192.168.2.241:8091:509380105290653696,Seata_branchType:AT
2024-03-08 14:54:22,548 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:54:22,549 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:54:22,549 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:54:22,550 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:22,552 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:54:22,553 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:54:22,554 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 490(Integer)
2024-03-08 14:54:22,555 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:54:22,556 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:22,558 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:54:22,558 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:22,561 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:54:22,561 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:22,819 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380105290653696, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380105290653696, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380105290653696, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 14:54:22,822 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380105290653696, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380105290653696, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380105290653696, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380105290653696, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380105290653696, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380105290653696, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380105290653696, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380105290653696, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380105290653696, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380105290653696, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 14:54:23,350 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509380095480176640,branchId=509380096780410881,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 14:54:23,350 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509380095480176640 509380096780410881 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 14:54:23,351 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 14:54:23,455 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 14:54:23,456 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:52,326 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:190,threadName:http-nio-852-exec-1,Seata_XID:192.168.2.241:8091:509380230834561024,Seata_branchType:AT
2024-03-08 14:54:52,328 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:54:52,329 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:54:52,329 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:54:52,330 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:52,334 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:54:52,336 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:54:52,336 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 490(Integer)
2024-03-08 14:54:52,338 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:54:52,339 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:52,341 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:54:52,342 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:52,344 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:54:52,344 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:52,650 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 14:54:52,652 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:54:52,807 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 14:54:54,348 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509380230834561024,branchId=509380231702781953,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 14:54:54,349 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509380230834561024 509380231702781953 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 14:54:54,349 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 14:54:54,462 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 14:54:54,462 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:55:01,271 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:192,threadName:http-nio-852-exec-3,Seata_XID:192.168.2.241:8091:509380267668938752,Seata_branchType:AT
2024-03-08 14:55:01,273 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:55:01,274 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:55:01,274 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:55:01,274 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:55:01,277 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:55:01,278 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:55:01,279 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 491(Integer)
2024-03-08 14:55:01,280 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:55:01,281 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:55:01,283 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:55:01,283 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:55:01,285 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:55:01,286 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:55:01,850 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 14:55:01,851 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:55:02,132 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 14:55:04,349 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509380267668938752,branchId=509380269208248321,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 14:55:04,349 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509380267668938752 509380269208248321 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 14:55:04,349 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 14:55:04,454 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 14:55:04,454 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:55:21,324 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:193,threadName:http-nio-852-exec-4,Seata_XID:192.168.2.241:8091:509380352406462464,Seata_branchType:AT
2024-03-08 14:55:21,325 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:55:21,326 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:55:21,327 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:55:21,327 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:55:21,330 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:55:21,331 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:55:21,331 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 492(Integer)
2024-03-08 14:55:21,332 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:55:21,333 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:55:21,335 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:55:21,335 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:55:21,338 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:55:21,338 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:55:21,430 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380352406462464, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380352406462464, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380352406462464, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 14:55:21,433 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380352406462464, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380352406462464, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380352406462464, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380352406462464, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380352406462464, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380352406462464, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380352406462464, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380352406462464, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380352406462464, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380352406462464, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 14:55:32,108 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:195,threadName:http-nio-852-exec-6,Seata_XID:192.168.2.241:8091:509380397562339328,Seata_branchType:AT
2024-03-08 14:55:32,109 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:55:32,110 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:55:32,111 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:55:32,111 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:55:32,114 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:55:32,115 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:55:32,115 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 492(Integer)
2024-03-08 14:55:32,117 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:55:32,118 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:55:32,121 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:55:32,122 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:55:32,124 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:55:32,124 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:55:32,332 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 14:55:32,333 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:55:32,580 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 14:55:35,349 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509380397562339328,branchId=509380398552195073,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 14:55:35,349 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509380397562339328 509380398552195073 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 14:55:35,349 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 14:55:35,455 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 14:55:35,456 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:55:53,015 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:196,threadName:http-nio-852-exec-7,Seata_XID:192.168.2.241:8091:509380485353316352,Seata_branchType:AT
2024-03-08 14:55:53,017 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:55:53,018 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:55:53,018 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:55:53,018 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:55:53,021 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:55:53,021 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:55:53,022 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 493(Integer)
2024-03-08 14:55:53,023 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:55:53,024 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:55:53,027 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:55:53,027 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:55:53,029 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:55:53,029 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:55:53,134 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380485353316352, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380485353316352, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380485353316352, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 14:55:53,144 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380485353316352, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380485353316352, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380485353316352, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380485353316352, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380485353316352, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380485353316352, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380485353316352, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380485353316352, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380485353316352, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380485353316352, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 14:56:04,150 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:197,threadName:http-nio-852-exec-8,Seata_XID:192.168.2.241:8091:509380531557769216,Seata_branchType:AT
2024-03-08 14:56:04,152 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:56:04,152 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:56:04,153 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:56:04,153 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:56:04,155 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:56:04,156 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:56:04,156 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 493(Integer)
2024-03-08 14:56:04,158 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:56:04,158 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:56:04,160 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:56:04,160 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:56:04,162 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:56:04,162 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:56:04,624 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 14:56:04,624 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:56:05,006 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 14:56:07,361 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509380531557769216,branchId=509380532925112321,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 14:56:07,364 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509380531557769216 509380532925112321 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 14:56:07,365 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 14:56:07,477 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 14:56:07,477 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:56:19,130 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:194,threadName:http-nio-852-exec-5,Seata_XID:192.168.2.241:8091:509380592085770240,Seata_branchType:AT
2024-03-08 14:56:19,131 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:56:19,132 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:56:19,133 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:56:19,133 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:56:19,135 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:56:19,136 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:56:19,136 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 494(Integer)
2024-03-08 14:56:19,138 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:56:19,138 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:56:19,140 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:56:19,140 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:56:19,142 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:56:19,143 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:56:19,476 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 14:56:19,477 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:56:19,765 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 14:56:21,349 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509380592085770240,branchId=509380595764174849,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 14:56:21,350 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509380592085770240 509380595764174849 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 14:56:21,350 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 14:56:21,465 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 14:56:21,465 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:56:24,315 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:198,threadName:http-nio-852-exec-9,Seata_XID:192.168.2.241:8091:509380616744083456,Seata_branchType:AT
2024-03-08 14:56:24,317 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:56:24,317 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:56:24,318 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:56:24,318 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:56:24,320 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:56:24,321 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:56:24,322 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 495(Integer)
2024-03-08 14:56:24,324 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:56:24,324 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:56:24,327 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:56:24,327 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:56:24,330 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:56:24,330 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:56:24,991 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 14:56:24,992 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:56:25,481 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 14:56:30,349 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509380616744083456,branchId=509380617520029697,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 14:56:30,349 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509380616744083456 509380617520029697 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 14:56:30,349 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 14:56:30,460 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 14:56:30,460 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:56:49,143 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:199,threadName:http-nio-852-exec-10,Seata_XID:192.168.2.241:8091:509380720020430848,Seata_branchType:AT
2024-03-08 14:56:49,144 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:56:49,145 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:56:49,146 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:56:49,147 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:56:49,149 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:56:49,150 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:56:49,150 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 496(Integer)
2024-03-08 14:56:49,152 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:56:49,152 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:56:49,154 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:56:49,154 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:56:49,156 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:56:49,156 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:56:49,722 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 14:56:49,726 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:56:49,852 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 14:56:51,349 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509380720020430848,branchId=509380721647820801,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 14:56:51,349 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509380720020430848 509380721647820801 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 14:56:51,349 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 14:56:51,455 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 14:56:51,455 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:57:01,333 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:191,threadName:http-nio-852-exec-2,Seata_XID:192.168.2.241:8091:509380771673284608,Seata_branchType:AT
2024-03-08 14:57:01,335 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:57:01,336 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:57:01,336 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:57:01,336 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:57:01,338 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:57:01,339 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:57:01,340 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 497(Integer)
2024-03-08 14:57:01,341 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:57:01,341 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:57:01,343 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:57:01,343 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:57:01,345 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:57:01,346 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:57:01,752 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 14:57:01,753 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:57:01,925 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 14:57:04,349 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509380771673284608,branchId=509380772772192257,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 14:57:04,349 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509380771673284608 509380772772192257 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 14:57:04,349 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 14:57:04,452 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 14:57:04,452 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:57:10,282 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:190,threadName:http-nio-852-exec-1,Seata_XID:192.168.2.241:8091:509380808746737664,Seata_branchType:AT
2024-03-08 14:57:10,284 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:57:10,284 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:57:10,285 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:57:10,285 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:57:10,287 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:57:10,288 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:57:10,289 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 498(Integer)
2024-03-08 14:57:10,290 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:57:10,290 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:57:10,293 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:57:10,293 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:57:10,295 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:57:10,295 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:57:10,446 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380808746737664, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380808746737664, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380808746737664, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 14:57:10,449 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380808746737664, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380808746737664, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380808746737664, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380808746737664, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380808746737664, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380808746737664, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380808746737664, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380808746737664, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380808746737664, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380808746737664, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 14:57:21,379 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:192,threadName:http-nio-852-exec-3,Seata_XID:192.168.2.241:8091:509380855852965888,Seata_branchType:AT
2024-03-08 14:57:21,381 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:57:21,382 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:57:21,382 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:57:21,382 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:57:21,384 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:57:21,385 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:57:21,386 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 498(Integer)
2024-03-08 14:57:21,387 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:57:21,388 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:57:21,391 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:57:21,391 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:57:21,393 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:57:21,393 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:57:22,242 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 14:57:22,242 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:57:22,566 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 14:57:24,350 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509380855852965888,branchId=509380856851210241,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 14:57:24,350 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509380855852965888 509380856851210241 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 14:57:24,350 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 14:57:24,462 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 14:57:24,462 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:57:52,880 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:193,threadName:http-nio-852-exec-4,Seata_XID:192.168.2.241:8091:509380988107759616,Seata_branchType:AT
2024-03-08 14:57:52,882 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 14:57:52,882 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 14:57:52,883 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 14:57:52,883 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:57:52,886 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 14:57:52,887 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 14:57:52,887 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 499(Integer)
2024-03-08 14:57:52,889 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 14:57:52,889 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:57:52,891 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 14:57:52,892 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:57:52,894 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 14:57:52,894 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 14:57:53,016 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380988107759616, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380988107759616, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380988107759616, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 14:57:53,025 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380988107759616, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380988107759616, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380988107759616, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380988107759616, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380988107759616, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380988107759616, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380988107759616, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380988107759616, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380988107759616, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509380988107759616, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:06:17,677 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:196,threadName:http-nio-852-exec-7,Seata_XID:192.168.2.241:8091:509381031502028800,Seata_branchType:AT
2024-03-08 15:06:17,680 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:06:17,681 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:06:17,681 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:06:17,682 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:06:17,685 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:06:17,686 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:06:17,687 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 499(Integer)
2024-03-08 15:06:17,692 INFO (SQLLogger.java:73)- Logic SQL: SELECT * FROM vaccine_release LIMIT 1
2024-03-08 15:06:17,693 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:06:17,707 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:06:17,707 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:06:17,709 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:06:17,709 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:06:17,711 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:06:17,711 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:06:18,079 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509381031502028800, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509381031502028800, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509381031502028800, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:06:18,082 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509381031502028800, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509381031502028800, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509381031502028800, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509381031502028800, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509381031502028800, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509381031502028800, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509381031502028800, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509381031502028800, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509381031502028800, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509381031502028800, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:07:00,357 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:194,threadName:http-nio-852-exec-5,Seata_XID:192.168.2.241:8091:509383282639511552,Seata_branchType:AT
2024-03-08 15:07:00,358 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:07:00,358 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:07:00,359 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:07:00,359 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:07:00,361 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:07:00,362 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:07:00,362 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 499(Integer)
2024-03-08 15:07:00,363 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:07:00,363 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:07:00,365 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:07:00,365 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:07:00,367 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:07:00,368 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:07:00,887 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 15:07:00,888 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:07:01,314 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 15:07:04,353 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509383282639511552,branchId=509383285231591425,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 15:07:04,353 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509383282639511552 509383285231591425 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 15:07:04,354 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 15:07:04,452 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 15:07:04,452 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:07:57,699 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:198,threadName:http-nio-852-exec-9,Seata_XID:192.168.2.241:8091:509383525011562496,Seata_branchType:AT
2024-03-08 15:07:57,700 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:07:57,701 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:07:57,702 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:07:57,702 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:07:57,705 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:07:57,706 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:07:57,706 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 500(Integer)
2024-03-08 15:07:57,707 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:07:57,708 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:07:57,710 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:07:57,710 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:07:57,713 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:07:57,713 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:07:57,845 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383525011562496, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383525011562496, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383525011562496, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:07:57,847 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383525011562496, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383525011562496, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383525011562496, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383525011562496, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383525011562496, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383525011562496, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383525011562496, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383525011562496, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383525011562496, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383525011562496, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:08:07,509 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:199,threadName:http-nio-852-exec-10,Seata_XID:192.168.2.241:8091:509383565641785344,Seata_branchType:AT
2024-03-08 15:08:07,511 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:08:07,512 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:08:07,512 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:08:07,513 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:07,516 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:08:07,516 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:08:07,517 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 500(Integer)
2024-03-08 15:08:07,518 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:08:07,519 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:07,521 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:08:07,521 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:07,522 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:08:07,523 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:08,025 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 15:08:08,026 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:08,313 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 15:08:09,731 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:191,threadName:http-nio-852-exec-2,Seata_XID:192.168.2.241:8091:509383574995083264,Seata_branchType:AT
2024-03-08 15:08:09,733 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:08:09,734 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:08:09,736 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:08:09,736 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:09,738 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:08:09,739 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:08:09,740 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 501(Integer)
2024-03-08 15:08:09,741 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:08:09,741 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:09,743 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:08:09,744 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:09,746 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:08:09,747 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:09,872 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383574995083264, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383574995083264, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383574995083264, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:08:09,874 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383574995083264, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383574995083264, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383574995083264, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383574995083264, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383574995083264, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383574995083264, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383574995083264, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383574995083264, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383574995083264, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383574995083264, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:08:10,354 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509383565641785344,branchId=509383566933630977,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 15:08:10,355 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509383565641785344 509383566933630977 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 15:08:10,355 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 15:08:10,464 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 15:08:10,464 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:29,186 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:190,threadName:http-nio-852-exec-1,Seata_XID:192.168.2.241:8091:509383657132138496,Seata_branchType:AT
2024-03-08 15:08:29,187 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:08:29,188 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:08:29,188 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:08:29,188 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:29,191 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:08:29,192 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:08:29,193 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 501(Integer)
2024-03-08 15:08:29,194 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:08:29,194 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:29,196 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:08:29,197 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:29,199 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:08:29,200 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:29,519 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 15:08:29,520 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:29,891 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 15:08:32,354 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509383657132138496,branchId=509383657824198657,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 15:08:32,354 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509383657132138496 509383657824198657 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 15:08:32,354 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 15:08:32,460 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 15:08:32,460 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:35,014 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:192,threadName:http-nio-852-exec-3,Seata_XID:192.168.2.241:8091:509383680402137088,Seata_branchType:AT
2024-03-08 15:08:35,015 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:08:35,016 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:08:35,016 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:08:35,016 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:35,018 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:08:35,019 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:08:35,020 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 502(Integer)
2024-03-08 15:08:35,021 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:08:35,021 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:35,023 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:08:35,023 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:35,025 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:08:35,026 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:35,397 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 15:08:35,397 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:35,501 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 15:08:38,354 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509383680402137088,branchId=509383682264408065,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 15:08:38,355 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509383680402137088 509383682264408065 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 15:08:38,355 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 15:08:38,463 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 15:08:38,463 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:38,622 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:193,threadName:http-nio-852-exec-4,Seata_XID:192.168.2.241:8091:509383695640043520,Seata_branchType:AT
2024-03-08 15:08:38,623 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:08:38,624 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:08:38,624 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:08:38,624 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:38,629 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:08:38,629 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:08:38,630 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 503(Integer)
2024-03-08 15:08:38,631 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:08:38,631 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:38,635 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:08:38,635 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:38,638 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:08:38,638 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:39,226 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 15:08:39,226 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:39,610 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 15:08:40,149 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:195,threadName:http-nio-852-exec-6,Seata_XID:192.168.2.241:8091:509383702631948288,Seata_branchType:AT
2024-03-08 15:08:40,152 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:08:40,153 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:08:40,154 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:08:40,154 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:40,157 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:08:40,158 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:08:40,159 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 504(Integer)
2024-03-08 15:08:40,161 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:08:40,161 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:40,164 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:08:40,164 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:40,166 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:08:40,167 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:40,381 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:08:40,382 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:40,384 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:08:40,385 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:40,387 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:08:40,387 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:40,538 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:08:40,538 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:40,541 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:08:40,541 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:40,544 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:08:40,545 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:40,759 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:08:40,760 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:40,763 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:08:40,763 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:40,766 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:08:40,766 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:40,917 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:08:40,918 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:40,920 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:08:40,921 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:40,923 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:08:40,923 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:41,444 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 15:08:41,444 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:41,602 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 15:08:42,355 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509383695640043520,branchId=509383697405845505,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 15:08:42,355 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509383695640043520 509383697405845505 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 15:08:42,355 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 15:08:42,465 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 15:08:42,465 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:43,361 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509383702631948288,branchId=509383706994024449,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 15:08:43,362 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509383702631948288 509383706994024449 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 15:08:43,362 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 15:08:43,451 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 15:08:43,451 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:45,511 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:196,threadName:http-nio-852-exec-7,Seata_XID:192.168.2.241:8091:509383725469933568,Seata_branchType:AT
2024-03-08 15:08:45,512 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:08:45,513 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:08:45,514 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:08:45,514 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:45,516 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:08:45,518 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:08:45,518 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 505(Integer)
2024-03-08 15:08:45,520 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:08:45,520 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:45,522 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:08:45,523 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:45,525 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:08:45,525 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:45,617 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383725469933568, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383725469933568, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383725469933568, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:08:45,620 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383725469933568, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383725469933568, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383725469933568, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383725469933568, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383725469933568, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383725469933568, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383725469933568, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383725469933568, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383725469933568, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383725469933568, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:08:47,803 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:197,threadName:http-nio-852-exec-8,Seata_XID:192.168.2.241:8091:509383734869368832,Seata_branchType:AT
2024-03-08 15:08:47,805 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:08:47,806 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:08:47,806 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:08:47,806 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:47,808 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:08:47,809 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:08:47,810 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 505(Integer)
2024-03-08 15:08:47,811 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:08:47,812 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:47,814 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:08:47,814 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:47,816 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:08:47,816 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:48,253 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 15:08:48,253 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:48,518 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 15:08:50,355 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509383734869368832,branchId=509383735913750529,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 15:08:50,355 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509383734869368832 509383735913750529 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 15:08:50,355 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 15:08:50,479 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 15:08:50,479 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:50,837 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:194,threadName:http-nio-852-exec-5,Seata_XID:192.168.2.241:8091:509383745564844032,Seata_branchType:AT
2024-03-08 15:08:50,839 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:08:50,840 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:08:50,840 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:08:50,840 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:50,843 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:08:50,844 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:08:50,844 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 506(Integer)
2024-03-08 15:08:50,846 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:08:50,846 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:50,848 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:08:50,849 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:50,853 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:08:50,853 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:51,191 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 15:08:51,192 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:51,401 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 15:08:52,493 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:198,threadName:http-nio-852-exec-9,Seata_XID:192.168.2.241:8091:509383754456768512,Seata_branchType:AT
2024-03-08 15:08:52,494 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:08:52,495 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:08:52,495 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:08:52,496 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:52,498 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:08:52,498 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:08:52,499 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 507(Integer)
2024-03-08 15:08:52,500 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:08:52,500 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:52,502 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:08:52,503 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:52,504 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:08:52,505 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:52,668 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383754456768512, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383754456768512, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383754456768512, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:08:52,671 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383754456768512, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383754456768512, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383754456768512, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383754456768512, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383754456768512, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383754456768512, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383754456768512, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383754456768512, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383754456768512, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383754456768512, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:08:53,354 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509383745564844032,branchId=509383748714766337,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 15:08:53,355 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509383745564844032 509383748714766337 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 15:08:53,355 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 15:08:53,456 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 15:08:53,456 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:54,225 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:199,threadName:http-nio-852-exec-10,Seata_XID:192.168.2.241:8091:509383760785973248,Seata_branchType:AT
2024-03-08 15:08:54,226 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:08:54,227 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:08:54,228 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:08:54,228 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:54,230 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:08:54,231 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:08:54,231 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 507(Integer)
2024-03-08 15:08:54,232 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:08:54,232 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:54,234 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:08:54,234 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:54,236 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:08:54,236 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:54,686 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 15:08:54,686 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:55,109 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 15:08:55,150 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:191,threadName:http-nio-852-exec-2,Seata_XID:192.168.2.241:8091:509383765114494976,Seata_branchType:AT
2024-03-08 15:08:55,150 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:08:55,151 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:08:55,152 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:08:55,152 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:55,157 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:08:55,157 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:08:55,158 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 508(Integer)
2024-03-08 15:08:55,159 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:08:55,159 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:55,160 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:08:55,161 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:55,163 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:08:55,163 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:55,413 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383765114494976, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383765114494976, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383765114494976, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:08:55,416 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383765114494976, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383765114494976, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383765114494976, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383765114494976, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383765114494976, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383765114494976, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383765114494976, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383765114494976, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383765114494976, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383765114494976, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:08:56,505 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:190,threadName:http-nio-852-exec-1,Seata_XID:192.168.2.241:8091:509383771296899072,Seata_branchType:AT
2024-03-08 15:08:56,507 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:08:56,507 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:08:56,508 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:08:56,508 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:56,510 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:08:56,511 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:08:56,511 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 508(Integer)
2024-03-08 15:08:56,514 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:08:56,514 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:56,516 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:08:56,516 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:56,518 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:08:56,518 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:08:56,606 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383771296899072, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383771296899072, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383771296899072, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:08:56,609 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383771296899072, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383771296899072, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383771296899072, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383771296899072, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383771296899072, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383771296899072, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383771296899072, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383771296899072, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383771296899072, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509383771296899072, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:08:57,359 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509383760785973248,branchId=509383762824404993,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 15:08:57,359 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509383760785973248 509383762824404993 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 15:08:57,359 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 15:08:57,465 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 15:08:57,466 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:09:03,486 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:192,threadName:http-nio-852-exec-3,Seata_XID:192.168.2.241:8091:509383800388591616,Seata_branchType:AT
2024-03-08 15:09:03,487 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:09:03,488 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:09:03,489 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:09:03,489 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:09:03,491 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:09:03,492 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:09:03,492 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 508(Integer)
2024-03-08 15:09:03,493 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:09:03,494 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:09:03,496 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:09:03,496 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:09:03,498 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:09:03,498 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:09:04,067 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 15:09:04,067 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:09:04,318 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 15:09:06,356 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509383800388591616,branchId=509383801680437249,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 15:09:06,356 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509383800388591616 509383801680437249 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 15:09:06,357 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 15:09:06,383 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:193,threadName:http-nio-852-exec-4,Seata_XID:192.168.2.241:8091:509383811713212416,Seata_branchType:AT
2024-03-08 15:09:06,385 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:09:06,386 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:09:06,386 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:09:06,387 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:09:06,389 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:09:06,390 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:09:06,390 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 509(Integer)
2024-03-08 15:09:06,392 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:09:06,392 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:09:06,395 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:09:06,395 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:09:06,398 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:09:06,398 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:09:06,461 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 15:09:06,461 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:09:07,158 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 15:09:07,158 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:09:07,581 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 15:09:09,356 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509383811713212416,branchId=509383813839724545,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 15:09:09,357 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509383811713212416 509383813839724545 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 15:09:09,357 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 15:09:09,464 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 15:09:09,464 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:10:05,294 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:196,threadName:http-nio-852-exec-7,Seata_XID:192.168.2.241:8091:509384058178904064,Seata_branchType:AT
2024-03-08 15:10:05,295 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:197,threadName:http-nio-852-exec-8,Seata_XID:192.168.2.241:8091:509384057755279360,Seata_branchType:AT
2024-03-08 15:10:05,296 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:10:05,297 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:10:05,297 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:10:05,297 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:10:05,297 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:10:05,298 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:10:05,298 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:10:05,298 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:10:05,300 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:10:05,301 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:10:05,301 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 510(Integer)
2024-03-08 15:10:05,302 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:10:05,302 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:10:05,302 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:10:05,302 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:10:05,303 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 510(Integer)
2024-03-08 15:10:05,304 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:10:05,304 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:10:05,304 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:10:05,304 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:10:05,306 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:10:05,306 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:10:05,584 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 15:10:05,585 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:10:05,823 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:10:05,823 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:10:05,824 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 15:10:05,827 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 0
2024-03-08 15:10:07,613 INFO (RmBranchRollbackProcessor.java:56)- rm handle branch rollback process:xid=192.168.2.241:8091:509384058178904064,branchId=509384060913590273,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 15:10:07,615 INFO (AbstractRMHandler.java:123)- Branch Rollbacking: 192.168.2.241:8091:509384058178904064 509384060913590273 jdbc:mysql://192.168.2.241:6033/vapp_inventory
2024-03-08 15:10:07,617 INFO (SQLLogger.java:73)- Logic SQL: SELECT * FROM undo_log WHERE branch_id = ? AND xid = ? FOR UPDATE
2024-03-08 15:10:07,618 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:10:07,657 INFO (SQLLogger.java:73)- Logic SQL: SELECT * FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:10:07,658 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:10:07,663 INFO (SQLLogger.java:73)- Logic SQL: UPDATE vaccine_release SET dock_amount = ?, version = ? WHERE id = ?  
2024-03-08 15:10:07,663 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:10:07,666 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE branch_id = ? AND xid = ?
2024-03-08 15:10:07,666 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:10:07,867 INFO (AbstractUndoLogManager.java:312)- xid 192.168.2.241:8091:509384058178904064 branch 509384060913590273, undo_log deleted with GlobalFinished
2024-03-08 15:10:07,867 INFO (AbstractRMHandler.java:131)- Branch Rollbacked result: PhaseTwo_Rollbacked
2024-03-08 15:10:38,982 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:194,threadName:http-nio-852-exec-5,Seata_XID:192.168.2.241:8091:509384201062064128,Seata_branchType:AT
2024-03-08 15:10:38,983 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:10:38,984 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:10:38,984 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:10:38,984 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:10:38,986 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:10:38,986 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:10:38,987 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 510(Integer)
2024-03-08 15:10:38,988 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:10:38,988 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:10:38,990 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:10:38,990 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:10:38,991 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:10:38,992 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:10:39,319 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 15:10:39,320 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:10:39,628 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 15:10:39,810 INFO (RmBranchRollbackProcessor.java:56)- rm handle branch rollback process:xid=192.168.2.241:8091:509384201062064128,branchId=509384202198720513,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 15:10:39,811 INFO (AbstractRMHandler.java:123)- Branch Rollbacking: 192.168.2.241:8091:509384201062064128 509384202198720513 jdbc:mysql://192.168.2.241:6033/vapp_inventory
2024-03-08 15:10:39,812 INFO (SQLLogger.java:73)- Logic SQL: SELECT * FROM undo_log WHERE branch_id = ? AND xid = ? FOR UPDATE
2024-03-08 15:10:39,812 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:10:39,815 INFO (SQLLogger.java:73)- Logic SQL: SELECT * FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:10:39,815 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:10:39,858 INFO (SQLLogger.java:73)- Logic SQL: UPDATE vaccine_release SET dock_amount = ?, version = ? WHERE id = ?  
2024-03-08 15:10:39,858 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:10:39,861 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE branch_id = ? AND xid = ?
2024-03-08 15:10:39,861 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:10:40,094 INFO (AbstractUndoLogManager.java:312)- xid 192.168.2.241:8091:509384201062064128 branch 509384202198720513, undo_log deleted with GlobalFinished
2024-03-08 15:10:40,094 INFO (AbstractRMHandler.java:131)- Branch Rollbacked result: PhaseTwo_Rollbacked
2024-03-08 15:11:41,257 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:191,threadName:http-nio-852-exec-2,Seata_XID:192.168.2.241:8091:509384462409146368,Seata_branchType:AT
2024-03-08 15:11:41,262 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:11:41,263 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:11:41,264 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:11:41,264 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:11:41,266 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:11:41,267 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:11:41,267 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 510(Integer)
2024-03-08 15:11:41,269 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:11:41,269 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:11:41,271 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:11:41,271 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:11:41,273 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:11:41,274 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:11:41,424 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509384462409146368, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509384462409146368, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509384462409146368, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:11:41,429 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509384462409146368, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509384462409146368, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509384462409146368, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509384462409146368, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509384462409146368, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509384462409146368, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509384462409146368, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509384462409146368, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509384462409146368, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509384462409146368, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:13:42,301 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:192,threadName:http-nio-852-exec-3,Seata_XID:192.168.2.241:8091:509384970607796224,Seata_branchType:AT
2024-03-08 15:13:42,304 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:13:42,304 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:13:42,305 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:13:42,306 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:13:42,308 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:13:42,310 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:13:42,310 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 510(Integer)
2024-03-08 15:13:42,312 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:13:42,312 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:13:42,314 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:13:42,314 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:13:42,317 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:13:42,317 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:13:42,431 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509384970607796224, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509384970607796224, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509384970607796224, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:13:42,434 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509384970607796224, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509384970607796224, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509384970607796224, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509384970607796224, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509384970607796224, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509384970607796224, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509384970607796224, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509384970607796224, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509384970607796224, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509384970607796224, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:15:02,317 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:195,threadName:http-nio-852-exec-6,Seata_XID:192.168.2.241:8091:509385306105978880,Seata_branchType:AT
2024-03-08 15:15:02,319 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:15:02,320 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:15:02,321 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:15:02,321 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:15:02,323 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:15:02,324 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:15:02,325 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 510(Integer)
2024-03-08 15:15:02,327 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:15:02,327 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:15:02,331 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:15:02,331 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:15:02,333 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:15:02,334 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:15:02,567 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509385306105978880, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509385306105978880, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509385306105978880, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:15:02,570 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509385306105978880, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509385306105978880, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509385306105978880, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509385306105978880, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509385306105978880, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509385306105978880, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509385306105978880, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509385306105978880, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509385306105978880, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509385306105978880, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:15:12,740 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:196,threadName:http-nio-852-exec-7,Seata_XID:192.168.2.241:8091:509385349751906304,Seata_branchType:AT
2024-03-08 15:15:12,741 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:15:12,742 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:15:12,742 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:15:12,742 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:15:12,744 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:15:12,745 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:15:12,745 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 510(Integer)
2024-03-08 15:15:12,747 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:15:12,747 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:15:12,749 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:15:12,749 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:15:12,751 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:15:12,752 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:15:13,208 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 15:15:13,209 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:15:13,456 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 15:15:16,357 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509385349751906304,branchId=509385350427189249,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 15:15:16,357 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509385349751906304 509385350427189249 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 15:15:16,357 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 15:15:16,457 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 15:15:16,457 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:16:52,655 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:194,threadName:http-nio-852-exec-5,Seata_XID:192.168.2.241:8091:509385768406360064,Seata_branchType:AT
2024-03-08 15:16:52,657 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:16:52,657 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:16:52,658 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:16:52,658 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:16:52,661 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:16:52,661 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:16:52,662 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 511(Integer)
2024-03-08 15:16:52,663 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:16:52,664 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:16:52,667 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:16:52,667 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:16:52,670 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:16:52,670 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:16:52,976 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 15:16:52,977 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:16:53,153 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 15:16:53,715 INFO (RmBranchRollbackProcessor.java:56)- rm handle branch rollback process:xid=192.168.2.241:8091:509385768406360064,branchId=509385769505267713,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 15:16:53,716 INFO (AbstractRMHandler.java:123)- Branch Rollbacking: 192.168.2.241:8091:509385768406360064 509385769505267713 jdbc:mysql://192.168.2.241:6033/vapp_inventory
2024-03-08 15:16:53,718 INFO (SQLLogger.java:73)- Logic SQL: SELECT * FROM undo_log WHERE branch_id = ? AND xid = ? FOR UPDATE
2024-03-08 15:16:53,718 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:16:53,726 INFO (SQLLogger.java:73)- Logic SQL: SELECT * FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:16:53,727 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:16:53,730 INFO (SQLLogger.java:73)- Logic SQL: UPDATE vaccine_release SET dock_amount = ?, version = ? WHERE id = ?  
2024-03-08 15:16:53,730 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:16:53,733 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE branch_id = ? AND xid = ?
2024-03-08 15:16:53,734 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:16:54,069 INFO (AbstractUndoLogManager.java:312)- xid 192.168.2.241:8091:509385768406360064 branch 509385769505267713, undo_log deleted with GlobalFinished
2024-03-08 15:16:54,070 INFO (AbstractRMHandler.java:131)- Branch Rollbacked result: PhaseTwo_Rollbacked
2024-03-08 15:20:02,016 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:199,threadName:http-nio-852-exec-10,Seata_XID:192.168.2.241:8091:509386562698485760,Seata_branchType:AT
2024-03-08 15:20:02,016 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:20:02,017 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:20:02,018 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:20:02,018 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:20:02,023 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:20:02,024 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:20:02,024 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 511(Integer)
2024-03-08 15:20:02,026 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:20:02,026 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:20:02,029 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:20:02,029 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:20:02,032 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:20:02,032 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:20:02,828 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 15:20:02,829 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:20:03,106 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 15:20:05,360 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509386562698485760,branchId=509386563990331393,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 15:20:05,360 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509386562698485760 509386563990331393 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 15:20:05,360 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 15:20:05,451 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 15:20:05,451 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:20:17,749 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:191,threadName:http-nio-852-exec-2,Seata_XID:192.168.2.241:8091:509386627064274944,Seata_branchType:AT
2024-03-08 15:20:17,752 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:20:17,753 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:20:17,753 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:20:17,754 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:20:17,757 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:20:17,758 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:20:17,758 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 512(Integer)
2024-03-08 15:20:17,760 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:20:17,760 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:20:17,763 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:20:17,763 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:20:17,768 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:20:17,769 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:20:18,255 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 15:20:18,257 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:20:18,479 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 15:20:20,367 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509386627064274944,branchId=509386629870264321,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 15:20:20,368 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509386627064274944 509386629870264321 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 15:20:20,368 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 15:20:20,468 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 15:20:20,468 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:20:55,800 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:190,threadName:http-nio-852-exec-1,Seata_XID:192.168.2.241:8091:509386788066828288,Seata_branchType:AT
2024-03-08 15:20:55,801 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:20:55,802 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:20:55,803 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:20:55,803 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:20:55,805 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:20:55,806 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:20:55,807 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 513(Integer)
2024-03-08 15:20:55,808 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:20:55,808 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:20:55,811 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:20:55,811 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:20:55,813 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:20:55,814 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:20:56,188 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 15:20:56,190 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:20:56,327 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 15:20:56,476 INFO (RmBranchRollbackProcessor.java:56)- rm handle branch rollback process:xid=192.168.2.241:8091:509386788066828288,branchId=509386789346091009,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 15:20:56,476 INFO (AbstractRMHandler.java:123)- Branch Rollbacking: 192.168.2.241:8091:509386788066828288 509386789346091009 jdbc:mysql://192.168.2.241:6033/vapp_inventory
2024-03-08 15:20:56,477 INFO (SQLLogger.java:73)- Logic SQL: SELECT * FROM undo_log WHERE branch_id = ? AND xid = ? FOR UPDATE
2024-03-08 15:20:56,477 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:20:56,481 INFO (SQLLogger.java:73)- Logic SQL: SELECT * FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:20:56,481 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:20:56,484 INFO (SQLLogger.java:73)- Logic SQL: UPDATE vaccine_release SET dock_amount = ?, version = ? WHERE id = ?  
2024-03-08 15:20:56,485 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:20:56,487 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE branch_id = ? AND xid = ?
2024-03-08 15:20:56,487 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:20:56,608 INFO (AbstractUndoLogManager.java:312)- xid 192.168.2.241:8091:509386788066828288 branch 509386789346091009, undo_log deleted with GlobalFinished
2024-03-08 15:20:56,609 INFO (AbstractRMHandler.java:131)- Branch Rollbacked result: PhaseTwo_Rollbacked
2024-03-08 15:25:57,472 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:193,threadName:http-nio-852-exec-4,Seata_XID:192.168.2.241:8091:509388054234931200,Seata_branchType:AT
2024-03-08 15:25:57,473 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:25:57,474 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:25:57,475 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:25:57,475 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:25:57,478 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:25:57,480 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:25:57,480 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 513(Integer)
2024-03-08 15:25:57,485 INFO (SQLLogger.java:73)- Logic SQL: SELECT * FROM vaccine_release LIMIT 1
2024-03-08 15:25:57,486 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:25:57,499 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:25:57,499 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:25:57,502 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:25:57,503 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:25:57,505 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:25:57,506 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:25:57,600 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388054234931200, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388054234931200, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388054234931200, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:25:57,603 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388054234931200, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388054234931200, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388054234931200, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388054234931200, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388054234931200, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388054234931200, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388054234931200, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388054234931200, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388054234931200, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388054234931200, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:27:26,429 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:196,threadName:http-nio-852-exec-7,Seata_XID:192.168.2.241:8091:509388427121139712,Seata_branchType:AT
2024-03-08 15:27:26,432 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:27:26,434 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:27:26,435 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:27:26,435 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:27:26,437 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:27:26,438 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:27:26,439 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 513(Integer)
2024-03-08 15:27:26,440 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:27:26,440 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:27:26,442 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:27:26,442 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:27:26,444 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:27:26,445 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:27:26,709 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388427121139712, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388427121139712, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388427121139712, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:27:26,713 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388427121139712, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388427121139712, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388427121139712, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388427121139712, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388427121139712, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388427121139712, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388427121139712, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388427121139712, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388427121139712, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388427121139712, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:29:40,450 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:194,threadName:http-nio-852-exec-5,Seata_XID:192.168.2.241:8091:509388987878612992,Seata_branchType:AT
2024-03-08 15:29:40,453 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:29:40,454 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:29:40,454 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:29:40,455 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:29:40,457 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:29:40,457 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:29:40,458 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 513(Integer)
2024-03-08 15:29:40,459 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:29:40,460 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:29:40,462 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:29:40,462 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:29:40,465 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:29:40,466 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:29:40,609 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388987878612992, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388987878612992, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388987878612992, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:29:40,612 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388987878612992, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388987878612992, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388987878612992, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388987878612992, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388987878612992, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388987878612992, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388987878612992, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388987878612992, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388987878612992, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509388987878612992, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:31:05,975 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:199,threadName:http-nio-852-exec-10,Seata_XID:192.168.2.241:8091:509389347556958208,Seata_branchType:AT
2024-03-08 15:31:05,977 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:31:05,978 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:31:05,979 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:31:05,979 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:05,983 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:31:05,983 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:31:05,984 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 513(Integer)
2024-03-08 15:31:05,985 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:31:05,985 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:05,988 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:31:05,988 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:05,991 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:31:05,991 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:06,357 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 15:31:06,358 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:06,599 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 15:31:08,365 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509389347556958208,branchId=509389348567785473,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 15:31:08,365 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509389347556958208 509389348567785473 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 15:31:08,366 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 15:31:08,462 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 15:31:08,462 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:11,931 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:191,threadName:http-nio-852-exec-2,Seata_XID:192.168.2.241:8091:509389372987023360,Seata_branchType:AT
2024-03-08 15:31:11,932 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:31:11,933 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:31:11,933 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:31:11,934 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:11,936 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:31:11,937 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:31:11,938 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 514(Integer)
2024-03-08 15:31:11,939 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:31:11,939 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:11,942 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:31:11,942 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:12,218 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:31:12,219 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:13,112 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 15:31:13,113 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:13,578 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 15:31:14,805 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:190,threadName:http-nio-852-exec-1,Seata_XID:192.168.2.241:8091:509389383552475136,Seata_branchType:AT
2024-03-08 15:31:14,807 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:31:14,808 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:31:14,808 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:31:14,808 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:14,811 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:31:14,811 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:31:14,812 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 515(Integer)
2024-03-08 15:31:14,814 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:31:14,814 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:14,816 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:31:14,816 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:14,818 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:31:14,818 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:15,000 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509389383552475136, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509389383552475136, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509389383552475136, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:31:15,002 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509389383552475136, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509389383552475136, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509389383552475136, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509389383552475136, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509389383552475136, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509389383552475136, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509389383552475136, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509389383552475136, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509389383552475136, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509389383552475136, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:31:16,365 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509389372987023360,branchId=509389376308912129,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 15:31:16,366 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509389372987023360 509389376308912129 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 15:31:16,366 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 15:31:16,466 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 15:31:16,466 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:17,599 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:192,threadName:http-nio-852-exec-3,Seata_XID:192.168.2.241:8091:509389395833397248,Seata_branchType:AT
2024-03-08 15:31:17,601 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:31:17,601 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:31:17,602 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:31:17,602 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:17,604 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:31:17,604 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:31:17,605 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 515(Integer)
2024-03-08 15:31:17,606 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:31:17,606 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:17,608 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:31:17,609 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:17,610 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:31:17,611 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:17,917 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:193,threadName:http-nio-852-exec-4,Seata_XID:192.168.2.241:8091:509389396743561216,Seata_branchType:AT
2024-03-08 15:31:17,918 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:31:17,919 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:31:17,919 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:31:17,919 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:17,924 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:31:17,926 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:31:17,926 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 515(Integer)
2024-03-08 15:31:17,928 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:31:17,928 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:18,358 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 15:31:18,359 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:18,415 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:195,threadName:http-nio-852-exec-6,Seata_XID:192.168.2.241:8091:509389398601637888,Seata_branchType:AT
2024-03-08 15:31:18,416 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:31:18,416 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:31:18,417 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:31:18,417 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:18,426 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:31:18,426 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:31:18,427 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 515(Integer)
2024-03-08 15:31:18,428 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:31:18,428 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:18,595 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:31:18,595 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:18,596 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 15:31:18,598 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:31:18,599 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:18,599 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 0
2024-03-08 15:31:18,602 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 0
2024-03-08 15:31:20,367 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509389395833397248,branchId=509389397301403649,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 15:31:20,367 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509389395833397248 509389397301403649 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 15:31:20,367 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 15:31:20,453 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 15:31:20,453 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:58,717 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:196,threadName:http-nio-852-exec-7,Seata_XID:192.168.2.241:8091:509389569217536000,Seata_branchType:AT
2024-03-08 15:31:58,719 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:31:58,720 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:31:58,720 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:31:58,721 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:58,723 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:31:58,723 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:31:58,724 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 516(Integer)
2024-03-08 15:31:58,725 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:31:58,725 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:58,727 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:31:58,728 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:58,730 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:31:58,730 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:59,322 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 15:31:59,327 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:31:59,927 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 15:32:00,240 INFO (RmBranchRollbackProcessor.java:56)- rm handle branch rollback process:xid=192.168.2.241:8091:509389569217536000,branchId=509389569771184129,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 15:32:00,248 INFO (AbstractRMHandler.java:123)- Branch Rollbacking: 192.168.2.241:8091:509389569217536000 509389569771184129 jdbc:mysql://192.168.2.241:6033/vapp_inventory
2024-03-08 15:32:00,256 INFO (SQLLogger.java:73)- Logic SQL: SELECT * FROM undo_log WHERE branch_id = ? AND xid = ? FOR UPDATE
2024-03-08 15:32:00,257 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:32:00,261 INFO (SQLLogger.java:73)- Logic SQL: SELECT * FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:32:00,261 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:32:00,265 INFO (SQLLogger.java:73)- Logic SQL: UPDATE vaccine_release SET dock_amount = ?, version = ? WHERE id = ?  
2024-03-08 15:32:00,265 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:32:00,268 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE branch_id = ? AND xid = ?
2024-03-08 15:32:00,268 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:32:00,487 INFO (AbstractUndoLogManager.java:312)- xid 192.168.2.241:8091:509389569217536000 branch 509389569771184129, undo_log deleted with GlobalFinished
2024-03-08 15:32:00,488 INFO (AbstractRMHandler.java:131)- Branch Rollbacked result: PhaseTwo_Rollbacked
2024-03-08 15:32:42,018 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:198,threadName:http-nio-852-exec-9,Seata_XID:192.168.2.241:8091:509389750583435264,Seata_branchType:AT
2024-03-08 15:32:42,027 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:32:42,034 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:32:42,036 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:32:42,044 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:32:42,049 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:32:42,050 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:32:42,050 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 516(Integer)
2024-03-08 15:32:42,052 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:32:42,052 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:32:42,054 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:32:42,055 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:32:42,057 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:32:42,057 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:32:42,453 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 15:32:42,454 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:32:42,819 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 15:32:45,367 INFO (RmBranchCommitProcessor.java:56)- rm client handle branch commit process:xid=192.168.2.241:8091:509389750583435264,branchId=509389751501987841,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 15:32:45,368 INFO (AbstractRMHandler.java:96)- Branch committing: 192.168.2.241:8091:509389750583435264 509389751501987841 jdbc:mysql://192.168.2.241:6033/vapp_inventory null
2024-03-08 15:32:45,368 INFO (AbstractRMHandler.java:104)- Branch commit result: PhaseTwo_Committed
2024-03-08 15:32:45,468 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE  branch_id IN  (?)  AND xid IN  (?) 
2024-03-08 15:32:45,468 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:32:48,103 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:199,threadName:http-nio-852-exec-10,Seata_XID:192.168.2.241:8091:509389775963168768,Seata_branchType:AT
2024-03-08 15:32:48,106 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:32:48,106 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:32:48,107 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:32:48,107 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:32:48,110 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:32:48,110 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:32:48,111 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 517(Integer)
2024-03-08 15:32:48,113 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:32:48,114 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:32:48,116 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:32:48,116 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:32:48,119 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:32:48,119 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:32:48,439 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509389775963168768, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509389775963168768, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509389775963168768, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:32:48,442 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509389775963168768, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509389775963168768, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509389775963168768, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509389775963168768, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509389775963168768, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509389775963168768, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509389775963168768, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509389775963168768, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509389775963168768, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509389775963168768, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:39:01,325 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:190,threadName:http-nio-852-exec-1,Seata_XID:192.168.2.241:8091:509391341667491840,Seata_branchType:AT
2024-03-08 15:39:01,328 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:39:01,329 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:39:01,330 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:39:01,331 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:39:01,335 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:39:01,335 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:39:01,336 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 517(Integer)
2024-03-08 15:39:01,338 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:39:01,338 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:39:01,342 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:39:01,342 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:39:01,345 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:39:01,345 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:39:01,445 ERROR (AbstractDMLBaseExecutor.java:117)- execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509391341667491840, may be has finished.] ]
java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509391341667491840, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509391341667491840, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:39:01,449 ERROR (CommonExceptionHandler.java:209)- 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509391341667491840, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509391341667491840, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509391341667491840, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509391341667491840, may be has finished.] ]
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509391341667491840, may be has finished.] ]
### The error may involve com.jsxa.vapp.inventory.mapper.VaccineReleaseMapper.reduceDock-Inline
### The error occurred while setting parameters
### SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509391341667491840, may be has finished.] ]
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509391341667491840, may be has finished.] ]; nested exception is java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509391341667491840, may be has finished.] ]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy132.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy190.reduceDock(Unknown Source)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl.reduceDock(VaccineReleaseServiceImpl.java:416)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$FastClassBySpringCGLIB$$26077074.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.jsxa.vapp.inventory.service.impl.VaccineReleaseServiceImpl$$EnhancerBySpringCGLIB$$9c7bc8df.reduceDock(<generated>)
	at com.jsxa.vapp.inventory.controller.api.InventoryApi.reduceDock(InventoryApi.java:32)
	at jdk.internal.reflect.GeneratedMethodAccessor250.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509391341667491840, may be has finished.] ]
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:157)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:218)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:196)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:184)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:289)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:183)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$0(AbstractDMLBaseExecutor.java:112)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:299)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:155)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:110)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:74)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:115)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:113)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:51)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor229.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy260.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor234.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy259.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor271.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: Response[ TransactionException[Could not found global transaction xid = 192.168.2.241:8091:509391341667491840, may be has finished.] ]
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:69)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:238)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:216)
	... 116 common frames omitted
2024-03-08 15:47:02,052 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:193,threadName:http-nio-852-exec-4,Seata_XID:192.168.2.241:8091:509393357819092992,Seata_branchType:AT
2024-03-08 15:47:02,053 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:47:02,054 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:47:02,054 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:47:02,054 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:47:02,059 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:47:02,059 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:47:02,060 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 517(Integer)
2024-03-08 15:47:02,062 INFO (SQLLogger.java:73)- Logic SQL: SELECT * FROM vaccine_release LIMIT 1
2024-03-08 15:47:02,062 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:47:02,076 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:47:02,076 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:47:02,079 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:47:02,080 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:47:02,083 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:47:02,083 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:47:02,390 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 15:47:02,390 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:47:02,741 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 15:47:02,998 INFO (RmBranchRollbackProcessor.java:56)- rm handle branch rollback process:xid=192.168.2.241:8091:509393357819092992,branchId=509393358771200001,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 15:47:03,000 INFO (AbstractRMHandler.java:123)- Branch Rollbacking: 192.168.2.241:8091:509393357819092992 509393358771200001 jdbc:mysql://192.168.2.241:6033/vapp_inventory
2024-03-08 15:47:03,001 INFO (SQLLogger.java:73)- Logic SQL: SELECT * FROM undo_log WHERE branch_id = ? AND xid = ? FOR UPDATE
2024-03-08 15:47:03,001 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:47:03,005 INFO (SQLLogger.java:73)- Logic SQL: SELECT * FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:47:03,005 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:47:03,008 INFO (SQLLogger.java:73)- Logic SQL: UPDATE vaccine_release SET dock_amount = ?, version = ? WHERE id = ?  
2024-03-08 15:47:03,008 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:47:03,010 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE branch_id = ? AND xid = ?
2024-03-08 15:47:03,011 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:47:03,355 INFO (AbstractUndoLogManager.java:312)- xid 192.168.2.241:8091:509393357819092992 branch 509393358771200001, undo_log deleted with GlobalFinished
2024-03-08 15:47:03,356 INFO (AbstractRMHandler.java:131)- Branch Rollbacked result: PhaseTwo_Rollbacked
2024-03-08 15:47:11,820 WARN (NotifyCenter.java:145)- [NotifyCenter] Start destroying Publisher
2024-03-08 15:47:11,820 WARN (HttpClientBeanHolder.java:108)- [HttpClientBeanHolder] Start destroying common HttpClient
2024-03-08 15:47:11,820 WARN (NotifyCenter.java:162)- [NotifyCenter] Destruction of the end
2024-03-08 15:47:11,820 WARN (HttpClientBeanHolder.java:114)- [HttpClientBeanHolder] Destruction of the end
2024-03-08 15:47:11,822 INFO (QuartzScheduler.java:585)- Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2024-03-08 15:47:12,111 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'Nacos-Watch-Task-Scheduler'
2024-03-08 15:47:12,121 ERROR (AbstractCanalClient.java:85)- canal client 异常
com.alibaba.otter.canal.protocol.exception.CanalClientException: java.nio.channels.ClosedByInterruptException
	at com.alibaba.otter.canal.client.impl.SimpleCanalConnector.getWithoutAck(SimpleCanalConnector.java:316)
	at top.javatool.canal.client.client.AbstractCanalClient.process(AbstractCanalClient.java:76)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedByInterruptException: null
	at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199)
	at java.base/sun.nio.ch.SocketChannelImpl.endRead(SocketChannelImpl.java:334)
	at java.base/sun.nio.ch.SocketChannelImpl.pollRead(SocketChannelImpl.java:970)
	at java.base/sun.nio.ch.SocketAdaptor$SocketInputStream.read(SocketAdaptor.java:209)
	at java.base/sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:101)
	at java.base/java.nio.channels.Channels$ReadableByteChannelImpl.read(Channels.java:388)
	at com.alibaba.otter.canal.client.impl.SimpleCanalConnector.read(SimpleCanalConnector.java:402)
	at com.alibaba.otter.canal.client.impl.SimpleCanalConnector.readNextPacket(SimpleCanalConnector.java:392)
	at com.alibaba.otter.canal.client.impl.SimpleCanalConnector.readNextPacket(SimpleCanalConnector.java:376)
	at com.alibaba.otter.canal.client.impl.SimpleCanalConnector.receiveMessages(SimpleCanalConnector.java:321)
	at com.alibaba.otter.canal.client.impl.SimpleCanalConnector.getWithoutAck(SimpleCanalConnector.java:314)
	... 2 common frames omitted
2024-03-08 15:47:12,131 INFO (NacosServiceRegistry.java:94)- De-registering from Nacos Server now...
2024-03-08 15:47:12,132 INFO (BeatReactor.java:101)- [BEAT] removing beat: DEFAULT_GROUP@@inventory-service:192.168.1.124:852 from beat map.
2024-03-08 15:47:12,133 INFO (NamingProxy.java:260)- [DEREGISTER-SERVICE] a4e3d3db-c95f-49ed-82fa-92d05a9d6673 deregistering service DEFAULT_GROUP@@inventory-service with instance: Instance{instanceId='null', ip='192.168.1.124', port=852, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={}}
2024-03-08 15:47:12,136 INFO (NacosServiceRegistry.java:114)- De-registration finished.
2024-03-08 15:47:12,137 INFO (BeatReactor.java:147)- com.alibaba.nacos.client.naming.beat.BeatReactor do shutdown begin
2024-03-08 15:47:13,136 INFO (PushReceiver.java:97)- received push data: {"type":"dom","data":"{\"dom\":\"DEFAULT_GROUP@@inventory-service\",\"name\":\"DEFAULT_GROUP@@inventory-service\",\"cacheMillis\":10000,\"lastRefTime\":1709884051829,\"checksum\":\"c1d97f833d1ec428feb5de55e1b010d9\",\"useSpecifiedURL\":false,\"clusters\":\"DEFAULT\",\"env\":\"\",\"hosts\":[],\"metadata\":{}}","lastRefTime":968127660898763} from /192.168.2.241
2024-03-08 15:47:13,136 INFO (HostReactor.java:238)- removed ips(1) service: DEFAULT_GROUP@@inventory-service@@DEFAULT -> [{"instanceId":"192.168.1.124#852#DEFAULT#DEFAULT_GROUP@@inventory-service","ip":"192.168.1.124","port":852,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@inventory-service","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}]
2024-03-08 15:47:13,137 INFO (HostReactor.java:271)- current ips:(0) service: DEFAULT_GROUP@@inventory-service@@DEFAULT -> []
2024-03-08 15:47:14,350 INFO (BeatReactor.java:149)- com.alibaba.nacos.client.naming.beat.BeatReactor do shutdown stop
2024-03-08 15:47:14,350 INFO (HostReactor.java:413)- com.alibaba.nacos.client.naming.core.HostReactor do shutdown begin
2024-03-08 15:47:14,872 INFO (PushReceiver.java:132)- com.alibaba.nacos.client.naming.core.PushReceiver do shutdown begin
2024-03-08 15:47:19,475 INFO (PushReceiver.java:136)- com.alibaba.nacos.client.naming.core.PushReceiver do shutdown stop
2024-03-08 15:47:19,475 INFO (FailoverReactor.java:132)- com.alibaba.nacos.client.naming.backups.FailoverReactor do shutdown begin
2024-03-08 15:47:19,490 INFO (FailoverReactor.java:134)- com.alibaba.nacos.client.naming.backups.FailoverReactor do shutdown stop
2024-03-08 15:47:19,490 INFO (HostReactor.java:418)- com.alibaba.nacos.client.naming.core.HostReactor do shutdown stop
2024-03-08 15:47:19,491 INFO (NamingProxy.java:719)- com.alibaba.nacos.client.naming.net.NamingProxy do shutdown begin
2024-03-08 15:47:19,495 WARN (NamingHttpClientManager.java:72)- [NamingHttpClientManager] Start destroying NacosRestTemplate
2024-03-08 15:47:19,495 WARN (NamingHttpClientManager.java:79)- [NamingHttpClientManager] Destruction of the end
2024-03-08 15:47:19,495 INFO (CredentialWatcher.java:105)- [null] CredentialWatcher is stopped
2024-03-08 15:47:19,496 INFO (CredentialService.java:98)- [null] CredentialService is freed
2024-03-08 15:47:19,496 INFO (NamingProxy.java:723)- com.alibaba.nacos.client.naming.net.NamingProxy do shutdown stop
2024-03-08 15:47:19,500 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'asyncExecutor'
2024-03-08 15:47:19,509 INFO (EmbedServer.java:91)- >>>>>>>>>>> xxl-job remoting server stop.
2024-03-08 15:47:19,871 INFO (ExecutorRegistryThread.java:87)- >>>>>>>>>>> xxl-job registry-remove success, registryParam:RegistryParam{registryGroup='EXECUTOR', registryKey='inventory-service', registryValue='http://192.168.2.230:9998/'}, registryResult:ReturnT [code=200, msg=null, content=null]
2024-03-08 15:47:19,872 INFO (ExecutorRegistryThread.java:105)- >>>>>>>>>>> xxl-job, executor registry thread destroy.
2024-03-08 15:47:19,872 INFO (EmbedServer.java:117)- >>>>>>>>>>> xxl-job remoting server destroy success.
2024-03-08 15:47:19,872 INFO (JobLogFileCleanThread.java:99)- >>>>>>>>>>> xxl-job, executor JobLogFileCleanThread thread destroy.
2024-03-08 15:47:19,873 INFO (TriggerCallbackThread.java:98)- >>>>>>>>>>> xxl-job, executor callback thread destroy.
2024-03-08 15:47:19,873 INFO (TriggerCallbackThread.java:128)- >>>>>>>>>>> xxl-job, executor retry callback thread destroy.
2024-03-08 15:47:19,877 WARN (DisposableBeanAdapter.java:349)- Destroy method 'close' on bean with name 'nacosServiceRegistry' threw an exception: java.lang.NullPointerException
2024-03-08 15:47:19,881 INFO (QuartzScheduler.java:666)- Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2024-03-08 15:47:19,881 INFO (QuartzScheduler.java:585)- Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2024-03-08 15:47:19,882 INFO (QuartzScheduler.java:740)- Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2024-03-08 15:47:19,882 INFO (SchedulerFactoryBean.java:845)- Shutting down Quartz Scheduler
2024-03-08 15:47:19,882 INFO (ShutdownManager.java:29)- ====关闭后台任务任务线程池====
2024-03-08 15:47:19,884 WARN (InitDestroyAnnotationBeanPostProcessor.java:185)- Destroy method on bean with name 'shutdownManager' threw an exception: java.lang.ExceptionInInitializerError
2024-03-08 15:47:19,893 INFO (SLF4JLogger.java:71)- Closed connection [connectionId{localValue:2, serverValue:1475}] to 192.168.2.241:27017 because the pool has been closed.
2024-03-08 15:47:20,410 INFO (AbstractEntityManagerFactoryBean.java:598)- Closing JPA EntityManagerFactory for persistence unit 'default'
2024-03-08 15:47:20,416 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'threadPoolTaskExecutor'
2024-03-08 15:47:20,419 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'executor'
2024-03-08 15:47:20,420 INFO (HikariDataSource.java:350)- vapp-inventory-pool - Shutdown initiated...
2024-03-08 15:47:20,426 INFO (HikariDataSource.java:352)- vapp-inventory-pool - Shutdown completed.
2024-03-08 15:47:20,427 INFO (AbstractNettyRemotingClient.java:384)- channel inactive: [id: 0x17bf8d06, L:/192.168.2.230:12802 ! R:/192.168.2.241:8091]
2024-03-08 15:47:20,427 INFO (NettyClientChannelManager.java:124)- return to pool, rm channel:[id: 0x17bf8d06, L:/192.168.2.230:12802 ! R:/192.168.2.241:8091]
2024-03-08 15:47:20,427 INFO (NettyPoolableFactory.java:133)- channel valid false,channel:[id: 0x17bf8d06, L:/192.168.2.230:12802 ! R:/192.168.2.241:8091]
2024-03-08 15:47:20,427 INFO (NettyPoolableFactory.java:120)- will destroy channel:[id: 0x17bf8d06, L:/192.168.2.230:12802 ! R:/192.168.2.241:8091]
2024-03-08 15:47:20,427 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x17bf8d06, L:/192.168.2.230:12802 ! R:/192.168.2.241:8091]) will closed
2024-03-08 15:47:20,427 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x17bf8d06, L:/192.168.2.230:12802 ! R:/192.168.2.241:8091]) will closed
2024-03-08 15:48:27,107 WARN (NacosPropertySourceBuilder.java:87)- Ignore the empty nacos configuration and get it based on dataId[inventory-service] & group[inventory-service]
2024-03-08 15:48:27,116 WARN (NacosPropertySourceBuilder.java:87)- Ignore the empty nacos configuration and get it based on dataId[inventory-service-common.yml] & group[inventory-service]
2024-03-08 15:48:27,119 WARN (NacosPropertySourceBuilder.java:87)- Ignore the empty nacos configuration and get it based on dataId[inventory-service-dev.yml] & group[inventory-service]
2024-03-08 15:48:27,120 INFO (PropertySourceBootstrapConfiguration.java:112)- Located property source: [BootstrapPropertySource {name='bootstrapProperties-inventory-service-dev.yml,inventory-service'}, BootstrapPropertySource {name='bootstrapProperties-inventory-service-common.yml,inventory-service'}, BootstrapPropertySource {name='bootstrapProperties-inventory-service.yml,inventory-service'}, BootstrapPropertySource {name='bootstrapProperties-inventory-service,inventory-service'}, BootstrapPropertySource {name='bootstrapProperties-canal.yml,common'}, BootstrapPropertySource {name='bootstrapProperties-seata.yml,common'}, BootstrapPropertySource {name='bootstrapProperties-minio.yml,common'}, BootstrapPropertySource {name='bootstrapProperties-jwt.yml,common'}, BootstrapPropertySource {name='bootstrapProperties-mongo.yml,common'}, BootstrapPropertySource {name='bootstrapProperties-redis.yml,common'}]
2024-03-08 15:48:32,394 INFO (SpringApplication.java:655)- The following profiles are active: common,dev
2024-03-08 15:48:48,363 INFO (RepositoryConfigurationDelegate.java:249)- Multiple Spring Data modules found, entering strict repository configuration mode!
2024-03-08 15:48:48,370 INFO (RepositoryConfigurationDelegate.java:127)- Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2024-03-08 15:48:48,546 INFO (RepositoryConfigurationDelegate.java:187)- Finished Spring Data repository scanning in 151ms. Found 0 JPA repository interfaces.
2024-03-08 15:48:48,581 INFO (RepositoryConfigurationDelegate.java:249)- Multiple Spring Data modules found, entering strict repository configuration mode!
2024-03-08 15:48:48,582 INFO (RepositoryConfigurationDelegate.java:127)- Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-03-08 15:48:48,707 INFO (RepositoryConfigurationDelegate.java:187)- Finished Spring Data repository scanning in 123ms. Found 0 MongoDB repository interfaces.
2024-03-08 15:48:48,736 INFO (RepositoryConfigurationDelegate.java:249)- Multiple Spring Data modules found, entering strict repository configuration mode!
2024-03-08 15:48:48,737 INFO (RepositoryConfigurationDelegate.java:127)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-03-08 15:48:48,853 INFO (RepositoryConfigurationDelegate.java:187)- Finished Spring Data repository scanning in 51ms. Found 0 Redis repository interfaces.
2024-03-08 15:48:49,224 WARN (EndpointId.java:155)- Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2024-03-08 15:48:49,726 INFO (GenericScope.java:295)- BeanFactory id=e5934a13-875f-376b-b71b-32b701d64d39
2024-03-08 15:48:49,819 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$9785bdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:49,853 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:50,109 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:50,126 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:50,157 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:50,164 INFO (SeataAutoConfiguration.java:65)- Automatically configure Seata
2024-03-08 15:48:50,928 INFO (ConfigurationFactory.java:65)- load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2024-03-08 15:48:50,939 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:50,973 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:51,500 INFO (GlobalTransactionScanner.java:164)- Initializing Global Transaction Clients ... 
2024-03-08 15:48:51,721 INFO (NettyClientBootstrap.java:147)- NettyClientBootstrap has started
2024-03-08 15:48:51,721 INFO (GlobalTransactionScanner.java:172)- Transaction Manager Client is initialized. applicationId[inventory-service] txServiceGroup[my_test_tx_group]
2024-03-08 15:48:51,739 INFO (AsyncWorker.java:125)- Async Commit Buffer Limit: 10000
2024-03-08 15:48:51,740 INFO (ResourceManagerXA.java:40)- ResourceManagerXA init ...
2024-03-08 15:48:51,753 INFO (NettyClientBootstrap.java:147)- NettyClientBootstrap has started
2024-03-08 15:48:51,753 INFO (GlobalTransactionScanner.java:177)- Resource Manager is initialized. applicationId[inventory-service] txServiceGroup[my_test_tx_group]
2024-03-08 15:48:51,754 INFO (GlobalTransactionScanner.java:181)- Global Transaction Clients are initialized. 
2024-03-08 15:48:53,322 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'shiroConfig' of type [com.jsxa.vapp.common.shiro.ShiroConfig$$EnhancerBySpringCGLIB$$dfe808af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:53,456 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'jwtTokenUtil' of type [com.jsxa.vapp.common.utils.JwtTokenUtil] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:53,601 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:53,625 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$7292aeb3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:53,631 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:53,643 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:53,678 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:53,704 INFO (SeataAutoDataSourceProxyCreator.java:45)- Auto proxy of [dataSource]
2024-03-08 15:48:53,749 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:53,769 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:53,783 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:53,848 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:53,853 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'userMapper' of type [com.sun.proxy.$Proxy141] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:53,875 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:53,877 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy142] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:53,895 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:53,900 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'roleMapper' of type [com.sun.proxy.$Proxy143] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:54,227 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'permissionMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:54,351 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'permissionMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:55,467 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'rolePermissionMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:55,469 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'rolePermissionMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:55,474 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'shiroRealm' of type [com.jsxa.vapp.common.shiro.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:55,662 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:55,751 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 15:48:56,239 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'executor'
2024-03-08 15:48:58,379 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 852 (http)
2024-03-08 15:48:58,400 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["http-nio-852"]
2024-03-08 15:48:58,401 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2024-03-08 15:48:58,402 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.37]
2024-03-08 15:48:58,807 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2024-03-08 15:48:58,807 INFO (ServletWebServerApplicationContext.java:285)- Root WebApplicationContext: initialization completed in 26352 ms
2024-03-08 15:49:10,209 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'threadPoolTaskExecutor'
2024-03-08 15:49:11,452 INFO (HikariDataSource.java:110)- vapp-inventory-pool - Starting...
2024-03-08 15:49:13,114 INFO (HikariDataSource.java:110)- HikariPool-1 - Starting...
2024-03-08 15:49:13,426 INFO (HikariDataSource.java:123)- HikariPool-1 - Start completed.
2024-03-08 15:49:13,724 INFO (HikariDataSource.java:110)- HikariPool-2 - Starting...
2024-03-08 15:49:13,868 INFO (HikariDataSource.java:123)- HikariPool-2 - Start completed.
2024-03-08 15:49:14,808 INFO (PoolBase.java:535)- vapp-inventory-pool - Driver does not support get/set network timeout for connections. (getNetworkTimeout)
2024-03-08 15:49:14,811 INFO (HikariDataSource.java:123)- vapp-inventory-pool - Start completed.
2024-03-08 15:49:14,889 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-391f1070-7fb6-4c1b-bcac-b495d455a2a2] [subscribe] service.vgroupMapping.my_test_tx_group+SEATA_GROUP+391f1070-7fb6-4c1b-bcac-b495d455a2a2
2024-03-08 15:49:14,891 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-391f1070-7fb6-4c1b-bcac-b495d455a2a2] [add-listener] ok, tenant=391f1070-7fb6-4c1b-bcac-b495d455a2a2, dataId=service.vgroupMapping.my_test_tx_group, group=SEATA_GROUP, cnt=1
2024-03-08 15:49:14,915 INFO (InitUtils.java:65)- initializer namespace from System Property :null
2024-03-08 15:49:14,916 INFO (InitUtils.java:74)- initializer namespace from System Environment :null
2024-03-08 15:49:14,917 INFO (InitUtils.java:84)- initializer namespace from System Property :null
2024-03-08 15:49:15,208 INFO (HostReactor.java:232)- new ips(1) service: SEATA_GROUP@@seata-server@@default -> [{"instanceId":"192.168.2.241#8091#default#SEATA_GROUP@@seata-server","ip":"192.168.2.241","port":8091,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"default","serviceName":"SEATA_GROUP@@seata-server","metadata":{},"instanceHeartBeatInterval":5000,"ipDeleteTimeout":30000,"instanceHeartBeatTimeOut":15000,"instanceIdGenerator":"simple"}]
2024-03-08 15:49:15,215 INFO (HostReactor.java:271)- current ips:(1) service: SEATA_GROUP@@seata-server@@default -> [{"instanceId":"192.168.2.241#8091#default#SEATA_GROUP@@seata-server","ip":"192.168.2.241","port":8091,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"default","serviceName":"SEATA_GROUP@@seata-server","metadata":{},"instanceHeartBeatInterval":5000,"ipDeleteTimeout":30000,"instanceHeartBeatTimeOut":15000,"instanceIdGenerator":"simple"}]
2024-03-08 15:49:15,222 INFO (NettyClientChannelManager.java:99)- will connect to 192.168.2.241:8091
2024-03-08 15:49:15,224 INFO (RmNettyRemotingClient.java:244)- RM will register :jdbc:mysql://192.168.2.241:6033/vapp_inventory
2024-03-08 15:49:15,231 INFO (NettyPoolableFactory.java:56)- NettyPool create channel to transactionRole:RMROLE,address:192.168.2.241:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.2.241:6033/vapp_inventory', applicationId='inventory-service', transactionServiceGroup='my_test_tx_group'} >
2024-03-08 15:49:15,974 INFO (RmNettyRemotingClient.java:151)- register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x1f8eeee0, L:/192.168.2.230:26361 - R:/192.168.2.241:8091]
2024-03-08 15:49:15,979 INFO (NettyPoolableFactory.java:81)- register success, cost 101 ms, version:1.3.0,role:RMROLE,channel:[id: 0x1f8eeee0, L:/192.168.2.230:26361 - R:/192.168.2.241:8091]
2024-03-08 15:49:16,080 INFO (LogHelper.java:31)- HHH000204: Processing PersistenceUnitInfo [name: default]
2024-03-08 15:49:16,177 INFO (Version.java:44)- HHH000412: Hibernate ORM core version 5.4.18.Final
2024-03-08 15:49:16,445 INFO (JavaReflectionManager.java:49)- HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2024-03-08 15:49:16,573 INFO (Version.java:41)- Redisson 3.12.5
2024-03-08 15:49:16,672 INFO (Dialect.java:172)- HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2024-03-08 15:49:17,090 INFO (JtaPlatformInitiator.java:52)- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-03-08 15:49:17,102 INFO (ConnectionPool.java:167)- 1 connections initialized for /192.168.2.241:6379
2024-03-08 15:49:17,107 INFO (ConnectionPool.java:167)- 24 connections initialized for /192.168.2.241:6379
2024-03-08 15:49:17,117 INFO (AbstractEntityManagerFactoryBean.java:416)- Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-03-08 15:49:18,081 INFO (SLF4JLogger.java:71)- Cluster created with settings {hosts=[192.168.2.241:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2024-03-08 15:49:18,146 INFO (SLF4JLogger.java:71)- Opened connection [connectionId{localValue:1, serverValue:1480}] to 192.168.2.241:27017
2024-03-08 15:49:18,152 INFO (SLF4JLogger.java:71)- Monitor thread successfully connected to server with description ServerDescription{address=192.168.2.241:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3587700}
2024-03-08 15:49:19,031 INFO (StdSchedulerFactory.java:1220)- Using default implementation for ThreadExecutor
2024-03-08 15:49:19,045 INFO (SchedulerSignalerImpl.java:61)- Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2024-03-08 15:49:19,046 INFO (QuartzScheduler.java:229)- Quartz Scheduler v.2.3.2 created.
2024-03-08 15:49:19,047 INFO (RAMJobStore.java:155)- RAMJobStore initialized.
2024-03-08 15:49:19,048 INFO (QuartzScheduler.java:294)- Scheduler meta-data: Quartz Scheduler (v2.3.2) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2024-03-08 15:49:19,048 INFO (StdSchedulerFactory.java:1374)- Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2024-03-08 15:49:19,048 INFO (StdSchedulerFactory.java:1378)- Quartz scheduler version: 2.3.2
2024-03-08 15:49:19,049 INFO (QuartzScheduler.java:2293)- JobFactory set to: com.jsxa.vapp.common.quartz.MyJobFactory@78299721
2024-03-08 15:49:19,425 WARN (JpaBaseConfiguration.java:220)- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-03-08 15:49:20,201 INFO (InitUtils.java:65)- initializer namespace from System Property :null
2024-03-08 15:49:20,202 INFO (InitUtils.java:74)- initializer namespace from System Environment :null
2024-03-08 15:49:20,202 INFO (InitUtils.java:84)- initializer namespace from System Property :null
2024-03-08 15:49:20,474 INFO (EndpointLinksResolver.java:58)- Exposing 2 endpoint(s) beneath base path '/actuator'
2024-03-08 15:49:20,661 INFO (XxlJobConfig.java:46)- >>>>>>>>>>> xxl-job config init.
2024-03-08 15:49:20,701 INFO (PropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2024-03-08 15:49:20,851 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService
2024-03-08 15:49:20,852 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'asyncExecutor'
2024-03-08 15:49:20,872 WARN (URLConfigurationSource.java:121)- No URLs will be polled as dynamic configuration sources.
2024-03-08 15:49:20,872 INFO (URLConfigurationSource.java:122)- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2024-03-08 15:49:20,882 WARN (URLConfigurationSource.java:121)- No URLs will be polled as dynamic configuration sources.
2024-03-08 15:49:20,882 INFO (URLConfigurationSource.java:122)- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2024-03-08 15:49:21,432 WARN (ThymeleafAutoConfiguration.java:106)- Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2024-03-08 15:49:21,485 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'Nacos-Watch-Task-Scheduler'
2024-03-08 15:49:22,597 WARN (FreeMarkerAutoConfiguration.java:67)- Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2024-03-08 15:49:24,872 WARN (RedisStarterDeprecationWarningAutoConfiguration.java:43)- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
2024-03-08 15:49:26,584 INFO (XxlJobExecutor.java:183)- >>>>>>>>>>> xxl-job register jobhandler success, name:updateVaccineReleaseStatusByRtJobHandler, jobHandler:com.xxl.job.core.handler.impl.MethodJobHandler@d1b5363[class com.jsxa.vapp.inventory.xxxJob.jobhandler.VaccinaReleaseStatusXxlJob#updateProjectAuctionStatusBmzJobHandler]
2024-03-08 15:49:26,840 INFO (EmbedServer.java:82)- >>>>>>>>>>> xxl-job remoting server start success, nettype = class com.xxl.job.core.server.EmbedServer, port = 9998
2024-03-08 15:49:26,991 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["http-nio-852"]
2024-03-08 15:49:27,022 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 852 (http) with context path ''
2024-03-08 15:49:27,027 INFO (BeatReactor.java:81)- [BEAT] adding beat: BeatInfo{port=852, ip='192.168.1.124', weight=1.0, serviceName='DEFAULT_GROUP@@inventory-service', cluster='DEFAULT', metadata={preserved.register.source=SPRING_CLOUD}, scheduled=false, period=5000, stopped=false} to beat map.
2024-03-08 15:49:27,030 INFO (NamingProxy.java:230)- [REGISTER-SERVICE] a4e3d3db-c95f-49ed-82fa-92d05a9d6673 registering service DEFAULT_GROUP@@inventory-service with instance: Instance{instanceId='null', ip='192.168.1.124', port=852, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={preserved.register.source=SPRING_CLOUD}}
2024-03-08 15:49:27,033 INFO (NacosServiceRegistry.java:75)- nacos registry, DEFAULT_GROUP inventory-service 192.168.1.124:852 register finished
2024-03-08 15:49:27,411 INFO (DocumentationPluginsBootstrapper.java:160)- Context refreshed
2024-03-08 15:49:27,426 INFO (DocumentationPluginsBootstrapper.java:163)- Found 1 custom documentation plugin(s)
2024-03-08 15:49:27,469 INFO (ApiListingReferenceScanner.java:41)- Scanning for api listing references
2024-03-08 15:49:28,084 INFO (HostReactor.java:232)- new ips(1) service: DEFAULT_GROUP@@inventory-service@@DEFAULT -> [{"instanceId":"192.168.1.124#852#DEFAULT#DEFAULT_GROUP@@inventory-service","ip":"192.168.1.124","port":852,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@inventory-service","metadata":{"preserved.register.source":"SPRING_CLOUD"},"instanceHeartBeatInterval":5000,"ipDeleteTimeout":30000,"instanceHeartBeatTimeOut":15000}]
2024-03-08 15:49:28,173 INFO (PushReceiver.java:97)- received push data: {"type":"dom","data":"{\"hosts\":[{\"ip\":\"192.168.1.124\",\"port\":852,\"valid\":true,\"healthy\":true,\"marked\":false,\"instanceId\":\"192.168.1.124#852#DEFAULT#DEFAULT_GROUP@@inventory-service\",\"metadata\":{\"preserved.register.source\":\"SPRING_CLOUD\"},\"enabled\":true,\"weight\":1.0,\"clusterName\":\"DEFAULT\",\"serviceName\":\"DEFAULT_GROUP@@inventory-service\",\"ephemeral\":true}],\"dom\":\"DEFAULT_GROUP@@inventory-service\",\"name\":\"DEFAULT_GROUP@@inventory-service\",\"cacheMillis\":10000,\"lastRefTime\":1709884186725,\"checksum\":\"81797888ad548c056e415bbb09517308\",\"useSpecifiedURL\":false,\"clusters\":\"DEFAULT\",\"env\":\"\",\"metadata\":{}}","lastRefTime":968262557647428} from /192.168.2.241
2024-03-08 15:49:28,331 INFO (HostReactor.java:271)- current ips:(1) service: DEFAULT_GROUP@@inventory-service@@DEFAULT -> [{"instanceId":"192.168.1.124#852#DEFAULT#DEFAULT_GROUP@@inventory-service","ip":"192.168.1.124","port":852,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@inventory-service","metadata":{"preserved.register.source":"SPRING_CLOUD"},"instanceHeartBeatInterval":5000,"ipDeleteTimeout":30000,"instanceHeartBeatTimeOut":15000}]
2024-03-08 15:49:28,453 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: downloadTemplateExcelUsingGET_1
2024-03-08 15:49:28,481 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: exportToExcelUsingGET_1
2024-03-08 15:49:28,499 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: importByExcelUsingPOST_1
2024-03-08 15:49:28,576 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: downloadTemplateExcelUsingGET_2
2024-03-08 15:49:28,623 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: exportToExcelUsingGET_2
2024-03-08 15:49:28,654 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: importByExcelUsingPOST_2
2024-03-08 15:49:28,686 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: downloadTemplateExcelUsingGET_3
2024-03-08 15:49:28,706 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: exportToExcelUsingGET_3
2024-03-08 15:49:28,720 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: importByExcelUsingPOST_3
2024-03-08 15:49:28,805 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: downloadTemplateExcelUsingGET_4
2024-03-08 15:49:28,829 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: exportToExcelUsingGET_4
2024-03-08 15:49:28,840 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: importByExcelUsingPOST_4
2024-03-08 15:49:28,876 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: downloadTemplateExcelUsingGET_5
2024-03-08 15:49:28,897 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: exportToExcelUsingGET_5
2024-03-08 15:49:28,903 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: importByExcelUsingPOST_5
2024-03-08 15:49:28,935 INFO (SchedulerFactoryBean.java:732)- Will start Quartz Scheduler [schedulerFactoryBean] in 1 seconds
2024-03-08 15:49:28,940 INFO (DeferredRepositoryInitializationListener.java:49)- Triggering deferred initialization of Spring Data repositories…
2024-03-08 15:49:28,941 INFO (DeferredRepositoryInitializationListener.java:53)- Spring Data repositories initialized!
2024-03-08 15:49:29,133 INFO (SysInit.java:52)- step1 ---> 开始同步接种人员信息到Redis
2024-03-08 15:49:29,356 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, sex, age, mobile, id_number, open_id, address, work_unit, person_type, dose_status, firstDose_id, firstDose_name, firstDose_unit, firstDose_time, latestDose_id, latestDose_name, latestDose_unit, latestDose_time, create_time, update_time from vaccination_person 
2024-03-08 15:49:30,011 INFO (SchedulerFactoryBean.java:748)- Starting Quartz Scheduler now, after delay of 1 seconds
2024-03-08 15:49:30,028 INFO (QuartzScheduler.java:547)- Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2024-03-08 15:49:32,992 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2024-03-08 15:49:33,203 INFO (SQLLogger.java:73)- Logic SQL: select id, name, sex, age, mobile, id_number, open_id, address, work_unit, person_type, dose_status, firstDose_id, firstDose_name, firstDose_unit, firstDose_time, latestDose_id, latestDose_name, latestDose_unit, latestDose_time, create_time, update_time from vaccination_person
2024-03-08 15:49:33,204 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:49:33,432 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 25
2024-03-08 15:49:34,819 INFO (SysInit.java:60)- step2 ---> 开始同步接种地点信息到Redis
2024-03-08 15:49:34,822 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, address_code, org_id, org_name, contact_name, contact_mobile, status, order_num, create_time from vaccination_site 
2024-03-08 15:49:34,831 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2024-03-08 15:49:34,833 INFO (SQLLogger.java:73)- Logic SQL: select id, name, address_code, org_id, org_name, contact_name, contact_mobile, status, order_num, create_time from vaccination_site
2024-03-08 15:49:34,833 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:49:34,837 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:49:34,844 INFO (SysInit.java:69)- step3 ---> 开始同步疫苗信息到Redis
2024-03-08 15:49:34,849 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, org_id, org_name, name, manufacturer, batch_number, total_dose, dose_interval, stock, oos_url, order_num, status, create_time from vaccine 
2024-03-08 15:49:34,853 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2024-03-08 15:49:34,854 INFO (SQLLogger.java:73)- Logic SQL: select id, org_id, org_name, name, manufacturer, batch_number, total_dose, dose_interval, stock, oos_url, order_num, status, create_time from vaccine
2024-03-08 15:49:34,854 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:49:34,861 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:49:34,896 INFO (StartupInfoLogger.java:61)- Started InventoryApplication in 71.703 seconds (JVM running for 74.532)
2024-03-08 15:49:34,915 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] seata.yml+common+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 15:49:34,916 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=seata.yml, group=common, cnt=1
2024-03-08 15:49:34,916 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] canal.yml+common+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 15:49:34,916 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=canal.yml, group=common, cnt=1
2024-03-08 15:49:34,920 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] mongo.yml+common+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 15:49:34,920 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=mongo.yml, group=common, cnt=1
2024-03-08 15:49:34,921 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] inventory-service.yml+inventory-service+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 15:49:34,922 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=inventory-service.yml, group=inventory-service, cnt=1
2024-03-08 15:49:34,922 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] inventory-service+inventory-service+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 15:49:34,923 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=inventory-service, group=inventory-service, cnt=1
2024-03-08 15:49:34,923 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] inventory-service-common.yml+inventory-service+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 15:49:34,923 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=inventory-service-common.yml, group=inventory-service, cnt=1
2024-03-08 15:49:34,924 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] redis.yml+common+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 15:49:34,924 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=redis.yml, group=common, cnt=1
2024-03-08 15:49:34,925 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] jwt.yml+common+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 15:49:34,925 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=jwt.yml, group=common, cnt=1
2024-03-08 15:49:34,928 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] minio.yml+common+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 15:49:34,929 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=minio.yml, group=common, cnt=1
2024-03-08 15:49:34,930 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] inventory-service-dev.yml+inventory-service+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 15:49:34,930 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=inventory-service-dev.yml, group=inventory-service, cnt=1
2024-03-08 15:49:37,445 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-03-08 15:49:37,446 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2024-03-08 15:49:37,490 INFO (FrameworkServlet.java:547)- Completed initialization in 44 ms
2024-03-08 15:49:37,687 INFO (SLF4JLogger.java:71)- Opened connection [connectionId{localValue:2, serverValue:1481}] to 192.168.2.241:27017
2024-03-08 15:49:51,715 INFO (NettyClientChannelManager.java:99)- will connect to 192.168.2.241:8091
2024-03-08 15:49:51,717 INFO (NettyPoolableFactory.java:56)- NettyPool create channel to transactionRole:TMROLE,address:192.168.2.241:8091,msg:< RegisterTMRequest{applicationId='inventory-service', transactionServiceGroup='my_test_tx_group'} >
2024-03-08 15:49:51,728 INFO (TmNettyRemotingClient.java:138)- register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x3ae5af6f, L:/192.168.2.230:26525 - R:/192.168.2.241:8091]
2024-03-08 15:49:51,729 INFO (NettyPoolableFactory.java:81)- register success, cost 8 ms, version:1.3.0,role:TMROLE,channel:[id: 0x3ae5af6f, L:/192.168.2.230:26525 - R:/192.168.2.241:8091]
2024-03-08 15:56:10,136 INFO (VaccineReleaseServiceImpl.java:402)- Inventory--------------> threadId:199,threadName:http-nio-852-exec-2,Seata_XID:192.168.2.241:8091:509395648768909312,Seata_branchType:AT
2024-03-08 15:56:10,165 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ? 
2024-03-08 15:56:10,198 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Long)
2024-03-08 15:56:10,400 INFO (SQLLogger.java:73)- Logic SQL: select id, name, site_id, site_name, dose, amount, dock_amount, useup_time, version, start_time, vaccine_id, vaccine_name, vaccine_batch, manufacturer, dose_time, time_period, timePeriod_name, contact_name, contact_mobile, status, create_time from vaccine_release where id = ?
2024-03-08 15:56:10,400 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:56:10,407 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 15:56:10,409 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?; 
2024-03-08 15:56:10,439 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1(Integer), 1(Long), 1(Integer), 517(Integer)
2024-03-08 15:56:10,523 INFO (SQLLogger.java:73)- Logic SQL: SELECT * FROM vaccine_release LIMIT 1
2024-03-08 15:56:10,523 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:56:10,568 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE id = ? AND dock_amount - ? >= 0 AND version = ? FOR UPDATE
2024-03-08 15:56:10,569 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:56:10,582 INFO (SQLLogger.java:73)- Logic SQL: update vaccine_release set dock_amount = dock_amount-?,version = version+1 where id = ? and dock_amount-? >= 0 and version = ?;
2024-03-08 15:56:10,582 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:56:10,609 INFO (SQLLogger.java:73)- Logic SQL: SELECT id, dock_amount, version FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:56:10,610 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:56:11,736 INFO (SQLLogger.java:73)- Logic SQL: INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))
2024-03-08 15:56:11,736 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:56:12,104 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2024-03-08 15:56:18,061 INFO (RmBranchRollbackProcessor.java:56)- rm handle branch rollback process:xid=192.168.2.241:8091:509395648768909312,branchId=509395661880303617,branchType=AT,resourceId=jdbc:mysql://192.168.2.241:6033/vapp_inventory,applicationData=null
2024-03-08 15:56:18,067 INFO (AbstractRMHandler.java:123)- Branch Rollbacking: 192.168.2.241:8091:509395648768909312 509395661880303617 jdbc:mysql://192.168.2.241:6033/vapp_inventory
2024-03-08 15:56:18,075 INFO (SQLLogger.java:73)- Logic SQL: SELECT * FROM undo_log WHERE branch_id = ? AND xid = ? FOR UPDATE
2024-03-08 15:56:18,076 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:56:18,135 INFO (SQLLogger.java:73)- Logic SQL: SELECT * FROM vaccine_release WHERE  (id ) in (  (?)  )
2024-03-08 15:56:18,136 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:56:18,141 INFO (SQLLogger.java:73)- Logic SQL: UPDATE vaccine_release SET dock_amount = ?, version = ? WHERE id = ?  
2024-03-08 15:56:18,141 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:56:18,157 INFO (SQLLogger.java:73)- Logic SQL: DELETE FROM undo_log WHERE branch_id = ? AND xid = ?
2024-03-08 15:56:18,157 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 15:56:18,249 INFO (AbstractUndoLogManager.java:312)- xid 192.168.2.241:8091:509395648768909312 branch 509395661880303617, undo_log deleted with GlobalFinished
2024-03-08 15:56:18,251 INFO (AbstractRMHandler.java:131)- Branch Rollbacked result: PhaseTwo_Rollbacked
2024-03-08 16:00:02,196 WARN (HttpClientBeanHolder.java:108)- [HttpClientBeanHolder] Start destroying common HttpClient
2024-03-08 16:00:02,197 INFO (QuartzScheduler.java:585)- Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2024-03-08 16:00:02,197 WARN (HttpClientBeanHolder.java:114)- [HttpClientBeanHolder] Destruction of the end
2024-03-08 16:00:02,197 WARN (NotifyCenter.java:145)- [NotifyCenter] Start destroying Publisher
2024-03-08 16:00:02,198 WARN (NotifyCenter.java:162)- [NotifyCenter] Destruction of the end
2024-03-08 16:00:02,509 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'Nacos-Watch-Task-Scheduler'
2024-03-08 16:00:02,522 ERROR (AbstractCanalClient.java:85)- canal client 异常
com.alibaba.otter.canal.protocol.exception.CanalClientException: java.nio.channels.ClosedByInterruptException
	at com.alibaba.otter.canal.client.impl.SimpleCanalConnector.getWithoutAck(SimpleCanalConnector.java:316)
	at top.javatool.canal.client.client.AbstractCanalClient.process(AbstractCanalClient.java:76)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedByInterruptException: null
	at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199)
	at java.base/sun.nio.ch.SocketChannelImpl.endRead(SocketChannelImpl.java:334)
	at java.base/sun.nio.ch.SocketChannelImpl.pollRead(SocketChannelImpl.java:970)
	at java.base/sun.nio.ch.SocketAdaptor$SocketInputStream.read(SocketAdaptor.java:209)
	at java.base/sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:101)
	at java.base/java.nio.channels.Channels$ReadableByteChannelImpl.read(Channels.java:388)
	at com.alibaba.otter.canal.client.impl.SimpleCanalConnector.read(SimpleCanalConnector.java:402)
	at com.alibaba.otter.canal.client.impl.SimpleCanalConnector.readNextPacket(SimpleCanalConnector.java:392)
	at com.alibaba.otter.canal.client.impl.SimpleCanalConnector.readNextPacket(SimpleCanalConnector.java:376)
	at com.alibaba.otter.canal.client.impl.SimpleCanalConnector.receiveMessages(SimpleCanalConnector.java:321)
	at com.alibaba.otter.canal.client.impl.SimpleCanalConnector.getWithoutAck(SimpleCanalConnector.java:314)
	... 2 common frames omitted
2024-03-08 16:00:02,526 INFO (NacosServiceRegistry.java:94)- De-registering from Nacos Server now...
2024-03-08 16:00:02,526 INFO (BeatReactor.java:101)- [BEAT] removing beat: DEFAULT_GROUP@@inventory-service:192.168.1.124:852 from beat map.
2024-03-08 16:00:02,527 INFO (NamingProxy.java:260)- [DEREGISTER-SERVICE] a4e3d3db-c95f-49ed-82fa-92d05a9d6673 deregistering service DEFAULT_GROUP@@inventory-service with instance: Instance{instanceId='null', ip='192.168.1.124', port=852, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={}}
2024-03-08 16:00:02,529 INFO (NacosServiceRegistry.java:114)- De-registration finished.
2024-03-08 16:00:02,530 INFO (BeatReactor.java:147)- com.alibaba.nacos.client.naming.beat.BeatReactor do shutdown begin
2024-03-08 16:00:03,529 INFO (PushReceiver.java:97)- received push data: {"type":"dom","data":"{\"dom\":\"DEFAULT_GROUP@@inventory-service\",\"name\":\"DEFAULT_GROUP@@inventory-service\",\"cacheMillis\":10000,\"lastRefTime\":1709884822216,\"checksum\":\"c1d97f833d1ec428feb5de55e1b010d9\",\"useSpecifiedURL\":false,\"clusters\":\"DEFAULT\",\"env\":\"\",\"hosts\":[],\"metadata\":{}}","lastRefTime":968898048838190} from /192.168.2.241
2024-03-08 16:00:03,531 INFO (HostReactor.java:238)- removed ips(1) service: DEFAULT_GROUP@@inventory-service@@DEFAULT -> [{"instanceId":"192.168.1.124#852#DEFAULT#DEFAULT_GROUP@@inventory-service","ip":"192.168.1.124","port":852,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@inventory-service","metadata":{"preserved.register.source":"SPRING_CLOUD"},"instanceHeartBeatInterval":5000,"ipDeleteTimeout":30000,"instanceHeartBeatTimeOut":15000}]
2024-03-08 16:00:03,532 INFO (HostReactor.java:271)- current ips:(0) service: DEFAULT_GROUP@@inventory-service@@DEFAULT -> []
2024-03-08 16:00:05,007 INFO (BeatReactor.java:149)- com.alibaba.nacos.client.naming.beat.BeatReactor do shutdown stop
2024-03-08 16:00:05,013 INFO (HostReactor.java:413)- com.alibaba.nacos.client.naming.core.HostReactor do shutdown begin
2024-03-08 16:00:09,537 INFO (PushReceiver.java:132)- com.alibaba.nacos.client.naming.core.PushReceiver do shutdown begin
2024-03-08 16:00:12,562 INFO (PushReceiver.java:136)- com.alibaba.nacos.client.naming.core.PushReceiver do shutdown stop
2024-03-08 16:00:12,565 INFO (FailoverReactor.java:132)- com.alibaba.nacos.client.naming.backups.FailoverReactor do shutdown begin
2024-03-08 16:00:12,565 INFO (FailoverReactor.java:134)- com.alibaba.nacos.client.naming.backups.FailoverReactor do shutdown stop
2024-03-08 16:00:12,565 INFO (HostReactor.java:418)- com.alibaba.nacos.client.naming.core.HostReactor do shutdown stop
2024-03-08 16:00:12,566 INFO (NamingProxy.java:719)- com.alibaba.nacos.client.naming.net.NamingProxy do shutdown begin
2024-03-08 16:00:12,566 WARN (NamingHttpClientManager.java:72)- [NamingHttpClientManager] Start destroying NacosRestTemplate
2024-03-08 16:00:12,566 WARN (NamingHttpClientManager.java:79)- [NamingHttpClientManager] Destruction of the end
2024-03-08 16:00:12,567 INFO (CredentialWatcher.java:105)- [null] CredentialWatcher is stopped
2024-03-08 16:00:12,567 INFO (CredentialService.java:98)- [null] CredentialService is freed
2024-03-08 16:00:12,567 INFO (NamingProxy.java:723)- com.alibaba.nacos.client.naming.net.NamingProxy do shutdown stop
2024-03-08 16:00:12,569 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'asyncExecutor'
2024-03-08 16:00:12,572 INFO (EmbedServer.java:91)- >>>>>>>>>>> xxl-job remoting server stop.
2024-03-08 16:00:12,587 INFO (ExecutorRegistryThread.java:87)- >>>>>>>>>>> xxl-job registry-remove success, registryParam:RegistryParam{registryGroup='EXECUTOR', registryKey='inventory-service', registryValue='http://192.168.2.230:9998/'}, registryResult:ReturnT [code=200, msg=null, content=null]
2024-03-08 16:00:12,587 INFO (ExecutorRegistryThread.java:105)- >>>>>>>>>>> xxl-job, executor registry thread destroy.
2024-03-08 16:00:12,588 INFO (EmbedServer.java:117)- >>>>>>>>>>> xxl-job remoting server destroy success.
2024-03-08 16:00:12,589 INFO (JobLogFileCleanThread.java:99)- >>>>>>>>>>> xxl-job, executor JobLogFileCleanThread thread destroy.
2024-03-08 16:00:12,589 INFO (TriggerCallbackThread.java:98)- >>>>>>>>>>> xxl-job, executor callback thread destroy.
2024-03-08 16:00:12,590 INFO (TriggerCallbackThread.java:128)- >>>>>>>>>>> xxl-job, executor retry callback thread destroy.
2024-03-08 16:00:12,590 WARN (DisposableBeanAdapter.java:349)- Destroy method 'close' on bean with name 'nacosServiceRegistry' threw an exception: java.lang.NullPointerException
2024-03-08 16:00:12,593 INFO (QuartzScheduler.java:666)- Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2024-03-08 16:00:12,593 INFO (QuartzScheduler.java:585)- Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2024-03-08 16:00:12,593 INFO (QuartzScheduler.java:740)- Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2024-03-08 16:00:12,594 INFO (SchedulerFactoryBean.java:845)- Shutting down Quartz Scheduler
2024-03-08 16:00:12,598 INFO (ShutdownManager.java:29)- ====关闭后台任务任务线程池====
2024-03-08 16:00:12,600 WARN (InitDestroyAnnotationBeanPostProcessor.java:185)- Destroy method on bean with name 'shutdownManager' threw an exception: java.lang.ExceptionInInitializerError
2024-03-08 16:00:12,606 INFO (SLF4JLogger.java:71)- Closed connection [connectionId{localValue:2, serverValue:1481}] to 192.168.2.241:27017 because the pool has been closed.
2024-03-08 16:00:12,676 INFO (AbstractEntityManagerFactoryBean.java:598)- Closing JPA EntityManagerFactory for persistence unit 'default'
2024-03-08 16:00:12,679 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'threadPoolTaskExecutor'
2024-03-08 16:00:12,680 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'executor'
2024-03-08 16:00:12,681 INFO (HikariDataSource.java:350)- vapp-inventory-pool - Shutdown initiated...
2024-03-08 16:00:12,684 INFO (HikariDataSource.java:352)- vapp-inventory-pool - Shutdown completed.
2024-03-08 16:00:12,685 INFO (AbstractNettyRemotingClient.java:384)- channel inactive: [id: 0x3ae5af6f, L:/192.168.2.230:26525 ! R:/192.168.2.241:8091]
2024-03-08 16:00:12,685 INFO (NettyClientChannelManager.java:124)- return to pool, rm channel:[id: 0x3ae5af6f, L:/192.168.2.230:26525 ! R:/192.168.2.241:8091]
2024-03-08 16:00:12,685 INFO (NettyPoolableFactory.java:133)- channel valid false,channel:[id: 0x3ae5af6f, L:/192.168.2.230:26525 ! R:/192.168.2.241:8091]
2024-03-08 16:00:12,685 INFO (NettyPoolableFactory.java:120)- will destroy channel:[id: 0x3ae5af6f, L:/192.168.2.230:26525 ! R:/192.168.2.241:8091]
2024-03-08 16:00:12,686 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x3ae5af6f, L:/192.168.2.230:26525 ! R:/192.168.2.241:8091]) will closed
2024-03-08 16:00:12,686 INFO (AbstractNettyRemotingClient.java:434)- ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x3ae5af6f, L:/192.168.2.230:26525 ! R:/192.168.2.241:8091]) will closed
2024-03-08 16:01:48,953 WARN (NacosPropertySourceBuilder.java:87)- Ignore the empty nacos configuration and get it based on dataId[inventory-service] & group[inventory-service]
2024-03-08 16:01:48,962 WARN (NacosPropertySourceBuilder.java:87)- Ignore the empty nacos configuration and get it based on dataId[inventory-service-common.yml] & group[inventory-service]
2024-03-08 16:01:48,965 WARN (NacosPropertySourceBuilder.java:87)- Ignore the empty nacos configuration and get it based on dataId[inventory-service-dev.yml] & group[inventory-service]
2024-03-08 16:01:48,966 INFO (PropertySourceBootstrapConfiguration.java:112)- Located property source: [BootstrapPropertySource {name='bootstrapProperties-inventory-service-dev.yml,inventory-service'}, BootstrapPropertySource {name='bootstrapProperties-inventory-service-common.yml,inventory-service'}, BootstrapPropertySource {name='bootstrapProperties-inventory-service.yml,inventory-service'}, BootstrapPropertySource {name='bootstrapProperties-inventory-service,inventory-service'}, BootstrapPropertySource {name='bootstrapProperties-canal.yml,common'}, BootstrapPropertySource {name='bootstrapProperties-seata.yml,common'}, BootstrapPropertySource {name='bootstrapProperties-minio.yml,common'}, BootstrapPropertySource {name='bootstrapProperties-jwt.yml,common'}, BootstrapPropertySource {name='bootstrapProperties-mongo.yml,common'}, BootstrapPropertySource {name='bootstrapProperties-redis.yml,common'}]
2024-03-08 16:01:53,875 INFO (SpringApplication.java:655)- The following profiles are active: common,dev
2024-03-08 16:01:59,469 INFO (RepositoryConfigurationDelegate.java:249)- Multiple Spring Data modules found, entering strict repository configuration mode!
2024-03-08 16:01:59,470 INFO (RepositoryConfigurationDelegate.java:127)- Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2024-03-08 16:01:59,544 INFO (RepositoryConfigurationDelegate.java:187)- Finished Spring Data repository scanning in 58ms. Found 0 JPA repository interfaces.
2024-03-08 16:01:59,554 INFO (RepositoryConfigurationDelegate.java:249)- Multiple Spring Data modules found, entering strict repository configuration mode!
2024-03-08 16:01:59,554 INFO (RepositoryConfigurationDelegate.java:127)- Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-03-08 16:01:59,583 INFO (RepositoryConfigurationDelegate.java:187)- Finished Spring Data repository scanning in 28ms. Found 0 MongoDB repository interfaces.
2024-03-08 16:01:59,596 INFO (RepositoryConfigurationDelegate.java:249)- Multiple Spring Data modules found, entering strict repository configuration mode!
2024-03-08 16:01:59,597 INFO (RepositoryConfigurationDelegate.java:127)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-03-08 16:01:59,642 INFO (RepositoryConfigurationDelegate.java:187)- Finished Spring Data repository scanning in 33ms. Found 0 Redis repository interfaces.
2024-03-08 16:01:59,925 WARN (EndpointId.java:155)- Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2024-03-08 16:02:01,129 INFO (GenericScope.java:295)- BeanFactory id=4708a2fb-e3a9-32e2-9916-a0464bf80ddc
2024-03-08 16:02:01,457 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$5e7b3578] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:02:01,489 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:02:01,555 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:02:01,570 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:02:01,573 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:02:01,575 INFO (SeataAutoConfiguration.java:65)- Automatically configure Seata
2024-03-08 16:02:01,698 INFO (ConfigurationFactory.java:69)- load Configuration from :Spring Configuration
2024-03-08 16:02:01,717 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:02:01,787 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:02:01,791 INFO (NacosConfiguration.java:232)- Nacos check auth with userName/password.
2024-03-08 16:02:02,197 INFO (GlobalTransactionScanner.java:208)- Initializing Global Transaction Clients ... 
2024-03-08 16:02:02,197 WARN (GlobalTransactionScanner.java:211)- the default value of seata.tx-service-group: my_test_tx_group has already changed to default_tx_group since Seata 1.5, please change your default configuration as soon as possible and we don't recommend you to use default tx-service-group's value provided by seata
2024-03-08 16:02:02,376 INFO (NettyClientBootstrap.java:147)- NettyClientBootstrap has started
2024-03-08 16:02:02,385 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'registryProperties' of type [io.seata.spring.boot.autoconfigure.properties.registry.RegistryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:02:02,405 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-391f1070-7fb6-4c1b-bcac-b495d455a2a2] [subscribe] service.vgroupMapping.my_test_tx_group+SEATA_GROUP+391f1070-7fb6-4c1b-bcac-b495d455a2a2
2024-03-08 16:02:02,406 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-391f1070-7fb6-4c1b-bcac-b495d455a2a2] [add-listener] ok, tenant=391f1070-7fb6-4c1b-bcac-b495d455a2a2, dataId=service.vgroupMapping.my_test_tx_group, group=SEATA_GROUP, cnt=1
2024-03-08 16:02:02,418 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'registryNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.registry.RegistryNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:02:02,424 INFO (InitUtils.java:84)- initializer namespace from System Property :null
2024-03-08 16:02:02,733 INFO (HostReactor.java:232)- new ips(1) service: SEATA_GROUP@@seata-server@@default -> [{"instanceId":"192.168.2.241#8091#default#SEATA_GROUP@@seata-server","ip":"192.168.2.241","port":8091,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"default","serviceName":"SEATA_GROUP@@seata-server","metadata":{},"instanceHeartBeatTimeOut":15000,"ipDeleteTimeout":30000,"instanceIdGenerator":"simple","instanceHeartBeatInterval":5000}]
2024-03-08 16:02:02,737 INFO (HostReactor.java:271)- current ips:(1) service: SEATA_GROUP@@seata-server@@default -> [{"instanceId":"192.168.2.241#8091#default#SEATA_GROUP@@seata-server","ip":"192.168.2.241","port":8091,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"default","serviceName":"SEATA_GROUP@@seata-server","metadata":{},"instanceHeartBeatTimeOut":15000,"ipDeleteTimeout":30000,"instanceIdGenerator":"simple","instanceHeartBeatInterval":5000}]
2024-03-08 16:02:02,743 INFO (NettyClientChannelManager.java:108)- will connect to 192.168.2.241:8091
2024-03-08 16:02:03,070 INFO (NettyPoolableFactory.java:56)- NettyPool create channel to transactionRole:TMROLE,address:192.168.2.241:8091,msg:< RegisterTMRequest{applicationId='inventory-service', transactionServiceGroup='my_test_tx_group'} >
2024-03-08 16:02:03,758 INFO (TmNettyRemotingClient.java:209)- register TM success. client version:1.5.0, server version:1.3.0,channel:[id: 0x39b176bd, L:/192.168.2.230:27484 - R:/192.168.2.241:8091]
2024-03-08 16:02:03,764 INFO (NettyPoolableFactory.java:81)- register success, cost 95 ms, version:1.3.0,role:TMROLE,channel:[id: 0x39b176bd, L:/192.168.2.230:27484 - R:/192.168.2.241:8091]
2024-03-08 16:02:03,765 INFO (GlobalTransactionScanner.java:222)- Transaction Manager Client is initialized. applicationId[inventory-service] txServiceGroup[my_test_tx_group]
2024-03-08 16:02:03,792 INFO (AsyncWorker.java:72)- Async Commit Buffer Limit: 10000
2024-03-08 16:02:03,794 INFO (ResourceManagerXA.java:60)- ResourceManagerXA init ...
2024-03-08 16:02:03,814 INFO (NettyClientBootstrap.java:147)- NettyClientBootstrap has started
2024-03-08 16:02:03,814 INFO (GlobalTransactionScanner.java:227)- Resource Manager is initialized. applicationId[inventory-service] txServiceGroup[my_test_tx_group]
2024-03-08 16:02:03,815 INFO (GlobalTransactionScanner.java:231)- Global Transaction Clients are initialized. 
2024-03-08 16:02:03,823 WARN (AbstractApplicationContext.java:559)- Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'seataAutoDataSourceProxyCreator' defined in class path resource [io/seata/spring/boot/autoconfigure/SeataAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [io.seata.spring.annotation.datasource.SeataAutoDataSourceProxyCreator]: Factory method 'seataAutoDataSourceProxyCreator' threw exception; nested exception is java.lang.NoSuchMethodError: io.seata.spring.annotation.datasource.SeataAutoDataSourceProxyCreator.<init>(Z[Ljava/lang/String;)V
2024-03-08 16:02:03,848 INFO (ConditionEvaluationReportLoggingListener.java:136)- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-03-08 16:02:03,859 ERROR (LoggingFailureAnalysisReporter.java:40)- 

***************************
APPLICATION FAILED TO START
***************************

Description:

An attempt was made to call a method that does not exist. The attempt was made from the following location:

    io.seata.spring.boot.autoconfigure.SeataAutoConfiguration.seataAutoDataSourceProxyCreator(SeataAutoConfiguration.java:74)

The following method did not exist:

    io.seata.spring.annotation.datasource.SeataAutoDataSourceProxyCreator.<init>(Z[Ljava/lang/String;)V

The method's class, io.seata.spring.annotation.datasource.SeataAutoDataSourceProxyCreator, is available from the following locations:

    jar:file:/C:/Users/Administrator/.m2/repository/io/seata/seata-all/1.5.0/seata-all-1.5.0.jar!/io/seata/spring/annotation/datasource/SeataAutoDataSourceProxyCreator.class

The class hierarchy was loaded from the following locations:

    io.seata.spring.annotation.datasource.SeataAutoDataSourceProxyCreator: file:/C:/Users/Administrator/.m2/repository/io/seata/seata-all/1.5.0/seata-all-1.5.0.jar
    org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: file:/C:/Users/Administrator/.m2/repository/org/springframework/spring-aop/5.2.8.RELEASE/spring-aop-5.2.8.RELEASE.jar
    org.springframework.aop.framework.ProxyProcessorSupport: file:/C:/Users/Administrator/.m2/repository/org/springframework/spring-aop/5.2.8.RELEASE/spring-aop-5.2.8.RELEASE.jar
    org.springframework.aop.framework.ProxyConfig: file:/C:/Users/Administrator/.m2/repository/org/springframework/spring-aop/5.2.8.RELEASE/spring-aop-5.2.8.RELEASE.jar


Action:

Correct the classpath of your application so that it contains a single, compatible version of io.seata.spring.annotation.datasource.SeataAutoDataSourceProxyCreator

2024-03-08 16:02:03,860 WARN (NotifyCenter.java:145)- [NotifyCenter] Start destroying Publisher
2024-03-08 16:02:03,861 WARN (HttpClientBeanHolder.java:108)- [HttpClientBeanHolder] Start destroying common HttpClient
2024-03-08 16:02:03,861 WARN (NotifyCenter.java:162)- [NotifyCenter] Destruction of the end
2024-03-08 16:02:03,862 WARN (HttpClientBeanHolder.java:114)- [HttpClientBeanHolder] Destruction of the end
2024-03-08 16:11:33,042 WARN (NacosPropertySourceBuilder.java:87)- Ignore the empty nacos configuration and get it based on dataId[inventory-service] & group[inventory-service]
2024-03-08 16:11:33,055 WARN (NacosPropertySourceBuilder.java:87)- Ignore the empty nacos configuration and get it based on dataId[inventory-service-common.yml] & group[inventory-service]
2024-03-08 16:11:33,058 WARN (NacosPropertySourceBuilder.java:87)- Ignore the empty nacos configuration and get it based on dataId[inventory-service-dev.yml] & group[inventory-service]
2024-03-08 16:11:33,060 INFO (PropertySourceBootstrapConfiguration.java:112)- Located property source: [BootstrapPropertySource {name='bootstrapProperties-inventory-service-dev.yml,inventory-service'}, BootstrapPropertySource {name='bootstrapProperties-inventory-service-common.yml,inventory-service'}, BootstrapPropertySource {name='bootstrapProperties-inventory-service.yml,inventory-service'}, BootstrapPropertySource {name='bootstrapProperties-inventory-service,inventory-service'}, BootstrapPropertySource {name='bootstrapProperties-canal.yml,common'}, BootstrapPropertySource {name='bootstrapProperties-seata.yml,common'}, BootstrapPropertySource {name='bootstrapProperties-minio.yml,common'}, BootstrapPropertySource {name='bootstrapProperties-jwt.yml,common'}, BootstrapPropertySource {name='bootstrapProperties-mongo.yml,common'}, BootstrapPropertySource {name='bootstrapProperties-redis.yml,common'}]
2024-03-08 16:11:38,124 INFO (SpringApplication.java:655)- The following profiles are active: common,dev
2024-03-08 16:11:44,309 INFO (RepositoryConfigurationDelegate.java:249)- Multiple Spring Data modules found, entering strict repository configuration mode!
2024-03-08 16:11:44,310 INFO (RepositoryConfigurationDelegate.java:127)- Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2024-03-08 16:11:44,404 INFO (RepositoryConfigurationDelegate.java:187)- Finished Spring Data repository scanning in 78ms. Found 0 JPA repository interfaces.
2024-03-08 16:11:44,419 INFO (RepositoryConfigurationDelegate.java:249)- Multiple Spring Data modules found, entering strict repository configuration mode!
2024-03-08 16:11:44,419 INFO (RepositoryConfigurationDelegate.java:127)- Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-03-08 16:11:44,451 INFO (RepositoryConfigurationDelegate.java:187)- Finished Spring Data repository scanning in 32ms. Found 0 MongoDB repository interfaces.
2024-03-08 16:11:44,469 INFO (RepositoryConfigurationDelegate.java:249)- Multiple Spring Data modules found, entering strict repository configuration mode!
2024-03-08 16:11:44,475 INFO (RepositoryConfigurationDelegate.java:127)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-03-08 16:11:44,524 INFO (RepositoryConfigurationDelegate.java:187)- Finished Spring Data repository scanning in 41ms. Found 0 Redis repository interfaces.
2024-03-08 16:11:44,811 WARN (EndpointId.java:155)- Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2024-03-08 16:11:45,239 INFO (GenericScope.java:295)- BeanFactory id=e5934a13-875f-376b-b71b-32b701d64d39
2024-03-08 16:11:45,324 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$eb49d36e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:45,349 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:45,417 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:45,430 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:45,438 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:45,441 INFO (SeataAutoConfiguration.java:65)- Automatically configure Seata
2024-03-08 16:11:45,584 INFO (ConfigurationFactory.java:65)- load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2024-03-08 16:11:45,597 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:45,618 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:46,058 INFO (GlobalTransactionScanner.java:164)- Initializing Global Transaction Clients ... 
2024-03-08 16:11:46,265 INFO (NettyClientBootstrap.java:147)- NettyClientBootstrap has started
2024-03-08 16:11:46,265 INFO (GlobalTransactionScanner.java:172)- Transaction Manager Client is initialized. applicationId[inventory-service] txServiceGroup[my_test_tx_group]
2024-03-08 16:11:46,285 INFO (AsyncWorker.java:125)- Async Commit Buffer Limit: 10000
2024-03-08 16:11:46,286 INFO (ResourceManagerXA.java:40)- ResourceManagerXA init ...
2024-03-08 16:11:46,297 INFO (NettyClientBootstrap.java:147)- NettyClientBootstrap has started
2024-03-08 16:11:46,298 INFO (GlobalTransactionScanner.java:177)- Resource Manager is initialized. applicationId[inventory-service] txServiceGroup[my_test_tx_group]
2024-03-08 16:11:46,298 INFO (GlobalTransactionScanner.java:181)- Global Transaction Clients are initialized. 
2024-03-08 16:11:47,174 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'shiroConfig' of type [com.jsxa.vapp.common.shiro.ShiroConfig$$EnhancerBySpringCGLIB$$c1b9803e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:48,588 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'jwtTokenUtil' of type [com.jsxa.vapp.common.utils.JwtTokenUtil] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:49,206 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:49,353 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$54642642] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:49,366 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:49,529 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:49,614 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:49,661 INFO (SeataAutoDataSourceProxyCreator.java:45)- Auto proxy of [dataSource]
2024-03-08 16:11:49,774 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:49,899 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:49,923 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:50,019 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:50,033 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'userMapper' of type [com.sun.proxy.$Proxy141] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:50,084 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:50,086 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy142] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:50,098 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:50,099 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'roleMapper' of type [com.sun.proxy.$Proxy143] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:50,119 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'permissionMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:50,122 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'permissionMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:50,139 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'rolePermissionMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:50,141 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'rolePermissionMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:50,147 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'shiroRealm' of type [com.jsxa.vapp.common.shiro.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:50,175 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:50,222 INFO (PostProcessorRegistrationDelegate.java:335)- Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-08 16:11:50,409 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'executor'
2024-03-08 16:11:52,077 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 852 (http)
2024-03-08 16:11:52,098 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["http-nio-852"]
2024-03-08 16:11:52,102 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2024-03-08 16:11:52,102 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.37]
2024-03-08 16:11:52,483 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2024-03-08 16:11:52,483 INFO (ServletWebServerApplicationContext.java:285)- Root WebApplicationContext: initialization completed in 14330 ms
2024-03-08 16:11:54,804 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'threadPoolTaskExecutor'
2024-03-08 16:11:54,902 INFO (HikariDataSource.java:110)- vapp-inventory-pool - Starting...
2024-03-08 16:11:55,494 INFO (HikariDataSource.java:110)- HikariPool-1 - Starting...
2024-03-08 16:11:55,968 INFO (HikariDataSource.java:123)- HikariPool-1 - Start completed.
2024-03-08 16:11:56,654 INFO (HikariDataSource.java:110)- HikariPool-2 - Starting...
2024-03-08 16:11:56,838 INFO (HikariDataSource.java:123)- HikariPool-2 - Start completed.
2024-03-08 16:11:59,872 INFO (PoolBase.java:535)- vapp-inventory-pool - Driver does not support get/set network timeout for connections. (getNetworkTimeout)
2024-03-08 16:11:59,878 INFO (HikariDataSource.java:123)- vapp-inventory-pool - Start completed.
2024-03-08 16:12:00,020 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-391f1070-7fb6-4c1b-bcac-b495d455a2a2] [subscribe] service.vgroupMapping.my_test_tx_group+SEATA_GROUP+391f1070-7fb6-4c1b-bcac-b495d455a2a2
2024-03-08 16:12:00,038 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-391f1070-7fb6-4c1b-bcac-b495d455a2a2] [add-listener] ok, tenant=391f1070-7fb6-4c1b-bcac-b495d455a2a2, dataId=service.vgroupMapping.my_test_tx_group, group=SEATA_GROUP, cnt=1
2024-03-08 16:12:00,060 INFO (InitUtils.java:65)- initializer namespace from System Property :null
2024-03-08 16:12:00,061 INFO (InitUtils.java:74)- initializer namespace from System Environment :null
2024-03-08 16:12:00,062 INFO (InitUtils.java:84)- initializer namespace from System Property :null
2024-03-08 16:12:00,433 INFO (HostReactor.java:232)- new ips(1) service: SEATA_GROUP@@seata-server@@default -> [{"instanceId":"192.168.2.241#8091#default#SEATA_GROUP@@seata-server","ip":"192.168.2.241","port":8091,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"default","serviceName":"SEATA_GROUP@@seata-server","metadata":{},"ipDeleteTimeout":30000,"instanceIdGenerator":"simple","instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}]
2024-03-08 16:12:00,476 INFO (HostReactor.java:271)- current ips:(1) service: SEATA_GROUP@@seata-server@@default -> [{"instanceId":"192.168.2.241#8091#default#SEATA_GROUP@@seata-server","ip":"192.168.2.241","port":8091,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"default","serviceName":"SEATA_GROUP@@seata-server","metadata":{},"ipDeleteTimeout":30000,"instanceIdGenerator":"simple","instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}]
2024-03-08 16:12:00,485 INFO (NettyClientChannelManager.java:99)- will connect to 192.168.2.241:8091
2024-03-08 16:12:00,491 INFO (RmNettyRemotingClient.java:244)- RM will register :jdbc:mysql://192.168.2.241:6033/vapp_inventory
2024-03-08 16:12:00,501 INFO (NettyPoolableFactory.java:56)- NettyPool create channel to transactionRole:RMROLE,address:192.168.2.241:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.2.241:6033/vapp_inventory', applicationId='inventory-service', transactionServiceGroup='my_test_tx_group'} >
2024-03-08 16:12:01,955 INFO (RmNettyRemotingClient.java:151)- register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x357459c6, L:/192.168.2.230:28136 - R:/192.168.2.241:8091]
2024-03-08 16:12:01,960 INFO (NettyPoolableFactory.java:81)- register success, cost 135 ms, version:1.3.0,role:RMROLE,channel:[id: 0x357459c6, L:/192.168.2.230:28136 - R:/192.168.2.241:8091]
2024-03-08 16:12:02,151 INFO (LogHelper.java:31)- HHH000204: Processing PersistenceUnitInfo [name: default]
2024-03-08 16:12:02,283 INFO (Version.java:44)- HHH000412: Hibernate ORM core version 5.4.18.Final
2024-03-08 16:12:02,807 INFO (JavaReflectionManager.java:49)- HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2024-03-08 16:12:02,911 INFO (Version.java:41)- Redisson 3.12.5
2024-03-08 16:12:03,307 INFO (Dialect.java:172)- HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2024-03-08 16:12:03,807 INFO (ConnectionPool.java:167)- 1 connections initialized for /192.168.2.241:6379
2024-03-08 16:12:03,809 INFO (ConnectionPool.java:167)- 24 connections initialized for /192.168.2.241:6379
2024-03-08 16:12:03,987 INFO (JtaPlatformInitiator.java:52)- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-03-08 16:12:04,023 INFO (AbstractEntityManagerFactoryBean.java:416)- Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-03-08 16:12:05,447 INFO (SLF4JLogger.java:71)- Cluster created with settings {hosts=[192.168.2.241:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2024-03-08 16:12:05,545 INFO (SLF4JLogger.java:71)- Opened connection [connectionId{localValue:1, serverValue:1484}] to 192.168.2.241:27017
2024-03-08 16:12:05,551 INFO (SLF4JLogger.java:71)- Monitor thread successfully connected to server with description ServerDescription{address=192.168.2.241:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4428200}
2024-03-08 16:12:08,984 INFO (StdSchedulerFactory.java:1220)- Using default implementation for ThreadExecutor
2024-03-08 16:12:09,002 INFO (SchedulerSignalerImpl.java:61)- Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2024-03-08 16:12:09,003 INFO (QuartzScheduler.java:229)- Quartz Scheduler v.2.3.2 created.
2024-03-08 16:12:09,007 INFO (RAMJobStore.java:155)- RAMJobStore initialized.
2024-03-08 16:12:09,009 INFO (QuartzScheduler.java:294)- Scheduler meta-data: Quartz Scheduler (v2.3.2) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2024-03-08 16:12:09,009 INFO (StdSchedulerFactory.java:1374)- Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2024-03-08 16:12:09,009 INFO (StdSchedulerFactory.java:1378)- Quartz scheduler version: 2.3.2
2024-03-08 16:12:09,010 INFO (QuartzScheduler.java:2293)- JobFactory set to: com.jsxa.vapp.common.quartz.MyJobFactory@d862de5
2024-03-08 16:12:09,610 WARN (JpaBaseConfiguration.java:220)- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-03-08 16:12:10,654 INFO (InitUtils.java:65)- initializer namespace from System Property :null
2024-03-08 16:12:10,655 INFO (InitUtils.java:74)- initializer namespace from System Environment :null
2024-03-08 16:12:10,655 INFO (InitUtils.java:84)- initializer namespace from System Property :null
2024-03-08 16:12:11,069 INFO (EndpointLinksResolver.java:58)- Exposing 2 endpoint(s) beneath base path '/actuator'
2024-03-08 16:12:11,338 INFO (XxlJobConfig.java:46)- >>>>>>>>>>> xxl-job config init.
2024-03-08 16:12:11,381 INFO (PropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2024-03-08 16:12:11,632 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService
2024-03-08 16:12:11,633 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'asyncExecutor'
2024-03-08 16:12:11,667 WARN (URLConfigurationSource.java:121)- No URLs will be polled as dynamic configuration sources.
2024-03-08 16:12:11,667 INFO (URLConfigurationSource.java:122)- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2024-03-08 16:12:11,675 WARN (URLConfigurationSource.java:121)- No URLs will be polled as dynamic configuration sources.
2024-03-08 16:12:11,676 INFO (URLConfigurationSource.java:122)- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2024-03-08 16:12:12,572 WARN (ThymeleafAutoConfiguration.java:106)- Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2024-03-08 16:12:12,643 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'Nacos-Watch-Task-Scheduler'
2024-03-08 16:12:15,584 WARN (FreeMarkerAutoConfiguration.java:67)- Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2024-03-08 16:12:20,745 WARN (RedisStarterDeprecationWarningAutoConfiguration.java:43)- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
2024-03-08 16:12:24,461 INFO (XxlJobExecutor.java:183)- >>>>>>>>>>> xxl-job register jobhandler success, name:updateVaccineReleaseStatusByRtJobHandler, jobHandler:com.xxl.job.core.handler.impl.MethodJobHandler@6f99d91f[class com.jsxa.vapp.inventory.xxxJob.jobhandler.VaccinaReleaseStatusXxlJob#updateProjectAuctionStatusBmzJobHandler]
2024-03-08 16:12:24,874 INFO (EmbedServer.java:82)- >>>>>>>>>>> xxl-job remoting server start success, nettype = class com.xxl.job.core.server.EmbedServer, port = 9998
2024-03-08 16:12:25,472 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["http-nio-852"]
2024-03-08 16:12:25,509 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 852 (http) with context path ''
2024-03-08 16:12:25,521 INFO (BeatReactor.java:81)- [BEAT] adding beat: BeatInfo{port=852, ip='192.168.1.124', weight=1.0, serviceName='DEFAULT_GROUP@@inventory-service', cluster='DEFAULT', metadata={preserved.register.source=SPRING_CLOUD}, scheduled=false, period=5000, stopped=false} to beat map.
2024-03-08 16:12:25,523 INFO (NamingProxy.java:230)- [REGISTER-SERVICE] a4e3d3db-c95f-49ed-82fa-92d05a9d6673 registering service DEFAULT_GROUP@@inventory-service with instance: Instance{instanceId='null', ip='192.168.1.124', port=852, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={preserved.register.source=SPRING_CLOUD}}
2024-03-08 16:12:25,527 INFO (NacosServiceRegistry.java:75)- nacos registry, DEFAULT_GROUP inventory-service 192.168.1.124:852 register finished
2024-03-08 16:12:26,485 INFO (HostReactor.java:232)- new ips(1) service: DEFAULT_GROUP@@inventory-service@@DEFAULT -> [{"instanceId":"192.168.1.124#852#DEFAULT#DEFAULT_GROUP@@inventory-service","ip":"192.168.1.124","port":852,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@inventory-service","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}]
2024-03-08 16:12:26,486 INFO (HostReactor.java:271)- current ips:(1) service: DEFAULT_GROUP@@inventory-service@@DEFAULT -> [{"instanceId":"192.168.1.124#852#DEFAULT#DEFAULT_GROUP@@inventory-service","ip":"192.168.1.124","port":852,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@inventory-service","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}]
2024-03-08 16:12:26,527 INFO (PushReceiver.java:97)- received push data: {"type":"dom","data":"{\"hosts\":[{\"ip\":\"192.168.1.124\",\"port\":852,\"valid\":true,\"healthy\":true,\"marked\":false,\"instanceId\":\"192.168.1.124#852#DEFAULT#DEFAULT_GROUP@@inventory-service\",\"metadata\":{\"preserved.register.source\":\"SPRING_CLOUD\"},\"enabled\":true,\"weight\":1.0,\"clusterName\":\"DEFAULT\",\"serviceName\":\"DEFAULT_GROUP@@inventory-service\",\"ephemeral\":true}],\"dom\":\"DEFAULT_GROUP@@inventory-service\",\"name\":\"DEFAULT_GROUP@@inventory-service\",\"cacheMillis\":10000,\"lastRefTime\":1709885565209,\"checksum\":\"81797888ad548c056e415bbb09517308\",\"useSpecifiedURL\":false,\"clusters\":\"DEFAULT\",\"env\":\"\",\"metadata\":{}}","lastRefTime":969641041034700} from /192.168.2.241
2024-03-08 16:12:27,837 INFO (DocumentationPluginsBootstrapper.java:160)- Context refreshed
2024-03-08 16:12:27,861 INFO (DocumentationPluginsBootstrapper.java:163)- Found 1 custom documentation plugin(s)
2024-03-08 16:12:28,170 INFO (ApiListingReferenceScanner.java:41)- Scanning for api listing references
2024-03-08 16:12:29,614 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: downloadTemplateExcelUsingGET_1
2024-03-08 16:12:29,639 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: exportToExcelUsingGET_1
2024-03-08 16:12:29,767 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: importByExcelUsingPOST_1
2024-03-08 16:12:31,542 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: downloadTemplateExcelUsingGET_2
2024-03-08 16:12:31,590 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: exportToExcelUsingGET_2
2024-03-08 16:12:31,620 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: importByExcelUsingPOST_2
2024-03-08 16:12:31,685 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: downloadTemplateExcelUsingGET_3
2024-03-08 16:12:32,015 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: exportToExcelUsingGET_3
2024-03-08 16:12:32,022 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: importByExcelUsingPOST_3
2024-03-08 16:12:32,138 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: downloadTemplateExcelUsingGET_4
2024-03-08 16:12:32,178 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: exportToExcelUsingGET_4
2024-03-08 16:12:32,198 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: importByExcelUsingPOST_4
2024-03-08 16:12:32,514 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: downloadTemplateExcelUsingGET_5
2024-03-08 16:12:32,989 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: exportToExcelUsingGET_5
2024-03-08 16:12:32,998 INFO (CachingOperationNameGenerator.java:40)- Generating unique operation named: importByExcelUsingPOST_5
2024-03-08 16:12:33,027 INFO (SchedulerFactoryBean.java:732)- Will start Quartz Scheduler [schedulerFactoryBean] in 1 seconds
2024-03-08 16:12:33,037 INFO (DeferredRepositoryInitializationListener.java:49)- Triggering deferred initialization of Spring Data repositories…
2024-03-08 16:12:33,038 INFO (DeferredRepositoryInitializationListener.java:53)- Spring Data repositories initialized!
2024-03-08 16:12:33,233 INFO (SysInit.java:52)- step1 ---> 开始同步接种人员信息到Redis
2024-03-08 16:12:33,392 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, sex, age, mobile, id_number, open_id, address, work_unit, person_type, dose_status, firstDose_id, firstDose_name, firstDose_unit, firstDose_time, latestDose_id, latestDose_name, latestDose_unit, latestDose_time, create_time, update_time from vaccination_person 
2024-03-08 16:12:34,040 INFO (SchedulerFactoryBean.java:748)- Starting Quartz Scheduler now, after delay of 1 seconds
2024-03-08 16:12:34,043 INFO (QuartzScheduler.java:547)- Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2024-03-08 16:12:37,782 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2024-03-08 16:12:43,199 INFO (SQLLogger.java:73)- Logic SQL: select id, name, sex, age, mobile, id_number, open_id, address, work_unit, person_type, dose_status, firstDose_id, firstDose_name, firstDose_unit, firstDose_time, latestDose_id, latestDose_name, latestDose_unit, latestDose_time, create_time, update_time from vaccination_person
2024-03-08 16:12:43,199 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 16:12:43,426 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 25
2024-03-08 16:12:45,167 INFO (SysInit.java:60)- step2 ---> 开始同步接种地点信息到Redis
2024-03-08 16:12:45,177 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, address_code, org_id, org_name, contact_name, contact_mobile, status, order_num, create_time from vaccination_site 
2024-03-08 16:12:45,203 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2024-03-08 16:12:45,204 INFO (SQLLogger.java:73)- Logic SQL: select id, name, address_code, org_id, org_name, contact_name, contact_mobile, status, order_num, create_time from vaccination_site
2024-03-08 16:12:45,205 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 16:12:45,208 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 16:12:45,215 INFO (SysInit.java:69)- step3 ---> 开始同步疫苗信息到Redis
2024-03-08 16:12:45,218 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, org_id, org_name, name, manufacturer, batch_number, total_dose, dose_interval, stock, oos_url, order_num, status, create_time from vaccine 
2024-03-08 16:12:45,220 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2024-03-08 16:12:45,220 INFO (SQLLogger.java:73)- Logic SQL: select id, org_id, org_name, name, manufacturer, batch_number, total_dose, dose_interval, stock, oos_url, order_num, status, create_time from vaccine
2024-03-08 16:12:45,220 INFO (SQLLogger.java:73)- Actual SQL(simple): [ds-0] ::: 1
2024-03-08 16:12:45,224 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2024-03-08 16:12:45,255 INFO (StartupInfoLogger.java:61)- Started InventoryApplication in 83.667 seconds (JVM running for 91.55)
2024-03-08 16:12:45,266 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] seata.yml+common+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 16:12:45,266 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=seata.yml, group=common, cnt=1
2024-03-08 16:12:45,267 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] canal.yml+common+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 16:12:45,267 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=canal.yml, group=common, cnt=1
2024-03-08 16:12:45,267 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] mongo.yml+common+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 16:12:45,268 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=mongo.yml, group=common, cnt=1
2024-03-08 16:12:45,268 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] inventory-service.yml+inventory-service+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 16:12:45,268 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=inventory-service.yml, group=inventory-service, cnt=1
2024-03-08 16:12:45,269 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] inventory-service+inventory-service+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 16:12:45,269 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=inventory-service, group=inventory-service, cnt=1
2024-03-08 16:12:45,269 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] inventory-service-common.yml+inventory-service+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 16:12:45,269 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=inventory-service-common.yml, group=inventory-service, cnt=1
2024-03-08 16:12:45,270 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] redis.yml+common+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 16:12:45,270 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=redis.yml, group=common, cnt=1
2024-03-08 16:12:45,271 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] jwt.yml+common+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 16:12:45,271 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=jwt.yml, group=common, cnt=1
2024-03-08 16:12:45,273 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] minio.yml+common+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 16:12:45,273 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=minio.yml, group=common, cnt=1
2024-03-08 16:12:45,274 INFO (ClientWorker.java:169)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [subscribe] inventory-service-dev.yml+inventory-service+a4e3d3db-c95f-49ed-82fa-92d05a9d6673
2024-03-08 16:12:45,274 INFO (CacheData.java:92)- [fixed-192.168.2.241_8848-a4e3d3db-c95f-49ed-82fa-92d05a9d6673] [add-listener] ok, tenant=a4e3d3db-c95f-49ed-82fa-92d05a9d6673, dataId=inventory-service-dev.yml, group=inventory-service, cnt=1
2024-03-08 16:12:46,453 INFO (NettyClientChannelManager.java:99)- will connect to 192.168.2.241:8091
2024-03-08 16:12:46,454 INFO (NettyPoolableFactory.java:56)- NettyPool create channel to transactionRole:TMROLE,address:192.168.2.241:8091,msg:< RegisterTMRequest{applicationId='inventory-service', transactionServiceGroup='my_test_tx_group'} >
2024-03-08 16:12:47,329 INFO (TmNettyRemotingClient.java:138)- register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xcd7b74b3, L:/192.168.2.230:28297 - R:/192.168.2.241:8091]
2024-03-08 16:12:47,331 INFO (NettyPoolableFactory.java:81)- register success, cost 8 ms, version:1.3.0,role:TMROLE,channel:[id: 0xcd7b74b3, L:/192.168.2.230:28297 - R:/192.168.2.241:8091]
2024-03-08 16:12:51,609 INFO (SLF4JLogger.java:71)- Opened connection [connectionId{localValue:2, serverValue:1485}] to 192.168.2.241:27017
2024-03-08 16:12:52,725 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-03-08 16:12:52,725 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2024-03-08 16:12:52,752 INFO (FrameworkServlet.java:547)- Completed initialization in 26 ms
